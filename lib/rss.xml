<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Bioinfo]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>Bioinfo</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Tue, 31 Dec 2024 23:54:07 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Tue, 31 Dec 2024 23:54:07 GMT</pubDate><ttl>60</ttl><dc:creator/><item><title><![CDATA[HPC]]></title><description><![CDATA[<a class="tag" href="?query=tag:hpc" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#hpc</a> 
 <br><a href=".?query=tag:hpc" class="tag" target="_blank" rel="noopener nofollow">#hpc</a> <br>HPC (High-Performance Computing) are usually a cluster, which consists of interconnected server nodes.<br>
<br>Use <a data-href="SSH" href="linux-and-hpc\hpc\ssh.html" class="internal-link" target="_self" rel="noopener nofollow">SSH</a> to login to Login Nodes
<br>You can split large tasks into different Compute Nodes using <a data-href="Slurm" href="linux-and-hpc\hpc\slurm.html" class="internal-link" target="_self" rel="noopener nofollow">Slurm</a>.
<br><img alt="HPC structure" src="https://i.imgur.com/kE4kUmW.png" referrerpolicy="no-referrer"><br><br>
<br>Parallel Processing: Clusters allow tasks to be split into smaller pieces, processed simultaneously across many nodes, speeding up computations.
<br>Distributed Memory: Each node in a cluster has its own memory, and data is shared between nodes via a network.
<br>Scalability: Clusters can easily grow by adding more nodes to increase computational power.
<br><br>
<br>Large Simulations: For example, weather forecasting or molecular modeling.
<br>Big Data Analysis: Handling large datasets in fields like genomics or finance.
<br>Machine Learning: Training complex AI models across many nodes.
<br>Clusters are managed with job schedulers (like <a data-href="Slurm" href="linux-and-hpc\hpc\slurm.html" class="internal-link" target="_self" rel="noopener nofollow">Slurm</a>) that distribute computational tasks efficiently across the nodes, ensuring optimal resource utilization.<br><br>
<br>Controller:&nbsp;slurmctld
<br>Database:&nbsp;slurmdbd
<br>Compute Nodes:&nbsp;slurmd<br>
<img alt="Slurm Arch" src="https://slurm.schedmd.com/arch.gif" referrerpolicy="no-referrer">
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://cl.indiana.edu/Supercomputing_at_IU.pdf" target="_blank">https://cl.indiana.edu/Supercomputing_at_IU.pdf</a>
<br><a rel="noopener nofollow" class="external-link" href="https://www.ibm.com/topics/hpc" target="_blank">https://www.ibm.com/topics/hpc</a>
<br><a rel="noopener nofollow" class="external-link" href="https://slurm.schedmd.com/overview.html" target="_blank">https://slurm.schedmd.com/overview.html</a>
]]></description><link>linux-and-hpc\hpc\hpc.html</link><guid isPermaLink="false">linux-and-hpc/hpc/HPC.md</guid><pubDate>Tue, 31 Dec 2024 21:14:08 GMT</pubDate><enclosure url="https://i.imgur.com/kE4kUmW.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/kE4kUmW.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Slurm]]></title><description><![CDATA[<a class="tag" href="?query=tag:hpc" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#hpc</a> <a class="tag" href="?query=tag:job-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#job-manager</a> 
 <br><a href=".?query=tag:hpc" class="tag" target="_blank" rel="noopener nofollow">#hpc</a> <a href=".?query=tag:job-manager" class="tag" target="_blank" rel="noopener nofollow">#job-manager</a><br><a data-tooltip-position="top" aria-label="https://slurm.schedmd.com/overview.html" rel="noopener nofollow" class="external-link" href="https://slurm.schedmd.com/overview.html" target="_blank">Slurm</a> is used to request computing resources on cluster.<br>Common Commands:<br>
<br>sbatch script.sh
<br>srun --time=4:00:00 --cpus-per-task=4 --mem=16GB command
<br>squeue -u $USER check your jobs
<br>scancel &lt;job_id&gt; cancel your job
<br>seff &lt;job_id&gt; efficiency of that job (CPU and memory usage)
<br><br>
<br>sbatch is for background jobs. It will not be killed if you close the terminal.
<br>srun is for foreground jobs. It will be killed if terminal is closed.
<br><br>
<br>Options after double hashtag will not be applied.
<br>Delete singularity, micromamba, or module if you don’t use them.
<br>#!/usr/bin/bash
#SBATCH --cpus-per-task=4
#SBATCH --time=0-6:00:00
#SBATCH --mem=8GB
##SBATCH --gres=gpu:1
#SBATCH --job-name=bash
#SBATCH --output=slurm_%j.out
##SBATCH --mail-type=END

################################################################
# Multi-core Template for SLURM but can used for normal bash script
#
# Special variables:
#   $cpus: number of CPUs (set by #SBATCH --cpus-per-task)
#   $mem: memory in GB    (set by #SBATCH --mem)
#   $job_name: job name   (set by #SBATCH --job-name)
# 
# NOTE:
#  - Settings start with ##SBATCH will not be applied to SLURM
#  - If not in SLURM, it will extract the SLURM settings in this script
#  - If in TMUX, it will rename the window when running and done
#  - Start your code at line 64 (region YOUR CODE)
#
################################################################

#region PARSING SLURM SETTINGS and FUNCTIONS
START_TIME=`date +%s`
if [ -n "$SLURM_JOB_ID" ]; then
    ncpu=$SLURM_CPUS_PER_TASK
    mem=$(($SLURM_MEM_PER_NODE / 1024)) # convert to GB
    prompt_message="SLURM Job ID: $SLURM_JOB_ID"
else
    # Extract the SLURM SETTINGS in this script if not running in SLURM
    script_file="${BASH_SOURCE[0]:-$0}"
    ncpu=$(sed -n 's/^#SBATCH --cpus-per-task=//p' "$script_file")
    mem=$(sed -n 's/^#SBATCH --mem=//p' "$script_file")
    mem=${mem%*GB} # remove GB
    prompt_message="PID: $$"
fi

job_name=$(sed -n 's/^#SBATCH --job-name=//p' "$script_file")

## function to rename tmux window
rename_tmux_window() {
    if [ -n "$TMUX" ]; then
        tmux rename-window "$1"
    fi
}

## function to check NVIDIA GPU and set nv
if [[ -n `ls /dev | grep nvidia` ]]; then
    echo "has an NVIDIA GPU"
    nv="--nv"
fi
#endregion

echo [`date +"%Y-%m-%d %T"`] START $prompt_message, NCPU: $ncpu MEM: ${mem}GB
rename_tmux_window "$job_name `date +'%Y-%m-%d %H:%M'`"

# Decrease mem before applying it to program. Most of time, you will not use $mem
mem=$((mem - 5))

#region YOUR CODE
## micromamba
# eval "$(micromamba shell hook --shell bash)"
## conda
eval "$(conda shell.bash hook)"

## module
module purge

## singularity container
singularity exec $nv \
    $SIF bash -c '
        #source /ext3/env.sh
        #conda activate base
        exit
    '
#endregion

## Print running time
END_TIME=`date +%s`
RUN_TIME=$((END_TIME - START_TIME))
RUN_TIME_DAYS=$(($RUN_TIME / 86400))
RUN_TIME_HOURS=$(($RUN_TIME / 3600 % 24))
RUN_TIME_MINUTES=$(($RUN_TIME / 60 % 60))
RUN_TIME_SECONDS=$(($RUN_TIME % 60))

echo [`date +"%Y-%m-%d %T"`] END $prompt_message, Elapsed: $RUN_TIME_DAYS days, $RUN_TIME_HOURS hours, $RUN_TIME_MINUTES minutes, $RUN_TIME_SECONDS seconds
rename_tmux_window "DONE $job_name Elapsed $RUN_TIME_DAYS-$RUN_TIME_HOURS:$RUN_TIME_MINUTES:$RUN_TIME_SECONDS"

<br><br>sbatch-pipeline.sh<br>#!/bin/bash

ID=$(sbatch --parsable $1) # --parsable to get SLURM_JOB_ID
shift 
for script in "$@"; do
  # +5 means it will start five minutes after the previous job
  ID=$(sbatch --parsable --dependency=after:${ID}:+5 $script)
done
<br>Usage: sbatch-pipeline.sh script1.slurm script2.slurm script3.slurm<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://slurm.schedmd.com/overview.html" target="_blank">https://slurm.schedmd.com/overview.html</a>
<br><a rel="noopener nofollow" class="external-link" href="https://slurm.schedmd.com/sbatch.html" target="_blank">https://slurm.schedmd.com/sbatch.html</a>
<br><a rel="noopener nofollow" class="external-link" href="https://docs.hpc.shef.ac.uk/en/latest/referenceinfo/scheduler/SLURM/SLURM-environment-variables.html" target="_blank">https://docs.hpc.shef.ac.uk/en/latest/referenceinfo/scheduler/SLURM/SLURM-environment-variables.html</a>
]]></description><link>linux-and-hpc\hpc\slurm.html</link><guid isPermaLink="false">linux-and-hpc/hpc/Slurm.md</guid><pubDate>Tue, 31 Dec 2024 18:45:35 GMT</pubDate></item><item><title><![CDATA[apt]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:ubuntu" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ubuntu</a> <a class="tag" href="?query=tag:package-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#package-manager</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:ubuntu" class="tag" target="_blank" rel="noopener nofollow">#ubuntu</a> <a href=".?query=tag:package-manager" class="tag" target="_blank" rel="noopener nofollow">#package-manager</a> <br>NOTE: Always update before installing/upgrading packages<br><br><br># add PPA
sudo add-apt-repository ppa:&lt;ppa-name&gt;
# e.g. NeoVim
sudo add-apt-repository ppa:neovim-ppa/unstable

# remove PPA
sudo add-apt-repository --remove ppa:&lt;ppa-name&gt;
<br><br># Hold a package
sudo apt-mark hold &lt;package-name&gt;

# Check the hold status
apt-mark showhold

# Unhold
sudo apt-mark unhold &lt;package-name&gt;
]]></description><link>linux-and-hpc\linux\ubuntu\apt.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/apt.md</guid><pubDate>Tue, 31 Dec 2024 22:01:09 GMT</pubDate></item><item><title><![CDATA[R Packages Installation Troubleshooting]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:ubuntu" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ubuntu</a> <a class="tag" href="?query=tag:R" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#R</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:ubuntu" class="tag" target="_blank" rel="noopener nofollow">#ubuntu</a> <a href=".?query=tag:R" class="tag" target="_blank" rel="noopener nofollow">#R</a> <br>
<br>Error: failed to build the package
<br>Cause: Ubuntu packages not installed
<br>Solution: sudo apt install
<br><br>How to know which package you want to install?<br>2 conditions:<br>
<br>The R will tell you which packages you need to install, like: apt install &lt;package name&gt;
<br>Find it by yourself

<br>Find which step you got the error
<br>Search for the missing library
<br>Find the name and the version of the package
<br>Install it


<br><br>Error: Error installing package 'curl':
================================

* installing *source* package ‘curl’ ...
** package ‘curl’ successfully unpacked and MD5 sums checked
** using staged installation
Found pkg-config cflags and libs!
Using PKG_CFLAGS=-I/usr/include/x86_64-linux-gnu
Using PKG_LIBS=-lcurl
--------------------------- [ANTICONF] --------------------------------
Configuration failed because **libcurl was not found**. Try installing:
 * deb: libcurl4-openssl-dev (Debian, Ubuntu, etc)
 * rpm: libcurl-devel (Fedora, CentOS, RHEL)
If libcurl is already installed, check that 'pkg-config' is in your
PATH and PKG_CONFIG_PATH contains a libcurl.pc file. If pkg-config
is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:
R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'
-------------------------- [ERROR MESSAGE] ---------------------------
In file included from /workspace/lab/hanlab/software/bin/conda/envs/r44/x86_64-conda-linux-gnu/sysroot/usr/include/features.h:375,
                 from /usr/include/x86_64-linux-gnu/sys/types.h:25,
                 from /usr/include/x86_64-linux-gnu/curl/system.h:430,
                 from /usr/include/x86_64-linux-gnu/curl/curl.h:35,
                 from &lt;stdin&gt;:1:
/usr/include/x86_64-linux-gnu/sys/cdefs.h:146:55: error: missing binary operator before token "("
  146 | #if __USE_FORTIFY_LEVEL == 3 &amp;&amp; (__glibc_clang_prereq (9, 0)                  \\
      |                                                       ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:634:49: error: missing binary operator before token "("
  634 | #if __GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5)
      |                                                 ^
In file included from /workspace/lab/hanlab/software/bin/conda/envs/r44/x86_64-conda-linux-gnu/sysroot/usr/include/stdio.h:937,
                 from /usr/include/x86_64-linux-gnu/curl/curl.h:46:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:233:17: error: missing binary operator before token "("
  233 | #if __GLIBC_USE (DEPRECATED_GETS)
      |                 ^
--------------------------------------------------------------------
ERROR: configuration failed for package ‘curl’
* removing ‘/workspace/lab/hanlab/chengz63/scPipeline/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-conda-linux-gnu/.renv/1/curl’
install of package 'curl' failed [error code 1]
<br>Simply install libcurl: apt install -y libcurl4-openssl-dev<br><br>
<br>OS Version: Ubuntu 24.04
<br>Package to install: reshape2
<br><br>When you get an error, 2 ways:<br>
<br>Search it in AI tools (ChatGPT), they will tell you which part goes run.
<br>Find the missing packages by yourself.
<br>Error: Error installing package 'reshape2':
====================================

* installing *source* package ‘reshape2’ ...
** package ‘reshape2’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0’
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG&nbsp; -I'/home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/Rcpp/include'&nbsp;&nbsp;&nbsp;&nbsp; -fPIC&nbsp; -g -O2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -ffile-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -mbranch-protection=standard -fdebug-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=/usr/src/r-base-4.3.3-2build2 -Wdate-time -D_FORTIFY_SOURCE=3&nbsp; -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG&nbsp; -I'/home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/Rcpp/include'&nbsp;&nbsp;&nbsp;&nbsp; -fPIC&nbsp; -g -O2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -ffile-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -mbranch-protection=standard -fdebug-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=/usr/src/r-base-4.3.3-2build2 -Wdate-time -D_FORTIFY_SOURCE=3&nbsp; -c melt.cpp -o melt.o
g++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o reshape2.so RcppExports.o melt.o -L/usr/lib/R/lib -lR
installing to /home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/00LOCK-reshape2/00new/reshape2/libs
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
Error in dyn.load(file, DLLpath = DLLpath, ...) :
&nbsp; unable to load shared object '/home/ubuntu/.cache/R/renv/cache/v5/R-4.3/aarch64-unknown-linux-gnu/stringi/1.8.4/39e1144fd75428983dc3f63aa53dfa91/stringi/libs/stringi.so':&nbsp; **libicui18n.so.70: cannot open shared object file: No such file or directory**
Calls: &lt;Anonymous&gt; ... namespaceImport -&gt; loadNamespace -&gt; library.dynam -&gt; dyn.load
Execution halted
ERROR: lazy loading failed for package ‘reshape2’
* removing ‘/home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/reshape2’
install of package 'reshape2' failed [error code 1]
<br>
<br>Look for which so file is missing. (No such file or directory), libicui18n.so.70 in this case

<br>libicui18n.so.70: cannot open shared object file: No such file or directory


<br>Search libicui18n.so.70 ubuntu.
<br>So install the libicu (version 70)
<br><br>
<br>In Ubuntu 24, the version of libicu is 74 not 70.

<br>Result of apt search libicu: libicu-dev, libicu74


<br>But we need libicu70
<br>
<br>Visit <a rel="noopener nofollow" class="external-link" href="https://launchpad.net/ubuntu" target="_blank">https://launchpad.net/ubuntu</a>
<br>Search libicu70
<br>Click icu, you will go to <a rel="noopener nofollow" class="external-link" href="https://launchpad.net/ubuntu/+source/icu" target="_blank">https://launchpad.net/ubuntu/+source/icu</a>
<br>Click libicu70<br>
<img alt="launchpad-1" src="https://i.imgur.com/6ZydVU4.png" referrerpolicy="no-referrer">
<br>In build, find the architecture fits your computer (most of the time: amd64 but My machine is arm64)<br>
<img alt="launchpad-2" src="https://i.imgur.com/xaJP0IB.png" referrerpolicy="no-referrer">
<br>Down load the deb package in binaries or built files. Copy the link and wget.<br>
<img alt="launchpad-3" src="https://i.imgur.com/aDGrqQT.png" referrerpolicy="no-referrer">
<br>Install it with dpkg: sudo dpkg -i &lt;&gt;.deb
]]></description><link>linux-and-hpc\linux\ubuntu\r-packages-installation-troubleshooting.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/R Packages Installation Troubleshooting.md</guid><pubDate>Tue, 31 Dec 2024 22:15:36 GMT</pubDate><enclosure url="https://i.imgur.com/6ZydVU4.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/6ZydVU4.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Remove snap from Ubuntu]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:ubuntu" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ubuntu</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:ubuntu" class="tag" target="_blank" rel="noopener nofollow">#ubuntu</a> <br>TL;DR:<br><br><br>sudo rm -rf /var/cache/snapd/
sudo apt -y autoremove --purge snapd gnome-software-plugin-snap
rm -fr ~/snap
sudo apt-mark hold snapd
<br><br>Remove Ubuntu Firefox (snap version)<br>sudo snap remove firefox

# If failed, run this: disable gnome extensions and hunspell service and remove firefox
sudo rm /etc/apparmor.d/usr.bin.firefox 
sudo rm /etc/apparmor.d/local/usr.bin.firefox
sudo systemctl stop var-snap-firefox-common-host\\\\x2dhunspell.mount
sudo systemctl disable var-snap-firefox-common-host\\\\x2dhunspell.mount
sudo snap remove firefox
<br>Add repository and set priority<br>sudo add-apt-repository ppa:mozillateam/ppa

echo '
Package: *
Pin: release o=LP-PPA-mozillateam
Pin-Priority: 1001

Package: firefox
Pin: version 1:1snap*
Pin-Priority: -1
' | sudo tee /etc/apt/preferences.d/mozilla-firefox
<br>Update list and install Firefox<br>sudo apt update
sudo apt install firefox
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://askubuntu.com/questions/1035915/how-to-remove-snap-from-ubuntu" target="_blank">https://askubuntu.com/questions/1035915/how-to-remove-snap-from-ubuntu</a>
<br><a rel="noopener nofollow" class="external-link" href="https://askubuntu.com/questions/1399383/how-to-install-firefox-as-a-traditional-deb-package-without-snap-in-ubuntu-22/1404401#1404401" target="_blank">https://askubuntu.com/questions/1399383/how-to-install-firefox-as-a-traditional-deb-package-without-snap-in-ubuntu-22/1404401#1404401</a>
]]></description><link>linux-and-hpc\linux\ubuntu\remove-snap-from-ubuntu.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/Remove snap from Ubuntu.md</guid><pubDate>Tue, 31 Dec 2024 22:11:35 GMT</pubDate></item><item><title><![CDATA[My Notes]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:ubuntu" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ubuntu</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:ubuntu" class="tag" target="_blank" rel="noopener nofollow">#ubuntu</a> <br><a data-tooltip-position="top" aria-label="https://ubuntu.com/" rel="noopener nofollow" class="external-link" href="https://ubuntu.com/" target="_blank"><strong></strong></a>Ubuntu is one of the most popular Linux distributions, known for its user-friendliness, community support, and robust performance across a wide range of applications, from personal computers to servers and cloud infrastructure.<br><br>
<br><a data-href="apt" href="linux-and-hpc\linux\ubuntu\apt.html" class="internal-link" target="_self" rel="noopener nofollow">apt</a> (Ubuntu package manager)
<br><a data-href="Remove snap from Ubuntu" href="linux-and-hpc\linux\ubuntu\remove-snap-from-ubuntu.html" class="internal-link" target="_self" rel="noopener nofollow">Remove snap from Ubuntu</a>
<br><a data-href="R Packages Installation Troubleshooting" href="linux-and-hpc\linux\ubuntu\r-packages-installation-troubleshooting.html" class="internal-link" target="_self" rel="noopener nofollow">R Packages Installation Troubleshooting</a>
]]></description><link>linux-and-hpc\linux\ubuntu\ubuntu.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/Ubuntu.md</guid><pubDate>Tue, 31 Dec 2024 22:18:49 GMT</pubDate></item><item><title><![CDATA[Bash Script]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:bash" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#bash</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:bash" class="tag" target="_blank" rel="noopener nofollow">#bash</a><br>Bash script is a text file containing a series of commands written for the Bash shell.<br>
<br>Shebang (#!/bin/bash): The first line specifying using bash to run this.
<br>Make executable: Run chmod +x myscript.sh to make it executable
<br>Execute: Run with ./myscript.sh or bash myscript.sh
<br><a data-href="bashrc vs bash_profile" href="linux-and-hpc\linux\bashrc-vs-bash_profile.html" class="internal-link" target="_self" rel="noopener nofollow">bashrc vs bash_profile</a>

<br>bashrc for all bash script
<br>bash_profile for login shell only


<br>#!/bin/bash

ls # do something
<br><br>
<br>creating: variable_name="value" (no space)
<br>accessing: $variable_name
<br>printing: echo $variable_name
<br>arithmetic: $(( num1 + num2 )) (+-*/)
<br>string concatenation: result="$string1 $string2"
<br><br><br><br>
<br>${variable:-default_value} If variable is unset or empty, default_value is used.
<br>get filename or extension
<br>FILE=example.tar.gz
echo "${FILE%%.*}" # example
echo "${FILE%.*}"  # example.tar
echo "${FILE#*.}"  # tar.gz
echo "${FILE##*.}" # gz
<br>
<br>get script location
<br>script_dir="$(dirname "${BASH_SOURCE[0]}")"
<br><br><br>if [ condition1 ]; then
    # Commands if condition1 is true
elif [ condition2 ]; then
    # Commands if condition2 is true
else
    # Commands if neither condition1 nor condition2 are true
fi
<br><br>case $variable in
    pattern1 | pattern2)
        # Commands if pattern1 or pattern2 match
        ;;
    pattern3)
        # Commands if pattern3 matches
        ;;
    *)
        # Commands if no pattern matches
        ;;
esac

<br><br>The for loop is used to iterate over a series of values, such as a list or a range of numbers.<br>for variable in "value1 value2 value3"; do
    # Commands to be executed
done

for arg in $@; do
	echo Arguments $arg
done

for i in {1..5}; do
    echo "Number: $i"
done
<br><br>You can also use a for loop with a C-style syntax, where you explicitly define the initialization, condition, and increment/decrement.<br>Syntax:<br>for (( initialization; condition; increment )); do
    # Commands to be executed
done
<br>for (( i=1; i&lt;=5; i++ )); do
    echo "Number: $i"
done
<br><br>The while loop executes as long as a condition is true. It checks the condition before executing the commands inside the loop.<br>while [ condition ]; do
    # Commands to be executed
done
<br><br>#!/bin/bash

for i in {1..10}; do
    if [ $i -eq 5 ]; then
        echo "Breaking the loop at i=$i"
        break
    elif [ $i -eq 3 ]; then
        continue  # Skip iteration 3
    fi
    echo "i=$i"
done
<br><br>In Bash, you can use various conditions to compare values, check for patterns, and make decisions based on logical conditions.<br>Always use double quote if you are using bash.<br><br>For comparing numbers, you typically use the [ (or test) command with operators like -gt, -lt, -ge, -le, -eq, and -ne.<br><br>But in bash you can also use double square [[ ]] for extended test command.<br><br><br>For comparing strings, you use different operators such as =, !=, -z, and -n.<br><br><br>To match strings against regular expressions, use the [[ ... ]] test with the =~ operator.<br><br>#!/bin/bash

string="hello123"

if [[ "$string" =~ ^hello[0-9]+$ ]]; then
    echo "String matches the regex"
else
    echo "String does not match the regex"
fi

<br><br>To combine multiple conditions, use logical operators like -a (AND), -o (OR), and ! (NOT).<br><br>But in bash you can also use double square [[ ]] for extended test command.<br><br><br>Bash also supports file-related conditions. These can check if files exist, are readable, writable, or executable.<br><br><br>You can combine conditions using &amp;&amp; (AND) and || (OR) in an if statement.<br><br><br><br>Example<br>#!/bin/bash

# Function definition
calculate() {
    local result=$(( $1 * $2 ))  # Local variable
    echo $result  # Return value via echo
}

# Function call with arguments
result=$(calculate 5 10)  # Capture return value
echo "Result is: $result"

]]></description><link>linux-and-hpc\linux\bash-script.html</link><guid isPermaLink="false">linux-and-hpc/linux/Bash Script.md</guid><pubDate>Tue, 31 Dec 2024 22:23:01 GMT</pubDate></item><item><title><![CDATA[bashrc vs bash_profile]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:bash" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#bash</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:bash" class="tag" target="_blank" rel="noopener nofollow">#bash</a> <br>Both ~/.bashrc and ~/.bash_profile are configuration files for Bash. They are used to set environment variables, aliases, functions, and customize the user shell environment.<br>
<br>.bashrc is for non-login shells (interactive or run a script)
<br>.bash_profile is for login shells (SSH login).
<br>OR you just put all the settings in .bashrc<br><br>
<br>Purpose: Executed for interactive non-login shells (run a script or open a new terminal).
<br>Common Usage:

<br>Set aliases, functions, and custom shell behavior.
<br>Modify environment variables that are relevant to the interactive shell session.
<br>Example: Setting up color support or shell prompt customization.


<br># ~/.bashrc
alias ll='ls -la'
export PATH=$PATH:/home/user/bin
<br><br>
<br>Purpose: Executed for login shells (when you log in via the terminal, SSH, or console).
<br>Common Usage:

<br>Set environment variables that should apply to all shell sessions (interactive and non-interactive).
<br>Typically, this file is used to configure user environment settings, such as PATH, USER, LANG, etc.
<br>It often sources ~/.bashrc to apply those configurations to login shells as well.


<br>Example content:<br># ~/.bash_profile
export PATH=$PATH:/usr/local/bin
export EDITOR=vim

# Source ~/.bashrc for login shells
if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi
<br><br>
<br>Source ~/.bashrc in ~/.bash_profile to ensure your interactive shell settings apply to login shells as well:
<br># In ~/.bash_profile
if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi
]]></description><link>linux-and-hpc\linux\bashrc-vs-bash_profile.html</link><guid isPermaLink="false">linux-and-hpc/linux/bashrc vs bash_profile.md</guid><pubDate>Tue, 31 Dec 2024 22:22:20 GMT</pubDate></item><item><title><![CDATA[Common Linux Commands]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:gpt" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gpt</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:gpt" class="tag" target="_blank" rel="noopener nofollow">#gpt</a><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>linux-and-hpc\linux\common-linux-commands.html</link><guid isPermaLink="false">linux-and-hpc/linux/Common Linux Commands.md</guid><pubDate>Tue, 31 Dec 2024 21:53:19 GMT</pubDate></item><item><title><![CDATA[Environment Variables]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <br>Environment variables are key-value pairs that define the environment in which processes run.<br>
<br>env view all env variables
<br>export VAR setting env variable
<br>echo $VAR printing env variable
<br>unset VAR unsetting variable
<br>PATH: export PATH=/abs/path/to/directory:$PATH<br><br>
<br>System Configuration: Control system behavior (e.g., paths, locale, user settings).
<br>User Customization: Allow users to modify their environment, like setting default editor.
<br>Process Settings: Provide runtime parameters to applications and scripts.
<br><br><br><br>
<br>Temporary (Session-only):
<br>export MY_VAR="value"
<br>This only lasts for the duration of the session or the current shell.<br>
<br>Permanent (Across sessions): Add the export statement to configuration files like ~/.bashrc or ~/.bash_profile.
<br>echo 'export MY_VAR="value"' &gt;&gt; ~/.bashrc
<br>After editing ~/.bashrc, reload it:<br>source ~/.bashrc
<br><br>
<br>Print value: echo $VAR_NAME
<br>List all environment variables env or printenv
<br><br>
<br>To remove a variable: unset VAR_NAME
]]></description><link>linux-and-hpc\linux\environment-variables.html</link><guid isPermaLink="false">linux-and-hpc/linux/Environment Variables.md</guid><pubDate>Tue, 31 Dec 2024 21:40:45 GMT</pubDate></item><item><title><![CDATA[Linux]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a><br>🐧 Linux is an open-source, Unix-like operating system kernel, first released by Linus Torvalds in 1991.<br>Personally, Linux is great for servers but bad for desktops. It lacks a lot of software: Acrobat, Office, and official cloud drive clients. You can find alternatives. But they are not as good as the original one.<br><br>
<br>Large Servers or Clusters prefer Red Hat for its security and long-term support.
<br>For personal use, choose whatever you want. (Ubuntu for beginner)
<br><br><br>To use Linux server, you need to know:<br>
<br><a data-href="SSH" href="linux-and-hpc\hpc\ssh.html" class="internal-link" target="_self" rel="noopener nofollow">SSH</a>
<br><a data-href="Common Linux Commands" href="linux-and-hpc\linux\common-linux-commands.html" class="internal-link" target="_self" rel="noopener nofollow">Common Linux Commands</a>
<br><a data-href="Linux Permissions" href="linux-and-hpc\linux\linux-permissions.html" class="internal-link" target="_self" rel="noopener nofollow">Linux Permissions</a>
<br><a data-href="Environment Variables" href="linux-and-hpc\linux\environment-variables.html" class="internal-link" target="_self" rel="noopener nofollow">Environment Variables</a>
<br>You may need to know:<br>
<br><a data-href="bashrc vs bash_profile" href="linux-and-hpc\linux\bashrc-vs-bash_profile.html" class="internal-link" target="_self" rel="noopener nofollow">bashrc vs bash_profile</a>
<br><a data-href="Bash Script" href="linux-and-hpc\linux\bash-script.html" class="internal-link" target="_self" rel="noopener nofollow">Bash Script</a>
<br><a data-href="Symbolic Link" href="linux-and-hpc\linux\symbolic-link.html" class="internal-link" target="_self" rel="noopener nofollow">Symbolic Link</a> (symlink)
<br>Other Tips:<br>
<br><a data-href="stdin stdout stderr" href="linux-and-hpc\linux\stdin-stdout-stderr.html" class="internal-link" target="_self" rel="noopener nofollow">stdin stdout stderr</a>
]]></description><link>linux-and-hpc\linux\linux.html</link><guid isPermaLink="false">linux-and-hpc/linux/Linux.md</guid><pubDate>Tue, 31 Dec 2024 23:49:35 GMT</pubDate></item><item><title><![CDATA[Linux Permissions]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:permission" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#permission</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:permission" class="tag" target="_blank" rel="noopener nofollow">#permission</a><br>$ ls -l file.sh
-rwxr-x--x 1 ubuntu ubuntu 0 Nov 24 04:51 file.sh
│ │  │  │  │    │      │   │       │       └─ Name
│ │  │  │  │    │      │   │       └─ Last modified datetime
│ │  │  │  │    │      │   └─ File size (bytes)
│ │  │  │  │    │      └─ Group name
│ │  │  │  │    └─ Owner name
│ │  │  │  └─ Hard link count
│ │  │  └─ Permissions for others (Others can only execute it)
│ │  └─ Permissions for group     (Group and read and execute it)
│ └─ Permissions for user/owner   (User can read, write, and execute it)
└─ File type (- file, d directory, l symlink)

Permissions
File
  r - Read    – *view or copy* its contents
  w - Write   – *modify or remove* it
  x - eXecute – *run it
Directory
  r - Read    – *list and copy* files from it (needs x permission as well)
                If no x permission, only names can be detected, no status.
  w - Write   – *edit or delete* files into it  (needs x permission as well)
  x - eXecute – enter it
<br><br>
<br>chown&nbsp;– change ownership owner or owner:group or :group
<br>chgrp&nbsp;– change group
<br>chmod&nbsp;– change read, write, and execute permissions
<br><br>By Text<br>
<br>u&nbsp;user, g&nbsp;group, o&nbsp;others, a&nbsp;all
<br>r read, w write, x execute
<br>e.g.<br>chmod a+r test.sh # adds read permission for all classes
chmod o-x test.sh # removes execute permission for others
chmod u=rw,g=r,o= plan.txt # sets read and write permission for User
                           # sets read for Group
                           # denies all permissions to Others
<br>By Number<br>4210
rwx-
0 : --- none
1 : --x
2 : -w-
3 : -wx write and execute
4 : r--
5 : r-x read and execute
6 : rw- read and write
7 : rwx all the permissions

Example
chmod 751 test.sh
# for me:    7 rwx, I can read it, edit it and execute it
# for group: 5 r-x, they can read it and execute it
# for others 1 --x, they can only execute it
<br><br>
<br>SetUID (s): chmod u+/-s set user id, file only

<br>If applied to an executable file, it allows users to run the file with the permissions of the file's owner.
<br>Represented as rwsr-xr-x.
<br>Example: /bin/passwd others can use it to reset password.


<br>SetGID (s): chmod g+/-s set group id, both file and group

<br>If applied to directories, new files created within inherit the directory’s group ownership.
<br>Represented as rwxr-sr-x.
<br>Example: group shared folder


<br>Sticky Bit (t): chmod +/-t

<br>Applied to directories to allow only the owner to delete or modify their files.
<br>Commonly used in shared directories like /tmp.
<br>Represented as drwxrwxrwt.


<br><br>$ ls -l /bin/passwd
-rwsr-xr-x. 1 root root 33K Feb  7  2022 /bin/passwd*

$ passwd
Changing password for user xxxx1.
Current password:_
New password:_
Retype new password:_
passwd: all authentication tokens updated successfully.
<br><br>$ ls -ld group_dir
drwxr-xr-x 2 user group 4096 Nov 24 10:00 group
$ touch group_dir/test_file_user
$ ls -l group_dir     # file's group is the default group of the user
drwxr-xr-x 2 user user 4096 Nov 24 10:01 test_file_user

$ chmod g+s group_dir # setgid
$ ls -ld group_dir
drwxr-sr-x 2 user group 4096 Nov 24 10:03 group
$ touch group_dir/test_file_group # now file's group is set to group
$ ls -l group_dir     
drwxr-xr-x 2 user user  4096 Nov 24 10:01 test_file_user
drwxr-xr-x 2 user group 4096 Nov 24 10:04 test_file_group
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://linuxize.com/post/how-to-list-files-in-linux-using-the-ls-command/" target="_blank">https://linuxize.com/post/how-to-list-files-in-linux-using-the-ls-command/</a>
<br><a rel="noopener nofollow" class="external-link" href="https://www.redhat.com/en/blog/suid-sgid-sticky-bit" target="_blank">https://www.redhat.com/en/blog/suid-sgid-sticky-bit</a>
]]></description><link>linux-and-hpc\linux\linux-permissions.html</link><guid isPermaLink="false">linux-and-hpc/linux/Linux Permissions.md</guid><pubDate>Tue, 31 Dec 2024 23:49:41 GMT</pubDate></item><item><title><![CDATA[Run Jobs in Background]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:job-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#job-manager</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:job-manager" class="tag" target="_blank" rel="noopener nofollow">#job-manager</a> <br><br>
<br>nohup command &amp;

<br>view running jobs and their pid ps wf (Be careful if the cluster has multiple login nodes)
<br>kill job kill pid


<br>run command in <a data-href="Tmux" href="linux-and-hpc\tools\tmux.html" class="internal-link" target="_self" rel="noopener nofollow">Tmux</a>, then detach the session
<br>sbatch your_script.sh, see <a data-href="Slurm" href="linux-and-hpc\hpc\slurm.html" class="internal-link" target="_self" rel="noopener nofollow">Slurm</a>
<br><br>
<br>If your connection to remote machine is closed, SIGHUP signal will be sent to the remote machine to terminate running jobs.
<br>nohup is the middle layer, which catches the SIGHUP signal but does not pass it so that the process will not be terminated.
<br><br>If something happened that broke the connection between your terminal and the computer, the computer detected the line drop and sent a or hang up signal to the programs you'd been running. The programs ceased execution when they received the signal HUP.<br>Today, a terminal window is an emulation of a physical terminal. If you have processes running that were launched from that terminal window and you close that window the SIGHUP signal is sent to the programs so that they're informed of the HUP and know they should terminate.<br><br>If you want to have a process continue even if the terminal window it was launched from is closed, you need a way to intercept the SIGHUP so that the program never receives it. (Actually, the terminal window doesn't launch processes, they're launched by the shell session inside the terminal window.) The simple and elegant solution to that problem is to place another process between the shell session and the program, and have that middle-layer program never pass on the SIGHUP signal.<br>That's what nohup does. It launches programs for you so that they are a child process of nohup, not a child process of the shell. Because they're not a child process of the shell, they won't directly receive a SIGHUP from the shell. And if nohup doesn't pass on the SIGHUP to its children, the program won't receive SIGHUP at all.<br><br>Downloading large file<br>user@host:/somewhere/data$ nohup download-data.sh &amp;
[1] **847252** # pid process ID
nohup: ignoring input and appending output to 'nohup.out'

user@host:/somewhere/data$ ls
download-data.sh nohup.out data.tar.gz

# You can also view the process using ps
user@host:/somewhere/data$ ps wf
    PID TTY      STAT   TIME COMMAND
 807293 pts/1646 Ss     0:00 -bash
 847252 pts/1646 S      0:00  \_ /usr/bin/bash download-data.sh
 847254 pts/1646 S      0:05  |   \_ wget -N --no-verbose 
 847893 pts/1646 R+     0:00  \_ ps wf

# pgrep will find all users' processes, please use specific name
user@host:/somewhere/data$ pgrep download-data.sh
847252

# pwdx check working directory
user@host:/somewhere/data$ pwdx 847252
847252: /somewhere/data
<br><br>
<br>Print pid in script by echo $$
<br>pgrep progress-name
<br>ps wf by COMMAND and TTY
<br>You can print TTY in script, then you can find the process by ps -t<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://www.howtogeek.com/804823/nohup-command-linux/" target="_blank">https://www.howtogeek.com/804823/nohup-command-linux/</a>
<br><a rel="noopener nofollow" class="external-link" href="https://www.baeldung.com/linux/nohup-process-get-pid" target="_blank">https://www.baeldung.com/linux/nohup-process-get-pid</a>
]]></description><link>linux-and-hpc\linux\run-jobs-in-background.html</link><guid isPermaLink="false">linux-and-hpc/linux/Run Jobs in Background.md</guid><pubDate>Tue, 31 Dec 2024 21:19:06 GMT</pubDate></item><item><title><![CDATA[stdin stdout stderr]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <br>Usage:<br>
<br>stdout: data output from a command or file
<br>stderr: Err info or prompt from a command
<br>Sometimes you will write code like this:<br>$ bowtie2 -x index -q input.fastq.gz -S aligned.sam &gt; test.out

906352 reads; of these:
  906352 (100.00%) were unpaired; of these:
    464827 (51.29%) aligned 0 times
    439894 (48.53%) aligned exactly 1 time
    1631 (0.18%) aligned &gt;1 times
48.71% overall alignment rate
<br>You want to record the output, but the program still print things out. It is stderr not stdout. &gt; only write stdout.<br><br>
<br>&gt;: Redirect stdout to a file (overwrite).
<br>&gt;&gt;: Redirect stdout to a file (append).
<br>&lt;: Redirect stdin from a file.
<br>2&gt;: Redirect stderr to a file (overwrite).
<br>2&gt;&gt;: Redirect stderr to a file (append).
<br>&amp;&gt;: Redirect both stdout and stderr to a file.
<br><br><br><br><br>if [ ! -t 0 ]; then
  echo file and stdin
  read input
  echo $input
else
  echo terminal
fi
<br>$ ./test.sh 123
terminal

$ ./test.sh &lt; test.in
file and stdin
123
<br><br>#!/bin/bash

echo stdout
# redirect to stderr
echo stderr &gt;&amp;2
<br>$ ./test.sh
stdout
stderr
$ ./test.sh &gt; test.out
stderr
$ ./test.sh 2&gt; test.err
stdout
$ ./test.sh &amp;&gt; test.both
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://www.howtogeek.com/435903/what-are-stdin-stdout-and-stderr-on-linux/" target="_blank">https://www.howtogeek.com/435903/what-are-stdin-stdout-and-stderr-on-linux/</a>
]]></description><link>linux-and-hpc\linux\stdin-stdout-stderr.html</link><guid isPermaLink="false">linux-and-hpc/linux/stdin stdout stderr.md</guid><pubDate>Tue, 31 Dec 2024 21:28:38 GMT</pubDate></item><item><title><![CDATA[Symbolic Link]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a><br>Symbolic link is like a shortcut, easy to access and saving space.<br>~ $ ln -s /workspace/lab/your_lab lab
~ $ ls -l lab
lrwxrwxrwx. 1 user group  22 Nov 21 00:00 lab -&gt; /workspace/lab/your_lab
<br><br><br><br><br>
<br>Definition: A hard link is a direct reference to the same index node as the original file. Multiple hard links to the same file share the same data and metadata (permissions, timestamps, etc.).
<br>Key Characteristics:

<br>File Content: All hard links to a file point to the same data on the disk.
<br>File Deletion: The file content is only deleted when all hard links to it are removed.
<br>Cross-Partition: Hard links cannot span across different filesystems or partitions.
<br>Directories: Typically, hard links cannot be created for directories (to avoid filesystem loops), except in special cases like with some low-level tools.
<br>Updating the File: Changes to the content of the file are reflected in all hard links.
<br>Storage: Creating a hard link doesn’t consume additional storage for the file's content, only a small amount for the directory entry.


<br><br>
<br>Definition: A symbolic link is a special file that points to the path of another file or directory. It works as a shortcut.
<br>Key Characteristics:

<br>File Content: A symbolic link points to a pathname, not the actual file content.
<br>File Deletion: If the target file is deleted, the symbolic link becomes a broken link.
<br>Cross-Partition: Symbolic link can span across different filesystems or partitions.
<br>Directories: Symbolic link can be created for directories without restrictions.
<br>Updating the File: If the target file is replaced or moved, the symbolic link must be updated; otherwise, it breaks.
<br>Storage: Symbolic link require minimal storage for the link path itself.


<br><br>
<br>Hard link:

<br>Efficiently create multiple references to large files without duplicating content.
<br>Used in backup systems to save space by pointing multiple snapshots to the same unchanged data.


<br>Symbolic link:

<br>Create shortcuts to files or directories for easier navigation.
<br>Link files or directories across filesystems or partitions.
<br>Common in configuration management (e.g., /etc/nginx/sites-enabled linking to /etc/nginx/sites-available).


]]></description><link>linux-and-hpc\linux\symbolic-link.html</link><guid isPermaLink="false">linux-and-hpc/linux/Symbolic Link.md</guid><pubDate>Tue, 31 Dec 2024 21:27:29 GMT</pubDate></item><item><title><![CDATA[TTY]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <br>TTY stands for Teletypewriter, was a machine sending and receiving machine in 1800s and 1900s. Now it stands for a terminal device/interface, allowing messages to be typed, encoded, sent, received, decoded, and printed.<br><img alt="Teletype teleprinters in use in England during World War II" src="https://upload.wikimedia.org/wikipedia/commons/8/89/WACsOperateTeletype.jpg" referrerpolicy="no-referrer"><br>
Teletype teleprinters in use in England during World War II<br><br>TTY on <a data-href="Linux" href="linux-and-hpc\linux\linux.html" class="internal-link" target="_self" rel="noopener nofollow">Linux</a> is simulated and can be found under /dev/pts<br>The&nbsp;tty&nbsp;command will print the name of the device file that your pseudo teletypewriter is using to interface to the machine.<br>$ tty
/dev/pts/365

$ tty -s # -s silent

$ tty &amp;&amp; echo "In a tty"
/dev/pts/365
In a tty

$ tty -s &amp;&amp; echo "In a tty" # only print the message
In a tty
<br>The&nbsp;who&nbsp;command will list information for all logged in users, including yourself.<br>$ who
xxxx     pts/365      2024-10-14 05:43 (10.xxx.xxx.14)
xxxx67   pts/415      2024-11-05 14:48 (10.xxx.xxx.254)
xxxx89   pts/734      2024-11-23 20:17 (10.xxx.xxx.13)
xxxx10   pts/856      2024-11-23 22:27 (10.xxx.xxx.237)
<br><br><img alt="telegraph alphabet" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/International_Telegraph_Alphabet_2_brightened.jpg/820px-International_Telegraph_Alphabet_2_brightened.jpg" referrerpolicy="no-referrer"><br><br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://www.howtogeek.com/428174/what-is-a-tty-on-linux-and-how-to-use-the-tty-command/" target="_blank">https://www.howtogeek.com/428174/what-is-a-tty-on-linux-and-how-to-use-the-tty-command/</a>
<br>DEC PDP-1: <a rel="noopener nofollow" class="external-link" href="https://www.youtube.com/watch?v=1EWQYAfuMYw" target="_blank">https://www.youtube.com/watch?v=1EWQYAfuMYw</a>
]]></description><link>linux-and-hpc\linux\tty.html</link><guid isPermaLink="false">linux-and-hpc/linux/TTY.md</guid><pubDate>Tue, 31 Dec 2024 21:37:17 GMT</pubDate><enclosure url="https://upload.wikimedia.org/wikipedia/commons/8/89/WACsOperateTeletype.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/8/89/WACsOperateTeletype.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Environment Modules]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="?query=tag:env-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#env-manager</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href=".?query=tag:env-manager" class="tag" target="_blank" rel="noopener nofollow">#env-manager</a><br><a data-tooltip-position="top" aria-label="https://modules.sourceforge.net/" rel="noopener nofollow" class="external-link" href="https://modules.sourceforge.net/" target="_blank">Environment Modules</a> is a tool that simplify shell initialization and lets users easily modify their environment during the session with modulefiles.<br>This is very handy if you want to keep the different versions of the same package.<br>Go to check my GitHub repository: <a data-tooltip-position="top" aria-label="https://github.com/Justype/modules" rel="noopener nofollow" class="external-link" href="https://github.com/Justype/modules" target="_blank">Justype/modules</a><br><img alt="modules logo" src="https://modules.sourceforge.net/modules_red.svg" referrerpolicy="no-referrer"><br><br>
<br>module avail (list available modules)
<br>module load software (load certain modules)
<br>module unload software (unload certain modules)
<br>module purge (unload all)
<br><br>----------------- /workspace/lab/modules/modulefiles -----------------
cellranger/7.2.0 cellranger/8.0.1  spaceranger/3.1.1

------------------- /usr/share/Modules/modulefiles -------------------
dot  module-git  module-info  modules  null  use.own

---------------------- /usr/share/modulefiles ------------------------
mpi/mpich-x86_64  mpi/openmpi-x86_64  pmi/pmix-x86_64
<br><br>$ module load cellranger/8.0.1 # then you can use cellranger
$ cellranger
cellranger cellranger-8.0.1

Process 10x Genomics Gene Expression, Feature Barcode, and Immune Profiling data

Usage: cellranger &lt;COMMAND&gt;
...
<br><br>Important functions<br>
<br>set variable_name value (local variable, in this script)
<br>setenv (environmental variable, in the machine)
<br>prepend-path PATH location_of_bin (add location_of_bin to the beginning of $PATH)
<br>My template module file.<br>
<br>It is version independent, make sure you have the right file name (version).
<br>It is Tcl script not shell script.
<br>#%Module1.0
# Almost all of them are automated, you can modify whatis, ModulesHelp, and APP_HOME as needed.
# Search TOCHANGE to find the targets.
# You can also load other modules in this modulefile.
#   module load java/17.0.12

# abs path of this file, like /somewhere/modules/modulefiles/app/x.x.x
set abs_path [file normalize [info script]]
# full name of this module, like app/x.x.x
set app_full_name [module-info name]
# name of this module, like app
set app_name [file dirname $app_full_name]
# version of this app, like x.x.x
set app_version [file tail $app_full_name]
# abs path of modules, like /somewhere/modules
set module_root [file dirname [file dirname [file dirname $abs_path]]]
# abs path of the apps/app/x.x.x , like /somewhere/modules/apps/app/x.x.x
set app_root [file join $module_root apps $app_full_name]
# record current date time
set current_datetime [clock format [clock seconds] -format "%Y-%m-%d %T"]

# TOCHANGE: A brief description using module-whatis
module-whatis "Loads $app_name version $app_version"

# TOCHANGE: Detailed Help Section
proc ModulesHelp { } {
    # cannot use variables here
    puts stderr "Placeholder for the usage of this module."
}

# Display a help message when loading this module
if { [module-info mode] == "load" } {
    puts stderr "\[$current_datetime\] Loading module $app_full_name"
    # only display message if not in SLURM
    # if {![info exists ::env(SLURM_JOB_ID)]} {
    # }
} elseif { [module-info mode] == "unload" } {
    # puts stderr "\[$current_datetime\] Unloading module $app_full_name"
}

# Modify environment variables if the folders exist
if {[file isdirectory "$app_root/bin"]} {
    prepend-path PATH $app_root/bin
} elseif { [module-info mode] == "load" &amp;&amp; ![info exists ::env(SLURM_JOB_ID)] } {
    puts stderr "WARNING: No bin directory found in $app_full_name"
}
if {[file isdirectory "$app_root/lib"]} {
    prepend-path LD_LIBRARY_PATH $app_root/lib
}
if {[file isdirectory "$app_root/share/man"]} {
    prepend-path MANPATH $app_root/share/man
}

# TOCHANGE: Set custom environment variables and aliases
# setenv APP_HOME $app_root
# setalias run_app "$app_root/bin/app"

# Handle conflicts with other versions
conflict $app_name

<br><br>
<br>Official: <a rel="noopener nofollow" class="external-link" href="https://modules.readthedocs.io/en/stable/index.html" target="_blank">https://modules.readthedocs.io/en/stable/index.html</a>
<br>Tutorial: <a rel="noopener nofollow" class="external-link" href="https://adamdjellouli.com/articles/linux_notes/enviroment_modules" target="_blank">https://adamdjellouli.com/articles/linux_notes/enviroment_modules</a>
]]></description><link>linux-and-hpc\tools\environment-modules.html</link><guid isPermaLink="false">linux-and-hpc/tools/Environment Modules.md</guid><pubDate>Tue, 31 Dec 2024 19:04:31 GMT</pubDate><enclosure url="https://modules.sourceforge.net/modules_red.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;figure&gt;&lt;img src="https://modules.sourceforge.net/modules_red.svg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Gzip]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <br>gzip is a command-line tool used for compressing and decompressing files.<br><br>To compress a file using gzip, use the following command:<br>gzip filename
<br>This will compress the file and replace the original file with a .gz compressed version (filename.gz).<br><br>To decompress a .gz file, you can use:<br>gzip -d filename.gz
gunzip filename.gz
<br><br>You can compress multiple files by listing them:<br>gzip file1 file2 file3
gzip *.fastq
<br>This will compress each file individually and create .gz files for each.<br><br>By default, gzip deletes the original file after compression. To keep the original file, use the -k option:<br>gzip -k filename
<br><br>gzip cannot compress directories directly. However, you can use tar in combination with gzip to compress a directory:<br>tar cfz archive.tar.gz directory/
<br>
<br>c: Creates a new archive.
<br>f: Specifies the name of the archive file.
<br>z: Compresses the archive using gzip.
<br>directory/: The directory you want to compress.
<br><br>To view the contents of a .gz file without decompressing it fully, you can use the zcat command:<br>zcat filename.gz
<br>Or, to view it page-by-page with less:<br>zless filename.gz
]]></description><link>linux-and-hpc\tools\gzip.html</link><guid isPermaLink="false">linux-and-hpc/tools/Gzip.md</guid><pubDate>Tue, 31 Dec 2024 21:57:06 GMT</pubDate></item><item><title><![CDATA[Lmod]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="?query=tag:env-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#env-manager</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href=".?query=tag:env-manager" class="tag" target="_blank" rel="noopener nofollow">#env-manager</a><br><img src="https://lmod.readthedocs.io/en/latest/_static/Lmod-4color@2x.png" height="32" alt="Lmod logo" referrerpolicy="no-referrer"> Lmod is a lua and enhanced version of <a data-href="Environment Modules" href="linux-and-hpc\tools\environment-modules.html" class="internal-link" target="_self" rel="noopener nofollow">Environment Modules</a>.<br>They have the same usage. But their module files are different.<br>Go to check my GitHub repository: <a data-tooltip-position="top" aria-label="https://github.com/Justype/modules" rel="noopener nofollow" class="external-link" href="https://github.com/Justype/modules" target="_blank">Justype/modules</a><br><br>
<br>module avail
<br>module load software
<br>module unload software
<br>module purge (unload all)
<br><br>The most important part is:<br>
<br>prepend_path("PATH", pathJoin(app_root, "bin")) (add bin to $PATH)
<br>setenv (environmental variable, in the machine)
<br>My template.lua example.<br>-- Lmod modulefile.lua
-- Almost all of them are automated, you can modify whatis, ModulesHelp, and APP_HOME as needed.
-- Search TOCHANGE to find the targets.
-- You can also load other dependency modules by depends_on().
--     depends_on("java/17.0.12")

local abs_path = myFileName()                   -- absolute path of module, /somewhere/modules/modulefiles/app/x.y.z
local app_full_name = myModuleFullName()        -- full name of module, app/x.y.z
local app_name = app_full_name:match("^(.+)/")  -- app name, app
local app_version = myModuleVersion()           -- app version, x.y.z
local module_root = abs_path:match("^(.+)/.+/.+/")    -- abs path of modules, /somewhere/modules
local app_root = pathJoin(module_root, "apps", app_full_name) -- abs path of target app, /somewhere/modules/apps/app/x.y.z
local current_datetime = os.date("%Y-%m-%d %H:%M:%S") -- Record current datetime

-- TOCHANGE: A brief description using whatis
whatis("Loads " .. app_name .. " version " .. app_version)

-- TOCHANGE: Detailed help section
help([[Placeholder for the usage of this module.]])

-- Display a message when loading the module
if (mode() == "load") then
    io.stderr:write("[" .. current_datetime .. "] Loading module " .. app_full_name .. "\n")
    -- # only display message if not in SLURM
    -- if os.getenv("SLURM_JOB_ID") == nil then
    -- end
-- Display a message when unloading the module
elseif (mode() == "unload") then
    -- io.stderr:write("[" .. current_datetime .. "] Unloading module " .. app_full_name .. "\n")
end

-- Modify environment variables if the directories exist
if (isDir(pathJoin(app_root, "bin"))) then
    prepend_path("PATH", pathJoin(app_root, "bin"))
elseif (mode() == "load" and os.getenv("SLURM_JOB_ID") == nil) then
    io.stderr:write("WARNING: No bin directory found in " .. app_full_name .. "\n")
end
if (isDir(pathJoin(app_root, "lib"))) then
    prepend_path("LD_LIBRARY_PATH", pathJoin(app_root, "lib"))
end
if (isDir(pathJoin(app_root, "share/man"))) then
    prepend_path("MANPATH", pathJoin(app_root, "share/man"))
end

-- TOCHANGE: Set custom environment variables and aliases
-- setenv("APP_HOME", app_root)
-- set_alias("app", "command")

-- Handle conflicts with other versions
conflict(app_name)

<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://lmod.readthedocs.io/en/latest/index.html" target="_blank">https://lmod.readthedocs.io/en/latest/index.html</a>
<br><a rel="noopener nofollow" class="external-link" href="https://lmod.readthedocs.io/en/latest/100_modulefile_examples.html" target="_blank">https://lmod.readthedocs.io/en/latest/100_modulefile_examples.html</a>
]]></description><link>linux-and-hpc\tools\lmod.html</link><guid isPermaLink="false">linux-and-hpc/tools/Lmod.md</guid><pubDate>Tue, 31 Dec 2024 19:04:36 GMT</pubDate><enclosure url="https://lmod.readthedocs.io/en/latest/_static/Lmod-4color@2x.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://lmod.readthedocs.io/en/latest/_static/Lmod-4color@2x.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Micromamba]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="?query=tag:package-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#package-manager</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href=".?query=tag:package-manager" class="tag" target="_blank" rel="noopener nofollow">#package-manager</a> <br><img src="https://mamba.readthedocs.io/en/latest/_static/logo.png" height="32" alt="mamba logo" referrerpolicy="no-referrer"> Micromamba&nbsp;is a fully statically-linked, self-contained, executable. This means that the&nbsp;base&nbsp;environment is completely empty.<br>
<br><a rel="noopener nofollow" class="external-link" href="https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html" target="_blank">https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html</a>
<br>You can install conda along with micromamba, just install conda in base environment.
<br>Activate/Run:<br>
<br>micromamba activate env_name (using conda env, base env by default)
<br>micromamba deactivate (stop using current conda env)
<br>micromamba run -n env_name command (run certain command in specific environment)
<br>Packages:<br>
<br>micromamba install package[=version] [-c channel] (version and channel is optional)
<br>micromamba update [-a/package] (update certain packages or all -a)
<br>micromamba remove package (remote certain packages)
<br>Environments:<br>
<br>micromamba create -n env_name package[=version] (create environment with name)
<br>micromamba env list (List available environments)
<br>micromamba env remove -n env_name (remove environment)
<br>Cleaning Cache and Unused packages: micromamba clean -a<br><br>"${SHELL}" &lt;(curl -L micro.mamba.pm/install.sh)

# micromamba shell init --shell bash --root-prefix /where/you/want/to/install
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://bioconda.github.io/" target="_blank">https://bioconda.github.io/</a>
<br>Add bioconda and conda-forge channels:<br>micromamba config prepend channels bioconda
micromamba config prepend channels conda-forge
micromamba config set channel_priority strict
# micromamba config set auto_activate_base false
<br><br>Conda Runtime Config file. After you add channels, it will be like this.<br>Personally, I prefer to set auto_activate_base to false to save bash initiation time.<br>channels:
  - conda-forge
  - bioconda
channel_priority: strict
auto_activate_base: false
<br><br><br>micromamba create -n env_name package=version
# e.g.
micromamba create -n seq sra-tools bowtie bowtie2 star samtools
<br><br>micromamba activate env_name
# e.g.
micromamba activate seq # then you can run commands in seq env
fasterq SRRXXXXXXXX
<br><br>micromamba install package[=version] [-n env_name] [-c channel]

# e.g.
micromamba install kallisto bustools kb-python # do this when seq env is activated
micromamba install sra-tools=3     # it will install version 3.x.x
micromamba install salmon -n seq   # install salmon in seq env
# Install pytorch using conda
micromamba install pytorch torchvision torchaudio pytorch-cuda=12.4 -c pytorch -c nvidia
<br><br>micromamba run -n env_name command

# e.g.
micromamba run -n base nvim
micromamba run -n python2.7 python python2_script.py
]]></description><link>linux-and-hpc\tools\micromamba.html</link><guid isPermaLink="false">linux-and-hpc/tools/Micromamba.md</guid><pubDate>Tue, 31 Dec 2024 21:42:21 GMT</pubDate><enclosure url="https://mamba.readthedocs.io/en/latest/_static/logo.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://mamba.readthedocs.io/en/latest/_static/logo.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Miniconda]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="?query=tag:package-manager" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#package-manager</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href=".?query=tag:package-manager" class="tag" target="_blank" rel="noopener nofollow">#package-manager</a><br><img src="https://docs.anaconda.com/_static/Anaconda_Icon.png" height="32" alt="anaconda logo" referrerpolicy="no-referrer"> Miniconda includes minimum number of packages, including conda and Python.<br>
<br>Because of <a data-tooltip-position="top" aria-label="https://bioconda.github.io/" rel="noopener nofollow" class="external-link" href="https://bioconda.github.io/" target="_blank">bioconda channel</a>, you can easily manage bioinfo packages.
<br>Saving disk space using links (hard links in Linux).
<br>Activate/Run:<br>
<br>conda activate env_name (using conda env, base env by default)
<br>conda deactivate (stop using current conda env)
<br>conda run -n env_name command (run certain command in specific environment)
<br>Packages:<br>
<br>conda install package[=version] [-c channel] (channel is optional)
<br>conda update [-a/package] (update certain packages or all -a)
<br>conda remove package (remote certain packages)
<br>Environments:<br>
<br>conda create -n env_name package[=version] (create environment with name)
<br>conda env list (List available environments)
<br>conda env remove -n env_name (remove environment)
<br>Cleaning Cache and Unused packages: conda clean -a<br><br>wget &lt;https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh&gt;
bash Miniconda3-latest-Linux-x86_64.sh

# Install without asking configs
# bash Miniconda3-latest-Linux-x86_64.sh -b -p /where_to_install
	# -b agree without ask
	# -p prefix

# Init the shell if you missed it
/where_to_install/bin/conda init
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://bioconda.github.io/" target="_blank">https://bioconda.github.io/</a>
<br>Add bioconda and conda-forge channels:<br>conda config --add channels bioconda
conda config --add channels conda-forge
conda config --set channel_priority strict
# conda config --set auto_activate_base false
<br><br>Conda Runtime Config file. After you add channels, it will be like this.<br>Personally, I prefer to set auto_activate_base to false to save bash initiation time.<br>channels:
  - conda-forge
  - bioconda
  - default
channel_priority: strict
auto_activate_base: false
<br><br><br>conda create -n env_name package=version
# e.g.
conda create -n seq sra-tools bowtie bowtie2 star samtools
<br><br>conda activate env_name
# e.g.
conda activate seq  # then you can run commands in seq env
fasterq SRRXXXXXXXX
<br><br>conda install package[=version] [-n env_name] [-c channel]

# e.g.
conda install kallisto bustools kb-python # do this when seq env is activated
conda install sra-tools=3     # it will install version 3.x.x
conda install salmon -n seq   # install salmon in seq env
# Install pytorch using conda
conda install pytorch torchvision torchaudio pytorch-cuda=12.4 -c pytorch -c nvidia
<br><br>conda run -n env_name command

# e.g.
conda run -n base nvim
conda run -n python2.7 python python2_script.py
]]></description><link>linux-and-hpc\tools\miniconda.html</link><guid isPermaLink="false">linux-and-hpc/tools/Miniconda.md</guid><pubDate>Tue, 31 Dec 2024 22:00:07 GMT</pubDate><enclosure url="https://docs.anaconda.com/_static/Anaconda_Icon.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://docs.anaconda.com/_static/Anaconda_Icon.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Rclone]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <br><img src="https://rclone.org/img/logo_on_light__horizontal_color.svg" height="32" referrerpolicy="no-referrer"> <a data-tooltip-position="top" aria-label="https://rclone.org/" rel="noopener nofollow" class="external-link" href="https://rclone.org/" target="_blank"><strong></strong></a>Rclone is a powerful command-line tool used for managing and synchronizing files between your local filesystem and various cloud storage providers (e.g., Google Drive, Amazon S3, Dropbox, etc.).<br>
<br>ls list files, lsd list directories
<br>copy, sync,and delete folders, copyto a single file.
<br>rclone mount mydrive: /path/to/mountpoint

<br>fusermount -u /path/to/mountpoint (unmount cleaning up)


<br><br>rclone config
# Then follow the prompt:
# 1. n &gt; create new remote
# 2. give a name
# 3. select the remote type
# Follow the prompts to authenticate and authorize
<br>TIPS: You can first authorize on your local machine. Then copy config file to the remote machine.<br>rclone config show # show the path to rclone config file
<br><br><br>To list the contents of a remote storage (e.g., mydrive for Google Drive):<br>rclone ls mydrive: # be careful, it will list files in subfolder
rclone lsd mydrive: # list directory only in under this path
<br><br>To copy a file or directory from your local system to a remote (e.g., Google Drive):<br># local to remote
rclone copy path/to/directory mydrive:path/to/directory

# remote to local
rclone copy mydrive:path/to/directory path/to/local/directory

# between remotes
rclone copy mydrive:path/to/directory mydrive2:path/to/directory
<br>copy vs copyto<br>
<br>copy will automatically create directories on the destination if they don't exist.
<br>If you copy a file, you will get: path/file/file on the remote machine.<br>$ rclone copy path/to/file mydrive:path/to/file
$ rclone ls mydrive:path/to/file
 0 file/file

$ rclone copyto path/to/file mydrive:path/to/file
$ rclone ls mydrive:path/to/file
 0 file
<br><br>The sync command will delete files in the destination that no longer exist in the source, so be cautious.<br>NOTE: This sync is one direction NOT two-way.<br># local to remote
rclone sync path/to/directory mydrive:path/to/directory
# remote to local
rclone sync mydrive:path/to/directory path/to/local/directory
# between remotes
rclone sync mydrive:path/to/directory mydrive2:path/to/directory
<br><br>This will copy the files and then delete them from the local filesystem.<br># local to remote
rclone move path/to/directory mydrive:path/to/directory
# remote to local
rclone move mydrive:path/to/directory path/to/local/directory
# between remotes
rclone move mydrive:path/to/directory mydrive2:path/to/directory
<br><br>To compare files between a local directory and a remote (to see if they’re identical or need syncing):<br># local to remote
rclone check path/to/directory mydrive:path/to/directory
# remote to local
rclone check mydrive:path/to/directory path/to/local/directory
# between remotes
rclone check mydrive:path/to/directory mydrive2:path/to/directory
<br><br>You can mount a remote as a filesystem to interact with it like a local filesystem. This requires FUSE support and must be run with appropriate permissions.<br>rclone mount mydrive: /path/to/mountpoint
<br>To unmount, use:<br>fusermount -u /path/to/mountpoint
<br><br>rclone delete mydrive:/path/to/remote/file
<br><br>
<br>--dry-run: Simulate the operation without actually making changes. This is useful to see what will happen before performing the actual action.
<br>rclone copy /path/to/local/file mydrive:/path/to/remote/directory --dry-run
<br>
<br>--progress: Show progress while copying or syncing files.
<br>rclone copy /path/to/local/file mydrive:/path/to/remote/directory --progress
<br>
<br>--exclude: Exclude files that match a pattern.
<br>rclone copy /path/to/local/ mydrive:/path/to/remote/ --exclude "*.txt"
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://rclone.org/" target="_blank">https://rclone.org/</a>
]]></description><link>linux-and-hpc\tools\rclone.html</link><guid isPermaLink="false">linux-and-hpc/tools/Rclone.md</guid><pubDate>Tue, 31 Dec 2024 22:05:42 GMT</pubDate><enclosure url="https://rclone.org/img/logo_on_light__horizontal_color.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;figure&gt;&lt;img src="https://rclone.org/img/logo_on_light__horizontal_color.svg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Tmux]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:unix" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#unix</a> <a class="tag" href="?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:unix" class="tag" target="_blank" rel="noopener nofollow">#unix</a> <a href=".?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <br>Tmux (Terminal Multiplexer) allows you to manage multiple terminal sessions from a single window. It enables you to<br>
<br>Split your terminal (different pane)
<br><a data-href="Run Jobs in Background" href="linux-and-hpc\linux\run-jobs-in-background.html" class="internal-link" target="_self" rel="noopener nofollow">Run Jobs in Background</a>
<br>Reconnect to sessions even after disconnecting from SSH.
<br><br><br><img alt="tmux pane" src="https://i.imgur.com/cO8SnPv.png" referrerpolicy="no-referrer"><br><img alt="tmux sessions" src="https://i.imgur.com/s8CcceO.png" referrerpolicy="no-referrer"><br><br><br>
<br>New session: tmux
<br>List sessions: tmux ls
<br>Detach session: tmux detach
<br>Attach session: tmux attach -t name
<br><br><br><br><br><br><br><br><br><br># enable mouse mode
set -g mouse on
# enable clipboard OSC52
set -s set-clipboard on
<br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://tmuxcheatsheet.com/" target="_blank">https://tmuxcheatsheet.com/</a>
]]></description><link>linux-and-hpc\tools\tmux.html</link><guid isPermaLink="false">linux-and-hpc/tools/Tmux.md</guid><pubDate>Tue, 31 Dec 2024 21:49:22 GMT</pubDate><enclosure url="https://i.imgur.com/cO8SnPv.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/cO8SnPv.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux and HPC]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="Linux" data-href="Linux" href="linux-and-hpc\linux\linux.html" class="internal-link" target="_self" rel="noopener nofollow">🐧Linux</a> and High-Performance Computing (<a data-href="HPC" href="linux-and-hpc\hpc\hpc.html" class="internal-link" target="_self" rel="noopener nofollow">HPC</a>) have become essential tools to analyze vast amounts of data.<br><br><br><br>You don’t have sudo privilege on HPC. Other ways to manage packages and environments:<br>
<br><a data-href="Miniconda" href="linux-and-hpc\tools\miniconda.html" class="internal-link" target="_self" rel="noopener nofollow">Miniconda</a> or <a data-href="Micromamba" href="linux-and-hpc\tools\micromamba.html" class="internal-link" target="_self" rel="noopener nofollow">Micromamba</a> with <a data-tooltip-position="top" aria-label="https://bioconda.github.io/" rel="noopener nofollow" class="external-link" href="https://bioconda.github.io/" target="_blank">bioconda</a>
<br><a data-href="Environment Modules" href="linux-and-hpc\tools\environment-modules.html" class="internal-link" target="_self" rel="noopener nofollow">Environment Modules</a> or <a data-href="Lmod" href="linux-and-hpc\tools\lmod.html" class="internal-link" target="_self" rel="noopener nofollow">Lmod</a>
<br>To run container/image, use <a data-href="Singularity" href="linux-and-hpc\hpc\singularity.html" class="internal-link" target="_self" rel="noopener nofollow">Singularity</a>
<br><br>
<br><a data-href="Bash Script" href="linux-and-hpc\linux\bash-script.html" class="internal-link" target="_self" rel="noopener nofollow">Bash Script</a>
<br><a data-href="Run Jobs in Background" href="linux-and-hpc\linux\run-jobs-in-background.html" class="internal-link" target="_self" rel="noopener nofollow">Run Jobs in Background</a>
<br><a data-href="Linux Permissions" href="linux-and-hpc\linux\linux-permissions.html" class="internal-link" target="_self" rel="noopener nofollow">Linux Permissions</a>
]]></description><link>linux-and-hpc\linux-and-hpc.html</link><guid isPermaLink="false">linux-and-hpc/Linux and HPC.md</guid><pubDate>Tue, 31 Dec 2024 22:06:57 GMT</pubDate></item><item><title><![CDATA[SSH]]></title><description><![CDATA[<a class="tag" href="?query=tag:ssh" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ssh</a> 
 <br><a href=".?query=tag:ssh" class="tag" target="_blank" rel="noopener nofollow">#ssh</a><br>SSH (Secure Shell) is a protocol used to securely access and manage remote systems over an encrypted connection.<br>quick guide:<br>
<br>ssh [username]@[hostname or IP address]
<br>scp [source] [username]@[hostname]:[destination] copying files with scp (-r if folder)
<br>Key Authentication (no password required)

<br>ssh-keygen and ssh-copy-id
<br>ssh -i [private key] [username]@[host]


<br>Port Forwarding:

<br>-L [local_port]:[remote_host]:[remote_port] Local
<br>-R [remote_port]:[local_host]:[local_port] Remote


<br><a data-href="#SSH Config" href="about:blank#SSH_Config" class="internal-link" target="_self" rel="noopener nofollow">SSH Config</a>: ~/.ssh/config
<br><br>
<br><a data-tooltip-position="top" aria-label="https://filezilla-project.org/" rel="noopener nofollow" class="external-link" href="https://filezilla-project.org/" target="_blank">FileZilla</a> (Uncheck recommended software when installing it)
<br><a data-tooltip-position="top" aria-label="http://rei.to/carotdav_en.html" rel="noopener nofollow" class="external-link" href="http://rei.to/carotdav_en.html" target="_blank">CarotDAV</a>
<br><br>
<br>Connecting to a Remote Server:
<br>ssh [username]@[hostname or IP address]
<br>
<br>Specifying a Port (if not the default 22):
<br>ssh -p [port] [username]@[hostname]
<br>
<br>Executing a Command on the Remote Server:
<br>ssh [username]@[hostname] [command]
<br>Example:<br>ssh user@localhost "ls -l /var/www"
<br>
<br>Copying Files with scp: Securely copy files between local and remote machines:
<br>scp [local file] [username]@[hostname]:[destination]
scp [username]@[hostname]:[remote file] [local destination]
# folder with -r
<br><br>SSH key authentication provides a more secure and convenient alternative to password-based login.<br>
<br>Generate SSH Key Pair: On your local machine, run:
<br>ssh-keygen -t rsa -b 4096
<br>This creates a public key (id_rsa.pub) and private key (id_rsa) in the ~/.ssh/ directory.<br>
<br>Add SSH Key to SSH Agent:
<br>eval "$(ssh-agent -s)" # start SSH agnet in the background
ssh-add ~/.ssh/id_rsa
<br>
<br>Copy the Public Key to the Remote Server:
<br>ssh-copy-id [username]@[hostname] # NOT Working on Windows
<br>On Windows you need to manually append the public key to the ~/.ssh/authorized_keys file on the remote server.<br>
<br>Set Proper Permissions: Ensure correct file permissions on the server:
<br>chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys
<br>
<br>Login Using the Key: After setup, SSH will automatically use the key pair for authentication:
<br>ssh [username]@[hostname]
scp [local file] [username]@[hostname]:[destination]
rsync -r [local folder] [username]@[hostname]:[destination]
<br><br>SSH can forward ports for secure communication between local and remote systems.<br>
<br>Local Port Forwarding (Access Remote Services Locally):
<br>ssh -L [local_port]:[remote_host]:[remote_port] [username]@[hostname]
<br>Example:<br>ssh -L 8080:localhost:8080 user@192.168.1.100
<br>This forwards your local port 8080 to the remote server's port 80.<br>
<br>Remote Port Forwarding (Expose Local Services to Remote Systems):
<br>This is very helpful when using cluster (expose port to login node).<br>ssh -R [remote_port]:[local_host]:[local_port] [username]@[hostname]
<br>Example:<br>ssh -R 9090:localhost:3000 log-1 # same username as whoami
<br>This forwards the login node's port 9090 to compute node port 3000.<br><br>
<br>Configuration File: You can simplify SSH commands by using a configuration file (~/.ssh/config):
<br>Host myserver
    HostName 192.168.1.100
    User user
    Port 2222  # most of time you don't need this, default 22
    IdentityFile ~/.ssh/id_rsa
    LocalForward 8080:localhost:8080
<br>Then connect with:<br>ssh myserver
]]></description><link>linux-and-hpc\hpc\ssh.html</link><guid isPermaLink="false">linux-and-hpc/hpc/SSH.md</guid><pubDate>Tue, 31 Dec 2024 18:28:51 GMT</pubDate></item><item><title><![CDATA[Machine Learning]]></title><description><![CDATA[<a class="tag" href="?query=tag:todo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#todo</a> 
 <br><a href=".?query=tag:todo" class="tag" target="_blank" rel="noopener nofollow">#todo</a> ]]></description><link>ml\machine-learning.html</link><guid isPermaLink="false">ml/Machine Learning.md</guid><pubDate>Tue, 31 Dec 2024 18:36:34 GMT</pubDate></item><item><title><![CDATA[Molecular Cell Biology]]></title><description><![CDATA[<a class="tag" href="?query=tag:todo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#todo</a> 
 <br><a href=".?query=tag:todo" class="tag" target="_blank" rel="noopener nofollow">#todo</a> ]]></description><link>molecular-cell-bio\molecular-cell-biology.html</link><guid isPermaLink="false">molecular-cell-bio/Molecular Cell Biology.md</guid><pubDate>Tue, 31 Dec 2024 18:36:30 GMT</pubDate></item><item><title><![CDATA[Programming]]></title><description><![CDATA[<a class="tag" href="?query=tag:todo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#todo</a> 
 <br><a href=".?query=tag:todo" class="tag" target="_blank" rel="noopener nofollow">#todo</a> ]]></description><link>programming\programming.html</link><guid isPermaLink="false">programming/Programming.md</guid><pubDate>Tue, 31 Dec 2024 18:36:24 GMT</pubDate></item><item><title><![CDATA[Sequencing]]></title><description><![CDATA[<a class="tag" href="?query=tag:todo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#todo</a> 
 <br><a href=".?query=tag:todo" class="tag" target="_blank" rel="noopener nofollow">#todo</a> ]]></description><link>seq\sequencing.html</link><guid isPermaLink="false">seq/Sequencing.md</guid><pubDate>Tue, 31 Dec 2024 18:36:20 GMT</pubDate></item><item><title><![CDATA[Statistics]]></title><description><![CDATA[<a class="tag" href="?query=tag:todo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#todo</a> 
 <br><a href=".?query=tag:todo" class="tag" target="_blank" rel="noopener nofollow">#todo</a> ]]></description><link>stat\statistics.html</link><guid isPermaLink="false">stat/Statistics.md</guid><pubDate>Tue, 31 Dec 2024 18:36:16 GMT</pubDate></item><item><title><![CDATA[Singularity]]></title><description><![CDATA[<a class="tag" href="?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="?query=tag:hpc" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#hpc</a> <a class="tag" href="?query=tag:container" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#container</a> 
 <br><a href=".?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href=".?query=tag:hpc" class="tag" target="_blank" rel="noopener nofollow">#hpc</a> <a href=".?query=tag:container" class="tag" target="_blank" rel="noopener nofollow">#container</a><br><img src="https://docs.sylabs.io/guides/3.0/user-guide/_static/logo.png" height="32" alt="singularity logo" referrerpolicy="no-referrer"> Singularity is container system like Docker but can run without sudo privilege.<br><br>
<br>Compatibility: Singularity works well in HPC environments because it doesn’t require root access to run (unlike Docker).
<br>Performance: Singularity containers can run applications with near-native performance, crucial for computational tasks in research.
<br>Security: Singularity allows users to run containers without compromising the security policies of the host system.
<br><br>Run a Container: To execute a command inside the container:<br>singularity exec my_container.sif &lt;command&gt;
<br>Shell into a Container: To get an interactive shell inside the container:<br>singularity shell my_container.sif
<br><br>overlay allows users to create temporary, writable layers on top of a container's existing filesystem.<br># Create Overlay
singularity overlay create --size 1024 --sparse overlay.img

# Use Overlay with -o parameter
singularity shell -o shell.img my_container.sif
# ro means read-only
singularity exec -o overlay.img:ro my_container.sif &lt;command&gt;
<br><br>To create a container from a definition file (e.g., my_container.def)<br>sudo singularity build my_container.sif my_container.def
<br>My def on GitHub: <a rel="noopener nofollow" class="external-link" href="https://github.com/Justype/HPC-tips/blob/main/singularity-def/cuda-nvim-code-rstudio.def" target="_blank">https://github.com/Justype/HPC-tips/blob/main/singularity-def/cuda-nvim-code-rstudio.def</a><br><br>
<br><a rel="noopener nofollow" class="external-link" href="https://sylabs.io/singularity/" target="_blank">https://sylabs.io/singularity/</a>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/sylabs/singularity" target="_blank">https://github.com/sylabs/singularity</a>
]]></description><link>linux-and-hpc\hpc\singularity.html</link><guid isPermaLink="false">linux-and-hpc/hpc/Singularity.md</guid><pubDate>Tue, 31 Dec 2024 18:06:56 GMT</pubDate><enclosure url="https://docs.sylabs.io/guides/3.0/user-guide/_static/logo.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://docs.sylabs.io/guides/3.0/user-guide/_static/logo.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Bioinfo]]></title><description><![CDATA[ 
 <br>Hello everyone! Thank you for visiting this site and I hope you enjoy it.<br>This site covers the following topics based on my personal knowledge base:<br><br>
<br>This site is and will always be under construction.
<br>If the content is GPT-generated, it will be marked.
<br>My goal for this site/repo:<br>
<br>Short and concise!
<br>Comprehensive: as much knowledge as possible!
<br>]]></description><link>bioinfo.html</link><guid isPermaLink="false">Bioinfo.md</guid><pubDate>Tue, 31 Dec 2024 18:25:28 GMT</pubDate><enclosure url="https://i.imgur.com/HwB8OVb.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/HwB8OVb.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Genetics and Genomics]]></title><description><![CDATA[ 
 ]]></description><link>genetics-genomics\genetics-and-genomics.html</link><guid isPermaLink="false">genetics-genomics/Genetics and Genomics.md</guid><pubDate>Tue, 31 Dec 2024 06:36:08 GMT</pubDate></item><item><title><![CDATA[Biomedical Science]]></title><description><![CDATA[ 
 ]]></description><link>biomed\biomedical-science.html</link><guid isPermaLink="false">biomed/Biomedical Science.md</guid><pubDate>Tue, 31 Dec 2024 05:46:25 GMT</pubDate></item><item><title><![CDATA[Biochemistry]]></title><description><![CDATA[ 
 ]]></description><link>biochem\biochemistry.html</link><guid isPermaLink="false">biochem/Biochemistry.md</guid><pubDate>Tue, 31 Dec 2024 03:55:09 GMT</pubDate></item></channel></rss>