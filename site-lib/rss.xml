<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[bioinfo]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://www.justype.net/bioinfo/</link><image><url>https://www.justype.net/bioinfo/site-lib/media/favicon.png</url><title>bioinfo</title><link>https://www.justype.net/bioinfo/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Fri, 03 Jan 2025 03:50:52 GMT</lastBuildDate><atom:link href="https://www.justype.net/bioinfo/site-lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Fri, 03 Jan 2025 03:50:40 GMT</pubDate><copyright><![CDATA[Justype]]></copyright><ttl>60</ttl><dc:creator>Justype</dc:creator><item><title><![CDATA[R List]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> list can store different types of data.
list() to create a list. You can put lists inside of a list.
<br>Technically, list is a special <a data-href="R Vector" href="https://www.justype.net/bioinfo/programming/r/r-vector.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Vector</a> which stores the same type data: references:
n = c(2, 3, 5) s = c("aa", "bb", "cc", "dd", "ee") b = c(TRUE, FALSE, TRUE, FALSE, FALSE) x = list(n, s, b) # x contains references of n, s, b lobstr::obj_addr(x[[1]]) # 0xb0a905816a28
lobstr::obj_addr(n) # 0xb0a905816a28
ls &lt;- list( 1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9)
) typeof(ls) # "list" str(ls)
# List of 4
# $ : int [1:3] 1 2 3
# $ : chr "a"
# $ : logi [1:3] TRUE FALSE TRUE
# $ : num [1:2] 2.3 5.9
nested.ls &lt;- list(list(1, 2), c(3, 4)) str(nested.ls)
# List of 2
# $ :List of 2
# ..$ : num 1
# ..$ : num 2
# $ : num [1:2] 3 4
ex.ls &lt;- c(list(1, 2), c(3, 4)) str(ex.ls)
# List of 4
# $ : num 1
# $ : num 2
# $ : num 3
# $ : num 4
The&nbsp;typeof()&nbsp;a list is&nbsp;list.
Test for a list with&nbsp;is.list()
Coerce to a list with&nbsp;as.list() or list (They act differently)
Convert list to atomic vector unlist()
list(1:3)
# [[1]]
# [1] 1 2 3 as.list(1:3)
# [[1]]
# [1] 1
# # [[2]]
# [1] 2
# # [[3]]
# [1] 3
List Array can be useful if you want to arrange objects in a grid-like structure.l &lt;- list(1:3, "a", TRUE, 1.0)
dim(l) &lt;- c(2, 2)
l
#&gt; [,1] [,2]
#&gt; [1,] Integer,3 TRUE
#&gt; [2,] "a" 1 l[[1, 1]]
#&gt; [1] 1 2 3 ls[indices] still returns list
ls[[index]] returns item
ls$index returns item (named list only)
x &lt;- list(1:3, "a", 4:6) str(x)
# List of 3
# $ a: int [1:3] 1 2 3
# $ b: chr "a"
# $ c: int [1:3] 4 5 6 str(x[1]) # return list
# List of 1
# $ a: int [1:3] 1 2 3 str(x[[1]]) # return element not list
# int [1:3] 1 2 3 str(x$a) # $ can only work with names not numbers
# int [1:3] 1 2 3
x[10] # $&lt;NA&gt; NULL
x[[10]] # Error in x[[10]] : subscript out of bounds
x$10 # Error: unexpected numeric constant in "x$10" x["z"] # $&lt;NA&gt; NULL
x[["z"]] # NULL
x$z # NULL
<br>Or you can use <a data-tooltip-position="top" aria-label="https://purrr.tidyverse.org/reference/pluck.html" rel="noopener nofollow" class="external-link is-unresolved" href="https://purrr.tidyverse.org/reference/pluck.html" target="_self"><code></code></a>purrr::pluck() will always success.Return default value (NULL) if value is missing.purrr::pluck(x, 10) # NULL
purrr::pluck(x, 10, .default = NA) # NA <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/vectors-chap.html#lists" target="_self">https://adv-r.hadley.nz/vectors-chap.html#lists</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/subsetting.html" target="_self">https://adv-r.hadley.nz/subsetting.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-list.html</link><guid isPermaLink="false">programming/r/R List.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Fri, 03 Jan 2025 03:49:57 GMT</pubDate></item><item><title><![CDATA[R Vector]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a><br>The basic type of <a data-href="R" href="https://www.justype.net/bioinfo/programming/r/r.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R</a> is vector. (store collections of elements)
vector is like the array or list in others which can hold only one type.
attr() get/set attributes of a vector, attributes() get all attributes Attributes should generally be thought of as ephemeral. S3 vector has class attribute and other meta info factor stores categorical data
ordered() to create ordered factor (levels low to high) vector can only hold one type
list can hold more than one type
Atomic vector can only hold one type.c() to make longer vectors (c(1, c("a", "2")) ⇒ "1" "a" "2")
4 primary types: logical, integer, double, character
scalar is a special syntax to create an individual value. Positive integers&nbsp;return elements at the specified positions.
Negative integers&nbsp;exclude elements at the specified positions.
Logical vectors&nbsp;select elements where the corresponding logical value is&nbsp;TRUE.
Nothing&nbsp;returns the original vector.
character vectors return elements with matching names if the vector is named.
Example:x &lt;- c(2.1, 4.2, 3.3, 5.4) ## Positive Integers
x[c(3, 1)] # 3.3 2.1
x[order(x)] # 2.1 3.3 4.2 5.4 (order will return indices not vector)
# Duplicate indices will duplicate values
x[c(1, 1)] # 2.1 2.1
# Real numbers are silently truncated to integers
x[c(2.1, 2.9)] # 4.2 4.2 ## Negative Integers
x[-c(3, 1)] # 4.2 5.4 ## Logical Vectors
x[x &gt; 3] # 4.2 3.3 5.4 (x &gt; 3 will return a logical vector) ## Named Vectors
y &lt;- setNames(x, letters[1:4])
#&gt; a b c d #&gt; 2.1 4.2 3.3 5.4
y[c("d", "c", "a")] # 5.4 3.3 2.1
y[c("a", "a", "a")] # 2.1 2.1 2.1
All subsetting operators can be combined with assignment to modify selected values of an input vector.x &lt;- 1:5
x[c(1, 2)] &lt;- c(101, 102) x # 101 102 3 4 5 Testing: is.*() functions: is.logical(), is.integer(), is.character() Explicit Coercion: as.*() functions: Implicit Coercion: other ⇒ character c("a", 1) # "a" "1" (string, not "a" 1 ) logical ⇒ numeric (sum, mean)
x &lt;- c(FALSE, FALSE, TRUE)
as.numeric(x) # 0 0 1
# Total number of TRUEs
sum(x) # 1
# Proportion that are TRUE
mean(x) # 0.333
Other vectors (except primary vectors) have attributes to save meta info, including matrix, array, factor, datetime.e.g. matrix has dim attribute to save the dimension infostructure(1:10, dim = c(2, 5)) %&gt;% sloop::s3_class()
#&gt; [1] "matrix" "integer" "numeric"
Special attributes:
<br><a data-href="#Names `names`" href="https://www.justype.net/bioinfo/programming/r/r-vector.html#Names_`names`_0" class="internal-link" target="_self" rel="noopener nofollow">Names `names`</a>
<br><a data-href="#Dimensions `dim`" href="https://www.justype.net/bioinfo/programming/r/r-vector.html#Dimensions_`dim`_0" class="internal-link" target="_self" rel="noopener nofollow">Dimensions `dim`</a> =&gt; Matrix and Array get/set attr(var, "attr")
get all attributes attributes(var)
a &lt;- 1:3
attr(a, "x") &lt;- "abcdef"
attr(a, "x") # "abcdef" attr(a, "y") &lt;- 4:6
str(attributes(a))
#&gt; List of 2
#&gt; $ x: chr "abcdef"
#&gt; $ y: int [1:3] 4 5 6 # Or equivalently
a &lt;- structure( 1:3, x = "abcdef", y = 4:6
)
str(attributes(a))
#&gt; List of 2
#&gt; $ x: chr "abcdef"
#&gt; $ y: int [1:3] 4 5 6
names is a special attribute of the vector# When creating it: x &lt;- c(a = 1, b = 2, c = 3) # By assigning a character vector to names()
x &lt;- 1:3
names(x) &lt;- c("a", "b", "c") # Inline, with setNames():
x &lt;- setNames(1:3, c("a", "b", "c")) attribtes(x)
# $names
# [1] "a" "b" "c"
Adding a&nbsp;dim&nbsp;attribute to a vector allows it to behave like a 2-dimensional&nbsp;matrix&nbsp;or a multi-dimensional&nbsp;array.You can create matrices and arrays with&nbsp;matrix()&nbsp;and&nbsp;array(), or by using the assignment form of&nbsp;dim():# Two scalar arguments specify row and column sizes
x &lt;- matrix(1:6, nrow = 2, ncol = 3)
x
#&gt; [,1] [,2] [,3]
#&gt; [1,] 1 3 5
#&gt; [2,] 2 4 6 # One vector argument to describe all dimensions
y &lt;- array(1:12, c(2, 3, 2))
y
#&gt; , , 1
#&gt; #&gt; [,1] [,2] [,3]
#&gt; [1,] 1 3 5
#&gt; [2,] 2 4 6
#&gt; #&gt; , , 2
#&gt; #&gt; [,1] [,2] [,3]
#&gt; [1,] 7 9 11
#&gt; [2,] 8 10 12 # You can also modify an object in place by setting dim()
z &lt;- 1:6
dim(z) &lt;- c(3, 2)
z
#&gt; [,1] [,2]
#&gt; [1,] 1 4
#&gt; [2,] 2 5
#&gt; [3,] 3 6
Three Ways to subset higher-dimensional structures.
With a single vector. (return a vector, NOT matrix or array)
With multiple vectors.
With a matrix. (return a vector)
vals &lt;- outer(1:5, 1:4, FUN = "paste", sep = ",") vals
# [,1] [,2] [,3] [,4]
# [1,] "1,1" "1,2" "1,3" "1,4"
# [2,] "2,1" "2,2" "2,3" "2,4"
# [3,] "3,1" "3,2" "3,3" "3,4"
# [4,] "4,1" "4,2" "4,3" "4,4"
# [5,] "5,1" "5,2" "5,3" "5,4" ## Single Vector
vals[c(4, 15)]
# [1] "4,1" "5,3" ## Multiple Vectors
vals[1:2, 2:3]
# [,1] [,2] # [1,] "1,2" "1,3"
# [2,] "2,2" "2,3" vals[1:2, ]
# [,1] [,2] [,3] [,4]
# [1,] "1,1" "1,2" "1,3" "1,4"
# [2,] "2,1" "2,2" "2,3" "2,4" ## Matrix ncol = 2 for 2D Array, 3 for 3D
select &lt;- matrix(ncol = 2, byrow = TRUE, c( 1, 1, 3, 1, 2, 4
))
vals[select]
#&gt; [1] "1,1" "3,1" "2,4"
<br><a data-href="R S3" href="https://www.justype.net/bioinfo/programming/r/r-s3.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R S3</a> Vector has a special class attribute so that generic function can perform differently according to different S3 Vector.Every S3 object is built on top of a base type, and often stores additional information in other attributes. (e.g. factor, Datetime in POSIXct)<br><img src="https://i.imgur.com/QjiWrk1.png" height="300" referrerpolicy="no-referrer" target="_self" class="is-unresolved">A factor is a vector that can contain only predefined values. It is used to store categorical data.
factor use integer to store data
factor has a levels attributes to save categorical value info
table() function to count values
x &lt;- factor(c("a", "b", "b", "a"))
x
#&gt; [1] a b b a
#&gt; Levels: a b typeof(x)
#&gt; [1] "integer"
attributes(x)
#&gt; $levels
#&gt; [1] "a" "b"
#&gt; #&gt; $class
#&gt; [1] "factor"
<br><img src="https://i.imgur.com/hTChv9T.png" height="150" referrerpolicy="no-referrer" target="_self" class="is-unresolved">If levels have order, use ordered factor. e.g. low, medium, highgrade &lt;- ordered(c("b", "b", "a", "c"), levels = c("c", "b", "a"))
grade
#&gt; [1] b b a c
#&gt; Levels: c &lt; b &lt; a
attributes(grade)
#&gt; $levels
#&gt; [1] "c" "b" "a"
#&gt; #&gt; $class
#&gt; [1] "ordered" "factor" Date vectors are built on top of double vectors. They have class “Date” and no other attributes:today &lt;- Sys.Date()
typeof(today)
#&gt; [1] "double"
attributes(today)
#&gt; $class
#&gt; [1] "Date"
The value of the double (which can be seen by stripping the class), represents the number of days since 1970-01-01:date &lt;- as.Date("1970-02-01")
unclass(date)
#&gt; [1] 31
Two ways of storing date-time information:
POSIXct(calendar time), and POSIXlt(local time).
POSIX is short for Portable Operating System Interface
We will focus on POSIXct (time zone only control the format)now_ct &lt;- as.POSIXct("2018-08-01 22:00", tz = "UTC")
now_ct
#&gt; [1] "2018-08-01 22:00:00 UTC"
typeof(now_ct)
#&gt; [1] "double"
as.double(now_ct) # seconds from 1970 Jan 01 at midnight GMT
#&gt; [1] 1533160800
attributes(now_ct)
#&gt; $class
#&gt; [1] "POSIXct" "POSIXt" #&gt; #&gt; $tzone
#&gt; [1] "UTC"
Durations: the amount of time between pairs of dates or date-times
on top of doubles
units attribute to store the time unit.
one_week_1 &lt;- as.difftime(1, units = "weeks")
one_week_1 #&gt; Time difference of 1 weeks typeof(one_week_1) #&gt; [1] "double"
attributes(one_week_1)
#&gt; $class
#&gt; [1] "difftime"
#&gt; #&gt; $units
#&gt; [1] "weeks" one_week_2 &lt;- as.difftime(7, units = "days")
one_week_2 #&gt; Time difference of 7 days typeof(one_week_2) #&gt; [1] "double"
attributes(one_week_2)
#&gt; $class
#&gt; [1] "difftime"
#&gt; #&gt; $units
#&gt; [1] "days" <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/vectors-chap.html" target="_self">https://adv-r.hadley.nz/vectors-chap.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/subsetting.html" target="_self">https://adv-r.hadley.nz/subsetting.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-vector.html</link><guid isPermaLink="false">programming/r/R Vector.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Fri, 03 Jan 2025 02:59:12 GMT</pubDate><enclosure url="https://i.imgur.com/QjiWrk1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/QjiWrk1.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[RStudio Server]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:IDE" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#IDE">#IDE</a><br>If you want to use RStudio. You can use <a data-tooltip-position="top" aria-label="https://posit.co/download/rstudio-desktop/" rel="noopener nofollow" class="external-link is-unresolved" href="https://posit.co/download/rstudio-desktop/" target="_self">RStudio Desktop</a>. But since we are using <a data-href="HPC" href="https://www.justype.net/bioinfo/linux-and-hpc/hpc/hpc.html#_0" class="internal-link" target="_self" rel="noopener nofollow">HPC</a>, which is headless, we can only use <a data-tooltip-position="top" aria-label="https://posit.co/download/rstudio-server/" rel="noopener nofollow" class="external-link is-unresolved" href="https://posit.co/download/rstudio-server/" target="_self">RStudio Server</a>.<br>Most of the time the server has <a data-tooltip-position="top" aria-label="https://openondemand.org/" rel="noopener nofollow" class="external-link is-unresolved" href="https://openondemand.org/" target="_self">Open OnDemand</a> with RStudio Server Configured. Sometimes due to SSL issue, some content cannot be displayed properly. <br><img src="https://i.imgur.com/5iPBnbG.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br>To solve this you can use <a data-href="Singularity" href="https://www.justype.net/bioinfo/linux-and-hpc/hpc/singularity.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Singularity</a> to run RStudio Server and use <a data-tooltip-position="top" aria-label="SSH > Port Forwarding" data-href="SSH#Port Forwarding" href="https://www.justype.net/bioinfo/linux-and-hpc/hpc/ssh.html#Port_Forwarding_0" class="internal-link" target="_self" rel="noopener nofollow">SSH Port Forwarding</a> to forward port to local machine which allows us to access the RStudio Server on <a data-href="HPC" href="https://www.justype.net/bioinfo/linux-and-hpc/hpc/hpc.html#_0" class="internal-link" target="_self" rel="noopener nofollow">HPC</a>.<br>See my note here <a data-tooltip-position="top" aria-label="https://github.com/Justype/HPC-tips/blob/main/no-ood.md" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/Justype/HPC-tips/blob/main/no-ood.md" target="_self">no-ood.md</a>. And my Singularity definition file <a data-tooltip-position="top" aria-label="https://github.com/Justype/HPC-tips/blob/main/singularity-def/cuda-nvim-code-rstudio.def" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/Justype/HPC-tips/blob/main/singularity-def/cuda-nvim-code-rstudio.def" target="_self">cuda-nvim-code-rstudio.def</a>.<br><a data-tooltip-position="top" aria-label="https://github.com/features/copilot" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/features/copilot" target="_self">GitHub Copilot</a> is now available on RStudio Server.
<br>If you are a student or educator, you can join <a data-tooltip-position="top" aria-label="https://github.com/education" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/education" target="_self">GitHub Education</a> for free GitHub Pro and Copilot.
You need to change RStudio Server config file to enable it. In /etc/rstudio/rsession.conf
set copilot-enabled=1 ]]></description><link>https://www.justype.net/bioinfo/programming/r/rstudio-server.html</link><guid isPermaLink="false">programming/r/RStudio Server.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Fri, 03 Jan 2025 02:53:32 GMT</pubDate><enclosure url="https://i.imgur.com/5iPBnbG.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/5iPBnbG.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[R IO]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:IO" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#IO">#IO</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/programming/r/r-io.html</link><guid isPermaLink="false">programming/r/R IO.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 19:41:53 GMT</pubDate></item><item><title><![CDATA[R Function]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:algorithms" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#algorithms">#algorithms</a> <a href="https://www.justype.net/bioinfo?query=tag:function" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#function">#function</a><br>Functions are special object in <a data-href="R" href="https://www.justype.net/bioinfo/programming/r/r.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R</a>.
Definition and Assign to a variable: name &lt;- function(x) expression
<br><a data-href="#Lexical Scoping" href="https://www.justype.net/bioinfo/programming/r/r-function.html#Lexical_Scoping_0" class="internal-link" target="_self" rel="noopener nofollow">Lexical Scoping</a>: Searching variables based on the function definition.
There are two way to exit the function:
Return by return() or implicit return (last expression) invisible() to prevent printing return value Error by stop on.exit(expression, add = T) Set up an exit handler (no matter error or not) undo global settings, like setwd() or options() formals - list of arguments that control how you call the function
body - code inside the function
environment - how the function finds the values associated with the names
f02 &lt;- function(x, y) { # A comment x + y
} formals(f02)
#&gt; $x
#&gt; #&gt; $y body(f02)
#&gt; {
#&gt; x + y
#&gt; } environment(f02)
#&gt; &lt;environment: R_GlobalEnv&gt; R functions are objects in their own right
create a function with function and bind it to a name with &lt;- or =
anonymous function does not bind to a name
funs &lt;- list( half = function(x) x / 2, double = function(x) x * 2
) funs$double(10)
#&gt; [1] 20 function_name()
Nested
Save the intermediate results as variables
<br>Pipe: magrittr: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://magrittr.tidyverse.org/" target="_self">https://magrittr.tidyverse.org/</a> x %&gt;% f()&nbsp;is equivalent to&nbsp;f(x);
x %&gt;% f(y)&nbsp;is equivalent to&nbsp;f(x, y);
x %&gt;% f(y, .)&nbsp;is equivalent to&nbsp;f(y, x). x &lt;- runif(100) # nested
sqrt(mean(square(deviation(x))))
#&gt; [1] 0.274 # intermediate variable
out &lt;- deviation(x)
out &lt;- square(out)
out &lt;- mean(out)
out &lt;- sqrt(out)
out
#&gt; [1] 0.274 # magrittr
library(magrittr)
x %&gt;% deviation() %&gt;% square() %&gt;% mean() %&gt;% sqrt()
#&gt; [1] 0.274 only in base package
typeof - builtin or special
primarily in C not R
sum # function (..., na.rm = FALSE) .Primitive("sum")
`[` # .Primitive("[")
`+` # function (e1, e2) .Primitive("+")
`%name%` &lt;- function(param1, param2) { # expression }
arg1 %name% arg2 `%plus%` &lt;- function(x, y) { x + y }
1 %plus% 2
<br>Dplyr %&gt;%
Have you noticed the %&gt;% function from <a data-href="dplyr" href="https://www.justype.net/bioinfo/programming/r/packages/dplyr.html#_0" class="internal-link" target="_self" rel="noopener nofollow">dplyr</a> or magrittr package? Can you achieve similar things using this special function?
Scoping determines how variable names are resolved in functions.Lexical scoping uses the structure of the code (the lexical environment) to find the value of a variable. (based on how a function is defined, not how it is called)4 primary rules:
Name masking - names defined inside a function mask names defined outside a function.
Functions vs Variables - function() vs variable
Fresh Start - After calling the function, the variables in the function will be cleaned.
Dynamic lookup - R looks for values when the function is run, not when the function is created.
# Masking
x &lt;- 10
a &lt;- function(){x = 20; x}
a() # 20 not 10 # Functions vs Variables
do.call(function(){a = 5; a()}, list()) # 20 a() calls function a
do.call(function(){a = 5; a}, list()) # 5 # Dynamic Lookup
x &lt;- 2
d &lt;- function() x + 1
d() # == 3 x &lt;- 4
d() # == 5
In R arguments are only evaluated if accessed.Default values can be defined in terms of other arguments, or even in terms of variables defined later in the function:h04 &lt;- function(x = 1, y = x * 2, z = a + b) { a &lt;- 10 b &lt;- 100 c(x, y, z)
} h04()
#&gt; [1] 1 2 110
missing() - determine if an argument’s value comes from the user or from a defaulth06 &lt;- function(x = 10) { list(missing(x), x)
}
str(h06())
#&gt; List of 2
#&gt; $ : logi TRUE
#&gt; $ : num 10
str(h06(10))
#&gt; List of 2
#&gt; $ : logi FALSE
#&gt; $ : num 10
... dot-dot-dot is a special argument, which can take any number of additional arguments.
Passing ... to Another Function
Use list(...) to parse additional arguments
ddd &lt;- function(x = 10, ...) { other_args &lt;- list(...) print(other_args)
} ddd(x = 1, y = 2)
# $y
# [1] 2 return a value
throw an error Implicitly, where the last evaluated expression is the return value
Explicitly, by calling&nbsp;return()
test &lt;- function(x) { if (x &lt; 10) { 0 # Implicit } else { return(10) # Explicit }
}
test(5) #&gt; [1] 0
test(15) #&gt; [1] 10 Most functions return visibly: calling the function in an interactive context prints the result.
invisible() to prevent printing the return
test &lt;- function() 1
test() #&gt; [1] 1 test_invisible &lt;- function() invisible(1)
test_invisible() # no output
print(test_invisible()) # 1
If a function cannot complete its assigned task, it should throw an error with&nbsp;stop(), which immediately terminates the execution of the function.test_error &lt;- function() { stop("I'm an error") return(10)
}
test_error()
#&gt; Error in test_error(): I'm an error
on.exit() to set up an&nbsp;exit handler: undo global changes no matter how a function exits.Always set&nbsp;add = TRUE&nbsp;when using&nbsp;on.exit(). If you don’t, each call to&nbsp;on.exit()&nbsp;will overwrite the previous exit handler.test &lt;- function(x) { cat("Hello\n") on.exit(cat("Goodbye!\n"), add = TRUE) if (x) { return(10) } else { stop("Error") }
} test(TRUE)
#&gt; Hello
#&gt; Goodbye!
#&gt; [1] 10 test(FALSE)
#&gt; Hello
#&gt; Error in test(FALSE): Error
#&gt; Goodbye!
Exit handlers are useful to place clean-up code next to the that requires clean-upwith_dir &lt;- function(dir, code) { old &lt;- setwd(dir) on.exit(setwd(old), add = TRUE) force(code)
} getwd()
#&gt; [1] "/Users/runner/work/adv-r/adv-r"
with_dir("~", getwd())
#&gt; [1] "/Users/runner"
after = F run first when exittest &lt;- function() { on.exit(message("a"), add = TRUE, after = FALSE) on.exit(message("b"), add = TRUE, after = FALSE)
} test()
#&gt; b
#&gt; a
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-function.html</link><guid isPermaLink="false">programming/r/R Function.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 19:41:49 GMT</pubDate></item><item><title><![CDATA[R Data Frame and Tibble]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> A data frame is a named list of vectors with attributes:
names (column names)
row.names
class data.frame
Data frame also has constraint and special functions:
The length of each of its vectors must be the same
rownames(), colnames(), nrow(), ncol()
df1 &lt;- data.frame(x = 1:3, y = letters[1:3])
typeof(df1)
#&gt; [1] "list"
attributes(df1)
#&gt; $names
#&gt; [1] "x" "y"
#&gt; #&gt; $class
#&gt; [1] "data.frame"
#&gt; #&gt; $row.names
#&gt; [1] 1 2 3 data.frame() - stringsAsFactors = F to suppress conversion Column Names of Data Frame cannot start with Number have space tibble() - no coercing by default allows you to refer to variables created during construction tibble(x = 1:3, y = x * 2) df &lt;- data.frame( x = 1:3, y = c("a", "b", "c")
)
str(df)
#&gt; 'data.frame': 3 obs. of 2 variables:
#&gt; $ x: int 1 2 3
#&gt; $ y: chr "a" "b" "c" Data frames allow you to label each row with a name, a character vector containing only unique values:
df3 &lt;- data.frame( age = c(35, 27, 18), hair = c("blond", "brown", "black"), row.names = c("Bob", "Susan", "Sam")
)
df3
#&gt; age hair
#&gt; Bob 35 blond
#&gt; Susan 27 brown
#&gt; Sam 18 black <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/vectors-chap.html" target="_self">https://adv-r.hadley.nz/vectors-chap.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/subsetting.html" target="_self">https://adv-r.hadley.nz/subsetting.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-data-frame-and-tibble.html</link><guid isPermaLink="false">programming/r/R Data Frame and Tibble.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 19:41:42 GMT</pubDate></item><item><title><![CDATA[R FP]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> <br><a data-href="Functional Programming" href="https://www.justype.net/bioinfo/programming/terms/functional-programming.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Functional Programming</a><br><a data-href="purrr" href="https://www.justype.net/bioinfo/programming/r/packages/purrr.html#_0" class="internal-link" target="_self" rel="noopener nofollow">purrr</a>]]></description><link>https://www.justype.net/bioinfo/programming/r/r-fp.html</link><guid isPermaLink="false">programming/r/R FP.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 19:41:24 GMT</pubDate></item><item><title><![CDATA[R Environment]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:advanced" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#advanced">#advanced</a>
The environment is the data structure that powers scoping.
Understanding environments is not necessary for day-to-day use of R.
R use environments and search path to solve libraries' functions and variables.
Environment is similar to named list with four exceptions:
Every name must be unique.
The names in an environment are not ordered.
An environment has a parent.
Environments are not copied when modified.
env &lt;- rlang::env(a = 1, b = "test")
rlang::env_print(env)
# &lt;environment: 0xac0b495227e0&gt;
# Parent: &lt;environment: global&gt;
# Bindings:
# • a: &lt;dbl&gt;
# • b: &lt;chr&gt; rlang::env_names(env)
# [1] "a" "b" identical(rlang::global_env(), rlang::current_env())
# [1] TRUE
e2a &lt;- rlang::env(d = 4, e = 5)
e2b &lt;- rlang::env(e2a, a = 1, b = 2, c = 3)
rlang::env_parent(e2b)
#&gt; &lt;environment: 0xac0b4ae2fbc8&gt;
rlang::env_print(e2a)
#&gt; &lt;environment: 0xac0b4ae2fbc8&gt;
#&gt; Parent: &lt;environment: global&gt;
#&gt; Bindings:
#&gt; • d: &lt;dbl&gt;
#&gt; • e: &lt;dbl&gt; rlang::env_parent(e2a)
#&gt; &lt;environment: R_GlobalEnv&gt;
Get
env$name
env[["name"]]
rlang::env_get(env, "name") also find in parents: inherit = T
Set
env$name = value
env[["name"]] = value
rlang::env_get(env, "name", value) (also in parent inherit = T)
rland::env_bind(env, name1 = value1, name2 = value2)
Unbind
rlang::env_unbind(env, "name"), set env to NULL cannot unbind
rlang::env_has(env, "name"), check binding in an env.
rlang::env_get(e2b, "e")
# Error in `rlang::env_get()`:
# ! Can't find `e` in environment.
# Backtrace:
# 1. rlang::env_get(e2b, "e") rlang::env_get(e2b, "e", inherit = T) # Find # [1] 5
Each package attached by&nbsp;library()&nbsp;or&nbsp;require()&nbsp;becomes one of the parents of the global environment.If you follow all the parents back, you see the order in which every package has been attached. This is known as the&nbsp;search path.<br><img src="https://i.imgur.com/yi7Ddhh.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">base is the environment of base package.search()
#&gt; [1] ".GlobalEnv" "package:rlang" "package:stats" #&gt; [4] "package:graphics" "package:grDevices" "package:utils" #&gt; [7] "package:datasets" "package:methods" "Autoloads" #&gt; [10] "package:base" rlang::search_envs()
#&gt; [[1]] $ &lt;env: global&gt;
#&gt; [[2]] $ &lt;env: package:rlang&gt;
#&gt; [[3]] $ &lt;env: package:stats&gt;
#&gt; [[4]] $ &lt;env: package:graphics&gt;
#&gt; [[5]] $ &lt;env: package:grDevices&gt;
#&gt; [[6]] $ &lt;env: package:utils&gt;
#&gt; [[7]] $ &lt;env: package:datasets&gt;
#&gt; [[8]] $ &lt;env: package:methods&gt;
#&gt; [[9]] $ &lt;env: Autoloads&gt;
#&gt; [[10]] $ &lt;env: package:base&gt;
package::function to use functions in a package environment.rlang::env() # use env function in rlang package
The function environment is the environment in which a function was created or defined. A function binds the current environment when it is created and is used for lexical scoping.Across computer languages, functions that capture (or enclose) their environments are called&nbsp;closures, which is often used interchangeably with&nbsp;function&nbsp;in R’s documentation.y &lt;- 1
f &lt;- function(x) x + y
fn_env(f) #&gt; &lt;environment: R_GlobalEnv&gt; e &lt;- rlang::env()
e$g &lt;- function() 1
environment(e$g) #&gt; &lt;environment: R_GlobalEnv&gt;
<br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/5adf367e-0af4-4d30-8f2a-3330372efec4/image.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/4bc5bedc-8ca3-4fbe-9e0b-d7e31e76049d/image.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">The execution environment is created each time a function is called or executed. It is temporary and exists only for the duration of the function call. Once the function has completed, the environment will be garbage collected.h &lt;- function(x) { # 1. a &lt;- 2 # 2. x + a
}
y &lt;- h(1) # 3.
<br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/33471236-e6c6-4785-b385-e4f962bbc656/4d69a38b-3f63-42be-9104-9cbae3297c92.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/dded9223-11cb-43dc-8ba7-3041345a1d81/716ebdf2-aa6e-4d7c-bbc5-001a264e36a0.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/35bbb49e-65f5-47df-a9cc-69dec9194d83/e77dd8bf-2b59-4c4b-a22b-ce12cd62df5c.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">The namespace environment is the internal interface to the package. Namespaces ensure that packages find the correct functions regardless of the order in which packages are loaded.
The package environment controls how we find the function. (external interface)
The namespace controls how the function finds its variables. (internal space)
e.g. sd find var function in namespace:statssd
#&gt; function (x, na.rm = FALSE) #&gt; sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x), #&gt; na.rm = na.rm))
#&gt; &lt;bytecode: 0x7fe6c495c900&gt;
#&gt; &lt;environment: namespace:stats&gt;
<br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/87f1b7d7-5e29-4ed8-8f6a-01b9d2c11149/image.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
Each namespace has an&nbsp;imports&nbsp;environment that contains bindings to all the functions used by the package. The imports environment is controlled by the package developer with the&nbsp;NAMESPACE&nbsp;file.
Explicitly importing every base function would be tiresome, so the parent of the imports environment is the base&nbsp;namespace. The base namespace contains the same bindings as the base environment, but it has a different parent.
The parent of the base namespace is the global environment. This means that if a binding isn’t defined in the imports environment the package will look for it in the usual way. This is usually a bad idea.
<br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/17b55cbe-f014-468f-9922-9d4f3a63dad1/image.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">rlang::caller_env() accesses caller environment. This provides the environment from which the function was called. (not defined)(Stack: First In Last Out)f &lt;- function(x) g(x = 2)
g &lt;- function(x) h(x = 3)
h &lt;- function(x) stop() f(x = 1)
#&gt; Error:
traceback()
#&gt; 4: stop() at #1
#&gt; 3: h(x = 3) at #1
#&gt; 2: g(x = 2) at #1
#&gt; 1: f(x = 1)
Call Stack Tree by lobstr::cst()h &lt;- function(x) { lobstr::cst()
}
f(x = 1)
#&gt; ▆
#&gt; 1. └─global f(x = 1)
#&gt; 2. └─global g(x = 2)
#&gt; 3. └─global h(x = 3)
#&gt; 4. └─lobstr::cst()
Each element of the call stack is a&nbsp;frame. Three key components of frame:
An expression (labelled with&nbsp;expr) giving the function call. This is what&nbsp;traceback()&nbsp;prints out.
An environment (labelled with&nbsp;env), which is typically the execution environment of a function.
A parent, the previous call in the call stack (shown by a grey arrow).
<br><img alt="image.png" src="https://prod-files-secure.s3.us-west-2.amazonaws.com/fed57f19-841c-40cc-8bec-ed90e77ad1b8/7d54024c-5d2a-4657-b5ae-f9801f478132/image.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">f &lt;- function() { print("f:in"); g(); print("f:out"); }
g &lt;- function() { print("g:in"); h(); print("g:out"); }
h &lt;- function() { print("h:in"); lobstr::cst(); print("h:out"); } a &lt;- function(x) { print("a:in"); b(x); print("a:out"); }
b &lt;- function(x) { print("b:in"); c(x); print("b:out"); }
c &lt;- function(x) { print("c:in"); x; print("c:out"); } a(f())
x&nbsp;is lazily evaluated so this tree gets two branches. In the first branch&nbsp;a()&nbsp;calls&nbsp;b(), then&nbsp;b()&nbsp;calls&nbsp;c(). The second branch starts when&nbsp;c()&nbsp;evaluates its argument&nbsp;x. This argument is evaluated in a new branch because the environment in which it is evaluated is the global environment, not the environment of&nbsp;c().[1] "a:in"
[1] "b:in"
[1] "c:in"
[1] "f:in"
[1] "g:in"
[1] "h:in" ▆ 1. ├─global a(f()) 2. │ └─global b(x) 3. │ └─global c(x) 4. └─global f() 5. └─global g() 6. └─global h() 7. └─lobstr::cst()
[1] "h:out"
[1] "g:out"
[1] "f:out"
[1] "c:out"
[1] "b:out"
[1] "a:out" <br>Avoiding copies of large data. (Better use <a data-tooltip-position="top" aria-label="https://www.notion.so/R-R6-1528695f3ace8071b572fa2c68691c9c?pvs=21" rel="noopener nofollow" class="external-link is-unresolved" href="https://www.notion.so/R-R6-1528695f3ace8071b572fa2c68691c9c?pvs=21" target="_self">R R6</a> )
Managing state within a package. (maintain state across function calls)
my_env &lt;- new.env(parent = emptyenv())
my_env$a &lt;- 1 get_a &lt;- function() { my_env$a
}
set_a &lt;- function(value) { old &lt;- my_env$a my_env$a &lt;- value invisible(old)
} As a hash map. (takes constant) <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/environments.html" target="_self">https://adv-r.hadley.nz/environments.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-environment.html</link><guid isPermaLink="false">programming/r/R Environment.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 19:41:16 GMT</pubDate><enclosure url="https://i.imgur.com/yi7Ddhh.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/yi7Ddhh.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[R]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <br><img src="https://www.r-project.org/Rlogo.png" height="32" referrerpolicy="no-referrer" target="_self" class="is-unresolved"> <a data-tooltip-position="top" aria-label="https://www.r-project.org/" rel="noopener nofollow" class="external-link is-unresolved" href="https://www.r-project.org/" target="_self">R</a> is a free software environment for statistical computing and graphics. It compiles and runs on a wide variety of UNIX platforms, Windows and MacOS. <a data-tooltip-position="top" aria-label="https://cloud.r-project.org/" rel="noopener nofollow" class="external-link is-unresolved" href="https://cloud.r-project.org/" target="_self">Download R</a>.<br>You may want to use <a data-tooltip-position="top" aria-label="RStudio Server" data-href="RStudio Server" href="https://www.justype.net/bioinfo/programming/r/rstudio-server.html#_0" class="internal-link" target="_self" rel="noopener nofollow">RStudio</a> or <a data-tooltip-position="top" aria-label="https://code.visualstudio.com/" rel="noopener nofollow" class="external-link is-unresolved" href="https://code.visualstudio.com/" target="_self">VS Code</a> as the IDE.
<br><a data-href="R Vector" href="https://www.justype.net/bioinfo/programming/r/r-vector.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Vector</a> and <a data-href="R List" href="https://www.justype.net/bioinfo/programming/r/r-list.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R List</a>
<br><a data-href="R Data Frame and Tibble" href="https://www.justype.net/bioinfo/programming/r/r-data-frame-and-tibble.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Data Frame and Tibble</a>
<br><a data-href="R Control Flow" href="https://www.justype.net/bioinfo/programming/r/r-control-flow.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Control Flow</a>
<br><a data-href="R Function" href="https://www.justype.net/bioinfo/programming/r/r-function.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Function</a>
<br><a data-href="R IO" href="https://www.justype.net/bioinfo/programming/r/r-io.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R IO</a>
<br><a data-href="R Environment" href="https://www.justype.net/bioinfo/programming/r/r-environment.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Environment</a> (advanced)
<br><a data-href="R FP" href="https://www.justype.net/bioinfo/programming/r/r-fp.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R FP</a> (Functional Programming)
<br><a data-href="R OOP" href="https://www.justype.net/bioinfo/programming/r/r-oop.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R OOP</a> (Object Oriented Programming)
<br><a data-href="R Metaprogramming" href="https://www.justype.net/bioinfo/.html" class="internal-link" target="_self" rel="noopener nofollow">R Metaprogramming</a>
<br><a data-href="R Packages" href="https://www.justype.net/bioinfo/programming/r/packages/r-packages.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Packages</a>
<br>R Cookbook: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://rc2e.com/" target="_self">https://rc2e.com/</a>
<br>ggplot2 Cookbook: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://r-graphics.org/" target="_self">https://r-graphics.org/</a>
<br>OOP in R: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/index.html" target="_self">https://adv-r.hadley.nz/index.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r.html</link><guid isPermaLink="false">programming/r/R.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 19:37:12 GMT</pubDate><enclosure url="https://www.r-project.org/Rlogo.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://www.r-project.org/Rlogo.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Bioinfo]]></title><description><![CDATA[Hello everyone 👋! Thank you for visiting this site and I hope you enjoy it.This site covers the following topics based on my personal knowledge base:
This site is and will always be under construction 🏭.
If the content is GPT-generated 🤖, it will be marked.
My goal for this site/repo:
Short and concise!
Comprehensive 🌌: as much knowledge as possible!
]]></description><link>https://www.justype.net/bioinfo/bioinfo.html</link><guid isPermaLink="false">Bioinfo.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 17:45:19 GMT</pubDate></item><item><title><![CDATA[R Vector and List]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a><br>The basic type of <a data-href="R" href="https://www.justype.net/bioinfo/programming/r/r.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R</a> is vector. (store collections of elements)
vector is like the array or list in others which can hold only one type.
attr() get/set attributes of a vector, attributes() get all attributes Attributes should generally be thought of as ephemeral. S3 vector has class attribute and other meta info factor stores categorical data
ordered() to create ordered factor (levels low to high) vector can only hold one type
list can hold more than one type
Atomic vector can only hold one type.c() to make longer vectors (c(1, c("a", "2")) ⇒ "1" "a" "2")
4 primary types: logical, integer, double, character
scalar is a special syntax to create an individual value.
is.*() functions: is.logical(), is.integer(), is.character()explicit: as.*() functions:implicit:
other ⇒ character
str(c("a", 1)) # chr [1:2] "a" "1" logical ⇒ numeric (sum, mean)
x &lt;- c(FALSE, FALSE, TRUE)
as.numeric(x) # 0 0 1
# Total number of TRUEs
sum(x) # 1
# Proportion that are TRUE
mean(x) # 0.333
Other vectors (except primary vectors) have attributes to save meta info, including matrix, array, factor, datetime.e.g. matrix has dim attribute to save the dimension infostructure(1:10, dim = c(2, 5)) %&gt;% sloop::s3_class()
#&gt; [1] "matrix" "integer" "numeric"
Special attributes:
<br><a data-href="#Names `names`" href="https://www.justype.net/bioinfo/programming/r/r-vector-and-list.html#Names_`names`_0" class="internal-link" target="_self" rel="noopener nofollow">Names `names`</a>
<br><a data-href="#Dimensions `dim`" href="https://www.justype.net/bioinfo/programming/r/r-vector-and-list.html#Dimensions_`dim`_0" class="internal-link" target="_self" rel="noopener nofollow">Dimensions `dim`</a> get/set attr(var, "attr")
get all attributes attributes(var)
a &lt;- 1:3
attr(a, "x") &lt;- "abcdef"
attr(a, "x") # "abcdef" attr(a, "y") &lt;- 4:6
str(attributes(a))
#&gt; List of 2
#&gt; $ x: chr "abcdef"
#&gt; $ y: int [1:3] 4 5 6 # Or equivalently
a &lt;- structure( 1:3, x = "abcdef", y = 4:6
)
str(attributes(a))
#&gt; List of 2
#&gt; $ x: chr "abcdef"
#&gt; $ y: int [1:3] 4 5 6
names is a special attribute of the vector# When creating it: x &lt;- c(a = 1, b = 2, c = 3) # By assigning a character vector to names()
x &lt;- 1:3
names(x) &lt;- c("a", "b", "c") # Inline, with setNames():
x &lt;- setNames(1:3, c("a", "b", "c")) attribtes(x)
# $names
# [1] "a" "b" "c"
Adding a&nbsp;dim&nbsp;attribute to a vector allows it to behave like a 2-dimensional&nbsp;matrix&nbsp;or a multi-dimensional&nbsp;array.You can create matrices and arrays with&nbsp;matrix()&nbsp;and&nbsp;array(), or by using the assignment form of&nbsp;dim():# Two scalar arguments specify row and column sizes
x &lt;- matrix(1:6, nrow = 2, ncol = 3)
x
#&gt; [,1] [,2] [,3]
#&gt; [1,] 1 3 5
#&gt; [2,] 2 4 6 # One vector argument to describe all dimensions
y &lt;- array(1:12, c(2, 3, 2))
y
#&gt; , , 1
#&gt; #&gt; [,1] [,2] [,3]
#&gt; [1,] 1 3 5
#&gt; [2,] 2 4 6
#&gt; #&gt; , , 2
#&gt; #&gt; [,1] [,2] [,3]
#&gt; [1,] 7 9 11
#&gt; [2,] 8 10 12 # You can also modify an object in place by setting dim()
z &lt;- 1:6
dim(z) &lt;- c(3, 2)
z
#&gt; [,1] [,2]
#&gt; [1,] 1 4
#&gt; [2,] 2 5
#&gt; [3,] 3 6
<br><a data-href="R S3" href="https://www.justype.net/bioinfo/programming/r/r-s3.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R S3</a> Vector has a special class attribute so that generic function can perform differently according to different S3 Vector.Every S3 object is built on top of a base type, and often stores additional information in other attributes. (e.g. factor, Datetime in POSIXct)<br><img src="https://i.imgur.com/QjiWrk1.png" height="300" referrerpolicy="no-referrer" target="_self" class="is-unresolved">A factor is a vector that can contain only predefined values. It is used to store categorical data.
factor use integer to store data
factor has a levels attributes to save categorical value info
table() function to count values
x &lt;- factor(c("a", "b", "b", "a"))
x
#&gt; [1] a b b a
#&gt; Levels: a b typeof(x)
#&gt; [1] "integer"
attributes(x)
#&gt; $levels
#&gt; [1] "a" "b"
#&gt; #&gt; $class
#&gt; [1] "factor"
<br><img src="https://i.imgur.com/hTChv9T.png" height="150" referrerpolicy="no-referrer" target="_self" class="is-unresolved">If levels have order, use ordered factor. e.g. low, medium, highgrade &lt;- ordered(c("b", "b", "a", "c"), levels = c("c", "b", "a"))
grade
#&gt; [1] b b a c
#&gt; Levels: c &lt; b &lt; a
attributes(grade)
#&gt; $levels
#&gt; [1] "c" "b" "a"
#&gt; #&gt; $class
#&gt; [1] "ordered" "factor" Date vectors are built on top of double vectors. They have class “Date” and no other attributes:today &lt;- Sys.Date()
typeof(today)
#&gt; [1] "double"
attributes(today)
#&gt; $class
#&gt; [1] "Date"
The value of the double (which can be seen by stripping the class), represents the number of days since 1970-01-01:date &lt;- as.Date("1970-02-01")
unclass(date)
#&gt; [1] 31
Two ways of storing date-time information:
POSIXct(calendar time), and POSIXlt(local time).
POSIX is short for Portable Operating System Interface
We will focus on POSIXct (time zone only control the format)now_ct &lt;- as.POSIXct("2018-08-01 22:00", tz = "UTC")
now_ct
#&gt; [1] "2018-08-01 22:00:00 UTC"
typeof(now_ct)
#&gt; [1] "double"
as.double(now_ct) # seconds from 1970 Jan 01 at midnight GMT
#&gt; [1] 1533160800
attributes(now_ct)
#&gt; $class
#&gt; [1] "POSIXct" "POSIXt" #&gt; #&gt; $tzone
#&gt; [1] "UTC"
Durations: the amount of time between pairs of dates or date-times
on top of doubles
units attribute to store the time unit.
one_week_1 &lt;- as.difftime(1, units = "weeks")
one_week_1 #&gt; Time difference of 1 weeks typeof(one_week_1) #&gt; [1] "double"
attributes(one_week_1)
#&gt; $class
#&gt; [1] "difftime"
#&gt; #&gt; $units
#&gt; [1] "weeks" one_week_2 &lt;- as.difftime(7, units = "days")
one_week_2 #&gt; Time difference of 7 days typeof(one_week_2) #&gt; [1] "double"
attributes(one_week_2)
#&gt; $class
#&gt; [1] "difftime"
#&gt; #&gt; $units
#&gt; [1] "days"
list can store different types of data.
list() to create a list. You can put lists inside of a list.
Technically, list stores the same type data: references:
n = c(2, 3, 5) s = c("aa", "bb", "cc", "dd", "ee") b = c(TRUE, FALSE, TRUE, FALSE, FALSE) x = list(n, s, b) # x contains references of n, s, b lobstr::obj_addr(x[[1]]) # 0xb0a905816a28
lobstr::obj_addr(n) # 0xb0a905816a28
The&nbsp;typeof()&nbsp;a list is&nbsp;list.
Test for a list with&nbsp;is.list()
Coerce to a list with&nbsp;as.list()
Convert list to atomic list unlist()
list(1:3)
#&gt; [[1]]
#&gt; [1] 1 2 3 as.list(1:3)
#&gt; [[1]]
#&gt; [1] 1
#&gt; #&gt; [[2]]
#&gt; [1] 2
#&gt; #&gt; [[3]]
#&gt; [1] 3
List Array can be useful if you want to arrange objects in a grid-like structure.l &lt;- list(1:3, "a", TRUE, 1.0)
dim(l) &lt;- c(2, 2)
l
#&gt; [,1] [,2]
#&gt; [1,] Integer,3 TRUE
#&gt; [2,] "a" 1 l[[1, 1]]
#&gt; [1] 1 2 3 <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/vectors-chap.html" target="_self">https://adv-r.hadley.nz/vectors-chap.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/subsetting.html" target="_self">https://adv-r.hadley.nz/subsetting.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-vector-and-list.html</link><guid isPermaLink="false">programming/r/R Vector and List.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 05:38:42 GMT</pubDate><enclosure url="https://i.imgur.com/QjiWrk1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/QjiWrk1.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[R S4]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:OOP" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#OOP">#OOP</a> <a href="https://www.justype.net/bioinfo?query=tag:advanced" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#advanced">#advanced</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/programming/r/r-s4.html</link><guid isPermaLink="false">programming/r/R S4.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:19:26 GMT</pubDate></item><item><title><![CDATA[R S3]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:OOP" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#OOP">#OOP</a> <a href="https://www.justype.net/bioinfo?query=tag:advanced" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#advanced">#advanced</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/programming/r/r-s3.html</link><guid isPermaLink="false">programming/r/R S3.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:19:23 GMT</pubDate></item><item><title><![CDATA[R RC]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:OOP" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#OOP">#OOP</a> <a href="https://www.justype.net/bioinfo?query=tag:advanced" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#advanced">#advanced</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/programming/r/r-rc.html</link><guid isPermaLink="false">programming/r/R RC.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:19:19 GMT</pubDate></item><item><title><![CDATA[R R6]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:OOP" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#OOP">#OOP</a> <a href="https://www.justype.net/bioinfo?query=tag:advanced" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#advanced">#advanced</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/programming/r/r-r6.html</link><guid isPermaLink="false">programming/r/R R6.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:18:58 GMT</pubDate></item><item><title><![CDATA[R Metaprogramming]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/programming/r/r-metaprogramming.html</link><guid isPermaLink="false">programming/r/R Metaprogramming.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:18:21 GMT</pubDate></item><item><title><![CDATA[Tmux]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href="https://www.justype.net/bioinfo?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> Tmux (Terminal Multiplexer) allows you to manage multiple terminal sessions from a single window. It enables you to
Split your terminal (different pane)
<br><a data-href="Run Jobs in Background" href="https://www.justype.net/bioinfo/linux-and-hpc/linux/run-jobs-in-background.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Run Jobs in Background</a>
Reconnect to sessions even after disconnecting from SSH.
<br><img alt="tmux pane" src="https://i.imgur.com/cO8SnPv.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved"><br><img alt="tmux sessions" src="https://i.imgur.com/s8CcceO.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
New session: tmux
List sessions: tmux ls
Detach session: tmux detach
Attach session: tmux attach -t name
# enable mouse mode
set -g mouse on
# enable clipboard OSC52
set -s set-clipboard on <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://tmuxcheatsheet.com/" target="_self">https://tmuxcheatsheet.com/</a>
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/tools/tmux.html</link><guid isPermaLink="false">linux-and-hpc/tools/Tmux.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:15:09 GMT</pubDate><enclosure url="https://i.imgur.com/cO8SnPv.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/cO8SnPv.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Micromamba]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href="https://www.justype.net/bioinfo?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> <a href="https://www.justype.net/bioinfo?query=tag:package-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#package-manager">#package-manager</a> <br><img src="https://mamba.readthedocs.io/en/latest/_static/logo.png" height="32" alt="mamba logo" referrerpolicy="no-referrer" target="_self" class="is-unresolved"> Micromamba&nbsp;is a fully statically-linked, self-contained executable, compared to <a data-href="Miniconda" href="https://www.justype.net/bioinfo/linux-and-hpc/tools/miniconda.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Miniconda</a>. This means that the&nbsp;base&nbsp;environment is completely empty.
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html" target="_self">https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html</a>
You can install conda along with micromamba, just install conda in base environment.
Activate/Run:
micromamba activate env_name (using conda env, base env by default)
micromamba deactivate (stop using current conda env)
micromamba run -n env_name command (run certain command in specific environment)
Packages:
micromamba install package[=version] [-c channel] (version and channel is optional)
micromamba update [-a/package] (update certain packages or all -a)
micromamba remove package (remote certain packages)
Environments:
micromamba create -n env_name package[=version] (create environment with name)
micromamba env list (List available environments)
micromamba env remove -n env_name (remove environment)
Cleaning Cache and Unused packages: micromamba clean -a"${SHELL}" &lt;(curl -L micro.mamba.pm/install.sh) # micromamba shell init --shell bash --root-prefix /where/you/want/to/install <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://bioconda.github.io/" target="_self">https://bioconda.github.io/</a>
Add bioconda and conda-forge channels:micromamba config prepend channels bioconda
micromamba config prepend channels conda-forge
micromamba config set channel_priority strict
# micromamba config set auto_activate_base false
Conda Runtime Config file. After you add channels, it will be like this.Personally, I prefer to set auto_activate_base to false to save bash initiation time.channels: - conda-forge - bioconda
channel_priority: strict
auto_activate_base: false
micromamba create -n env_name package=version
# e.g.
micromamba create -n seq sra-tools bowtie bowtie2 star samtools
micromamba activate env_name
# e.g.
micromamba activate seq # then you can run commands in seq env
fasterq SRRXXXXXXXX
micromamba install package[=version] [-n env_name] [-c channel] # e.g.
micromamba install kallisto bustools kb-python # do this when seq env is activated
micromamba install sra-tools=3 # it will install version 3.x.x
micromamba install salmon -n seq # install salmon in seq env
# Install pytorch using conda
micromamba install pytorch torchvision torchaudio pytorch-cuda=12.4 -c pytorch -c nvidia
micromamba run -n env_name command # e.g.
micromamba run -n base nvim
micromamba run -n python2.7 python python2_script.py
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/tools/micromamba.html</link><guid isPermaLink="false">linux-and-hpc/tools/Micromamba.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:14:06 GMT</pubDate><enclosure url="https://mamba.readthedocs.io/en/latest/_static/logo.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://mamba.readthedocs.io/en/latest/_static/logo.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Lmod]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> <a href="https://www.justype.net/bioinfo?query=tag:env-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#env-manager">#env-manager</a><br><img src="https://lmod.readthedocs.io/en/latest/_static/Lmod-4color@2x.png" height="32" alt="Lmod logo" referrerpolicy="no-referrer" target="_self" class="is-unresolved"> <a data-tooltip-position="top" aria-label="https://lmod.readthedocs.io/en/latest/index.html" rel="noopener nofollow" class="external-link is-unresolved" href="https://lmod.readthedocs.io/en/latest/index.html" target="_self"><strong></strong></a>Lmod is a lua and enhanced version of <a data-href="Environment Modules" href="https://www.justype.net/bioinfo/linux-and-hpc/tools/environment-modules.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Environment Modules</a>.They have the same usage. But their module files are different.<br>Go to check my GitHub repository: <a data-tooltip-position="top" aria-label="https://github.com/Justype/modules" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/Justype/modules" target="_self">Justype/modules</a>
module avail
module load software
module unload software
module purge (unload all)
The most important part is:
prepend_path("PATH", pathJoin(app_root, "bin")) (add bin to $PATH)
setenv (environmental variable, in the machine)
My template.lua example.-- Lmod modulefile.lua
-- Almost all of them are automated, you can modify whatis, ModulesHelp, and APP_HOME as needed.
-- Search TOCHANGE to find the targets.
-- You can also load other dependency modules by depends_on().
-- depends_on("java/17.0.12") local abs_path = myFileName() -- absolute path of module, /somewhere/modules/modulefiles/app/x.y.z
local app_full_name = myModuleFullName() -- full name of module, app/x.y.z
local app_name = app_full_name:match("^(.+)/") -- app name, app
local app_version = myModuleVersion() -- app version, x.y.z
local module_root = abs_path:match("^(.+)/.+/.+/") -- abs path of modules, /somewhere/modules
local app_root = pathJoin(module_root, "apps", app_full_name) -- abs path of target app, /somewhere/modules/apps/app/x.y.z
local current_datetime = os.date("%Y-%m-%d %H:%M:%S") -- Record current datetime -- TOCHANGE: A brief description using whatis
whatis("Loads " .. app_name .. " version " .. app_version) -- TOCHANGE: Detailed help section
help([[Placeholder for the usage of this module.]]) -- Display a message when loading the module
if (mode() == "load") then io.stderr:write("[" .. current_datetime .. "] Loading module " .. app_full_name .. "\n") -- # only display message if not in SLURM -- if os.getenv("SLURM_JOB_ID") == nil then -- end
-- Display a message when unloading the module
elseif (mode() == "unload") then -- io.stderr:write("[" .. current_datetime .. "] Unloading module " .. app_full_name .. "\n")
end -- Modify environment variables if the directories exist
if (isDir(pathJoin(app_root, "bin"))) then prepend_path("PATH", pathJoin(app_root, "bin"))
elseif (mode() == "load" and os.getenv("SLURM_JOB_ID") == nil) then io.stderr:write("WARNING: No bin directory found in " .. app_full_name .. "\n")
end
if (isDir(pathJoin(app_root, "lib"))) then prepend_path("LD_LIBRARY_PATH", pathJoin(app_root, "lib"))
end
if (isDir(pathJoin(app_root, "share/man"))) then prepend_path("MANPATH", pathJoin(app_root, "share/man"))
end -- TOCHANGE: Set custom environment variables and aliases
-- setenv("APP_HOME", app_root)
-- set_alias("app", "command") -- Handle conflicts with other versions
conflict(app_name) <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://lmod.readthedocs.io/en/latest/index.html" target="_self">https://lmod.readthedocs.io/en/latest/index.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://lmod.readthedocs.io/en/latest/100_modulefile_examples.html" target="_self">https://lmod.readthedocs.io/en/latest/100_modulefile_examples.html</a>
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/tools/lmod.html</link><guid isPermaLink="false">linux-and-hpc/tools/Lmod.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:13:10 GMT</pubDate><enclosure url="https://lmod.readthedocs.io/en/latest/_static/Lmod-4color@2x.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://lmod.readthedocs.io/en/latest/_static/Lmod-4color@2x.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Symbolic Link]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a>Symbolic link is like a shortcut, easy to access and saving space.~ $ ln -s /workspace/lab/your_lab lab
~ $ ls -l lab
lrwxrwxrwx. 1 user group 22 Nov 21 00:00 lab -&gt; /workspace/lab/your_lab Definition: A hard link is a direct reference to the same index node as the original file. Multiple hard links to the same file share the same data and metadata (permissions, timestamps, etc.).
Key Characteristics: File Content: All hard links to a file point to the same data on the disk.
File Deletion: The file content is only deleted when all hard links to it are removed.
Cross-Partition: Hard links cannot span across different filesystems or partitions.
Directories: Typically, hard links cannot be created for directories (to avoid filesystem loops), except in special cases like with some low-level tools.
Updating the File: Changes to the content of the file are reflected in all hard links.
Storage: Creating a hard link doesn’t consume additional storage for the file's content, only a small amount for the directory entry. Definition: A symbolic link is a special file that points to the path of another file or directory. It works as a shortcut.
Key Characteristics: File Content: A symbolic link points to a pathname, not the actual file content.
File Deletion: If the target file is deleted, the symbolic link becomes a broken link.
Cross-Partition: Symbolic link can span across different filesystems or partitions.
Directories: Symbolic link can be created for directories without restrictions.
Updating the File: If the target file is replaced or moved, the symbolic link must be updated; otherwise, it breaks.
Storage: Symbolic link require minimal storage for the link path itself. Hard link: Efficiently create multiple references to large files without duplicating content.
Used in backup systems to save space by pointing multiple snapshots to the same unchanged data. Symbolic link: Create shortcuts to files or directories for easier navigation.
Link files or directories across filesystems or partitions.
Common in configuration management (e.g., /etc/nginx/sites-enabled linking to /etc/nginx/sites-available). ]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/symbolic-link.html</link><guid isPermaLink="false">linux-and-hpc/linux/Symbolic Link.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:12:35 GMT</pubDate></item><item><title><![CDATA[Environment Variables]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> Environment variables are key-value pairs that define the environment in which processes run.
env view all env variables
export VAR setting env variable
echo $VAR printing env variable
unset VAR unsetting variable
PATH: export PATH=/abs/path/to/directory:$PATH
System Configuration: Control system behavior (e.g., paths, locale, user settings).
User Customization: Allow users to modify their environment, like setting default editor.
Process Settings: Provide runtime parameters to applications and scripts. Temporary (Session-only):
export MY_VAR="value"
This only lasts for the duration of the session or the current shell.
Permanent (Across sessions): Add the export statement to configuration files like ~/.bashrc or ~/.bash_profile.
echo 'export MY_VAR="value"' &gt;&gt; ~/.bashrc
After editing ~/.bashrc, reload it:source ~/.bashrc Print value: echo $VAR_NAME
List all environment variables env or printenv To remove a variable: unset VAR_NAME
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/environment-variables.html</link><guid isPermaLink="false">linux-and-hpc/linux/Environment Variables.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:11:59 GMT</pubDate></item><item><title><![CDATA[Common Linux Commands]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href="https://www.justype.net/bioinfo?query=tag:gpt" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#gpt">#gpt</a>]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/common-linux-commands.html</link><guid isPermaLink="false">linux-and-hpc/linux/Common Linux Commands.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:11:44 GMT</pubDate></item><item><title><![CDATA[apt]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:ubuntu" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#ubuntu">#ubuntu</a> <a href="https://www.justype.net/bioinfo?query=tag:package-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#package-manager">#package-manager</a> NOTE: Always update before installing/upgrading packages# add PPA
sudo add-apt-repository ppa:&lt;ppa-name&gt;
# e.g. NeoVim
sudo add-apt-repository ppa:neovim-ppa/unstable # remove PPA
sudo add-apt-repository --remove ppa:&lt;ppa-name&gt;
# Hold a package
sudo apt-mark hold &lt;package-name&gt; # Check the hold status
apt-mark showhold # Unhold
sudo apt-mark unhold &lt;package-name&gt;
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/ubuntu/apt.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/apt.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:09:59 GMT</pubDate></item><item><title><![CDATA[Singularity]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:hpc" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#hpc">#hpc</a> <a href="https://www.justype.net/bioinfo?query=tag:container" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#container">#container</a><br><img src="https://docs.sylabs.io/guides/3.0/user-guide/_static/logo.png" height="32" alt="singularity logo" referrerpolicy="no-referrer" target="_self" class="is-unresolved"> <a data-tooltip-position="top" aria-label="https://github.com/sylabs/singularity" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/sylabs/singularity" target="_self">Singularity</a> is container system like Docker but can run without sudo privilege.
Compatibility: It doesn’t require root access to run (unlike Docker).
Performance: Near-native performance.
Security: No root, so cannot do something malicious.
Run a Container: To execute a command inside the container:singularity exec my_container.sif [commands]
Shell into a Container: To get an interactive shell inside the container:singularity shell my_container.sif
Overlay allows users to create temporary, writable layers on top of a container's existing filesystem.# Create Overlay
singularity overlay create --size 1024 --sparse overlay.img # Use Overlay with -o parameter
singularity shell -o shell.img my_container.sif
# ro means read-only
singularity exec -o overlay.img:ro my_container.sif &lt;command&gt;
To create a container from a definition file (e.g., my_container.def)sudo singularity build my_container.sif my_container.def
<br>My def on GitHub: <a data-tooltip-position="top" aria-label="https://github.com/Justype/HPC-tips/blob/main/singularity-def/cuda-nvim-code-rstudio.def" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/Justype/HPC-tips/blob/main/singularity-def/cuda-nvim-code-rstudio.def" target="_self">cuda-nvim-code-rstudio.def</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://sylabs.io/singularity/" target="_self">https://sylabs.io/singularity/</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/sylabs/singularity" target="_self">https://github.com/sylabs/singularity</a>
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/hpc/singularity.html</link><guid isPermaLink="false">linux-and-hpc/hpc/Singularity.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:09:15 GMT</pubDate><enclosure url="https://docs.sylabs.io/guides/3.0/user-guide/_static/logo.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://docs.sylabs.io/guides/3.0/user-guide/_static/logo.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Genetics and Genomics]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/genetics-genomics/genetics-and-genomics.html</link><guid isPermaLink="false">genetics-genomics/Genetics and Genomics.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:08:57 GMT</pubDate></item><item><title><![CDATA[Biomedical Science]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/biomed/biomedical-science.html</link><guid isPermaLink="false">biomed/Biomedical Science.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:08:53 GMT</pubDate></item><item><title><![CDATA[Biochemistry]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>https://www.justype.net/bioinfo/biochem/biochemistry.html</link><guid isPermaLink="false">biochem/Biochemistry.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:08:50 GMT</pubDate></item><item><title><![CDATA[Bash Script]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href="https://www.justype.net/bioinfo?query=tag:bash" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#bash">#bash</a>Bash script is a text file containing a series of commands written for the Bash shell.
Shebang (#!/bin/bash): The first line specifying using bash to run this.
Make executable: Run chmod +x myscript.sh to make it executable
Execute: Run with ./myscript.sh or bash myscript.sh
<br><a data-href="bashrc vs bash_profile" href="https://www.justype.net/bioinfo/linux-and-hpc/linux/bashrc-vs-bash_profile.html#_0" class="internal-link" target="_self" rel="noopener nofollow">bashrc vs bash_profile</a> bashrc for all bash script
bash_profile for login shell only #!/bin/bash ls # do something creating: variable_name="value" (no space)
accessing: $variable_name
printing: echo $variable_name
arithmetic: $(( num1 + num2 )) (+-*/)
string concatenation: result="$string1 $string2" ${variable:-default_value} If variable is unset or empty, default_value is used.
get filename or extension
FILE=example.tar.gz
echo "${FILE%%.*}" # example
echo "${FILE%.*}" # example.tar
echo "${FILE#*.}" # tar.gz
echo "${FILE##*.}" # gz get script location
script_dir="$(dirname "${BASH_SOURCE[0]}")"
if [ condition1 ]; then # Commands if condition1 is true
elif [ condition2 ]; then # Commands if condition2 is true
else # Commands if neither condition1 nor condition2 are true
fi
case $variable in pattern1 | pattern2) # Commands if pattern1 or pattern2 match ;; pattern3) # Commands if pattern3 matches ;; *) # Commands if no pattern matches ;;
esac The for loop is used to iterate over a series of values, such as a list or a range of numbers.for variable in "value1 value2 value3"; do # Commands to be executed
done for arg in $@; do echo Arguments $arg
done for i in {1..5}; do echo "Number: $i"
done
You can also use a for loop with a C-style syntax, where you explicitly define the initialization, condition, and increment/decrement.Syntax:for (( initialization; condition; increment )); do # Commands to be executed
done
for (( i=1; i&lt;=5; i++ )); do echo "Number: $i"
done
The while loop executes as long as a condition is true. It checks the condition before executing the commands inside the loop.while [ condition ]; do # Commands to be executed
done
#!/bin/bash for i in {1..10}; do if [ $i -eq 5 ]; then echo "Breaking the loop at i=$i" break elif [ $i -eq 3 ]; then continue # Skip iteration 3 fi echo "i=$i"
done
In Bash, you can use various conditions to compare values, check for patterns, and make decisions based on logical conditions.Always use double quote if you are using bash.For comparing numbers, you typically use the [ (or test) command with operators like -gt, -lt, -ge, -le, -eq, and -ne.But in bash you can also use double square [[ ]] for extended test command.For comparing strings, you use different operators such as =, !=, -z, and -n.To match strings against regular expressions, use the [[ ... ]] test with the =~ operator.#!/bin/bash string="hello123" if [[ "$string" =~ ^hello[0-9]+$ ]]; then echo "String matches the regex"
else echo "String does not match the regex"
fi To combine multiple conditions, use logical operators like -a (AND), -o (OR), and ! (NOT).But in bash you can also use double square [[ ]] for extended test command.Bash also supports file-related conditions. These can check if files exist, are readable, writable, or executable.You can combine conditions using &amp;&amp; (AND) and || (OR) in an if statement.Example#!/bin/bash # Function definition
calculate() { local result=$(( $1 * $2 )) # Local variable echo $result # Return value via echo
} # Function call with arguments
result=$(calculate 5 10) # Capture return value
echo "Result is: $result" ]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/bash-script.html</link><guid isPermaLink="false">linux-and-hpc/linux/Bash Script.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:08:35 GMT</pubDate></item><item><title><![CDATA[Remove snap from Ubuntu]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:ubuntu" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#ubuntu">#ubuntu</a> TL;DR:sudo rm -rf /var/cache/snapd/
sudo apt -y autoremove --purge snapd gnome-software-plugin-snap
rm -fr ~/snap
sudo apt-mark hold snapd
Remove Ubuntu Firefox (snap version)sudo snap remove firefox # If failed, run this: disable gnome extensions and hunspell service and remove firefox
sudo rm /etc/apparmor.d/usr.bin.firefox sudo rm /etc/apparmor.d/local/usr.bin.firefox
sudo systemctl stop var-snap-firefox-common-host\\x2dhunspell.mount
sudo systemctl disable var-snap-firefox-common-host\\x2dhunspell.mount
sudo snap remove firefox
Add repository and set prioritysudo add-apt-repository ppa:mozillateam/ppa echo '
Package: *
Pin: release o=LP-PPA-mozillateam
Pin-Priority: 1001 Package: firefox
Pin: version 1:1snap*
Pin-Priority: -1
' | sudo tee /etc/apt/preferences.d/mozilla-firefox
Update list and install Firefoxsudo apt update
sudo apt install firefox <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://askubuntu.com/questions/1035915/how-to-remove-snap-from-ubuntu" target="_self">https://askubuntu.com/questions/1035915/how-to-remove-snap-from-ubuntu</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://askubuntu.com/questions/1399383/how-to-install-firefox-as-a-traditional-deb-package-without-snap-in-ubuntu-22/1404401#1404401" target="_self">https://askubuntu.com/questions/1399383/how-to-install-firefox-as-a-traditional-deb-package-without-snap-in-ubuntu-22/1404401#1404401</a>
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/ubuntu/remove-snap-from-ubuntu.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/Remove snap from Ubuntu.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:04:27 GMT</pubDate></item><item><title><![CDATA[R Packages on Ubuntu]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href="https://www.justype.net/bioinfo?query=tag:ubuntu" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#ubuntu">#ubuntu</a> <a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> Failed to build the R package Cause: Ubuntu packages not installed
Solution: sudo apt install How to know which package you want to install?2 conditions:
<br><a data-href="R" href="https://www.justype.net/bioinfo/programming/r/r.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R</a> will tell you which packages you need to install, like: apt install &lt;package name&gt;
Find it by yourself Find which step you got the error
Search for the missing library
Find the name and the version of the package
Install it Error: Error installing package 'curl':
================================ * installing *source* package ‘curl’ ...
** package ‘curl’ successfully unpacked and MD5 sums checked
** using staged installation
Found pkg-config cflags and libs!
Using PKG_CFLAGS=-I/usr/include/x86_64-linux-gnu
Using PKG_LIBS=-lcurl
--------------------------- [ANTICONF] --------------------------------
Configuration failed because **libcurl was not found**. Try installing: * deb: libcurl4-openssl-dev (Debian, Ubuntu, etc) * rpm: libcurl-devel (Fedora, CentOS, RHEL)
If libcurl is already installed, check that 'pkg-config' is in your
PATH and PKG_CONFIG_PATH contains a libcurl.pc file. If pkg-config
is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:
R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'
-------------------------- [ERROR MESSAGE] ---------------------------
In file included from /workspace/lab/hanlab/software/bin/conda/envs/r44/x86_64-conda-linux-gnu/sysroot/usr/include/features.h:375, from /usr/include/x86_64-linux-gnu/sys/types.h:25, from /usr/include/x86_64-linux-gnu/curl/system.h:430, from /usr/include/x86_64-linux-gnu/curl/curl.h:35, from &lt;stdin&gt;:1:
/usr/include/x86_64-linux-gnu/sys/cdefs.h:146:55: error: missing binary operator before token "(" 146 | #if __USE_FORTIFY_LEVEL == 3 &amp;&amp; (__glibc_clang_prereq (9, 0) | ^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:634:49: error: missing binary operator before token "(" 634 | #if __GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5) | ^
In file included from /workspace/lab/hanlab/software/bin/conda/envs/r44/x86_64-conda-linux-gnu/sysroot/usr/include/stdio.h:937, from /usr/include/x86_64-linux-gnu/curl/curl.h:46:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:233:17: error: missing binary operator before token "(" 233 | #if __GLIBC_USE (DEPRECATED_GETS) | ^
--------------------------------------------------------------------
ERROR: configuration failed for package ‘curl’
* removing ‘/workspace/lab/hanlab/chengz63/scPipeline/renv/library/linux-ubuntu-jammy/R-4.4/x86_64-conda-linux-gnu/.renv/1/curl’
install of package 'curl' failed [error code 1]
Simply install libcurl: apt install -y libcurl4-openssl-dev
OS Version: Ubuntu 24.04
Package to install: reshape2
When you get an error, 2 ways:
Search it in AI tools (ChatGPT), they will tell you which part goes run.
Find the missing packages by yourself.
Error: Error installing package 'reshape2':
==================================== * installing *source* package ‘reshape2’ ...
** package ‘reshape2’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0’
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG&nbsp; -I'/home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/Rcpp/include'&nbsp;&nbsp;&nbsp;&nbsp; -fPIC&nbsp; -g -O2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -ffile-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -mbranch-protection=standard -fdebug-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=/usr/src/r-base-4.3.3-2build2 -Wdate-time -D_FORTIFY_SOURCE=3&nbsp; -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG&nbsp; -I'/home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/Rcpp/include'&nbsp;&nbsp;&nbsp;&nbsp; -fPIC&nbsp; -g -O2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -ffile-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -mbranch-protection=standard -fdebug-prefix-map=/build/r-base-Io6aw0/r-base-4.3.3=/usr/src/r-base-4.3.3-2build2 -Wdate-time -D_FORTIFY_SOURCE=3&nbsp; -c melt.cpp -o melt.o
g++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o reshape2.so RcppExports.o melt.o -L/usr/lib/R/lib -lR
installing to /home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/00LOCK-reshape2/00new/reshape2/libs
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
Error in dyn.load(file, DLLpath = DLLpath, ...) :
&nbsp; unable to load shared object '/home/ubuntu/.cache/R/renv/cache/v5/R-4.3/aarch64-unknown-linux-gnu/stringi/1.8.4/39e1144fd75428983dc3f63aa53dfa91/stringi/libs/stringi.so':&nbsp; **libicui18n.so.70: cannot open shared object file: No such file or directory**
Calls: &lt;Anonymous&gt; ... namespaceImport -&gt; loadNamespace -&gt; library.dynam -&gt; dyn.load
Execution halted
ERROR: lazy loading failed for package ‘reshape2’
* removing ‘/home/ubuntu/lab/seurat5/renv/library/R-4.3/aarch64-unknown-linux-gnu/.renv/1/reshape2’
install of package 'reshape2' failed [error code 1] Look for which so file is missing. (No such file or directory), libicui18n.so.70 in this case libicui18n.so.70: cannot open shared object file: No such file or directory Search libicui18n.so.70 ubuntu.
So install the libicu (version 70) In Ubuntu 24, the version of libicu is 74 not 70. Result of apt search libicu: libicu-dev, libicu74 But we need libicu70 <br>Visit <a rel="noopener nofollow" class="external-link is-unresolved" href="https://launchpad.net/ubuntu" target="_self">https://launchpad.net/ubuntu</a>
Search libicu70
<br>Click icu, you will go to <a rel="noopener nofollow" class="external-link is-unresolved" href="https://launchpad.net/ubuntu/+source/icu" target="_self">https://launchpad.net/ubuntu/+source/icu</a>
Click libicu70<br>
<img alt="launchpad-1" src="https://i.imgur.com/6ZydVU4.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
In build, find the architecture fits your computer (most of the time: amd64 but My machine is arm64)<br>
<img alt="launchpad-2" src="https://i.imgur.com/xaJP0IB.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
Down load the deb package in binaries or built files. Copy the link and wget.<br>
<img alt="launchpad-3" src="https://i.imgur.com/aDGrqQT.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
Install it with dpkg: sudo dpkg -i &lt;&gt;.deb
]]></description><link>https://www.justype.net/bioinfo/linux-and-hpc/linux/ubuntu/r-packages-on-ubuntu.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/R Packages on Ubuntu.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:04:06 GMT</pubDate><enclosure url="https://i.imgur.com/6ZydVU4.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/6ZydVU4.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[R OOP]]></title><description><![CDATA[<a href="https://www.justype.net/bioinfo?query=tag:R" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#R">#R</a> <a href="https://www.justype.net/bioinfo?query=tag:data-structure" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#data-structure">#data-structure</a> <a href="https://www.justype.net/bioinfo?query=tag:algorithms" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#algorithms">#algorithms</a> <a href="https://www.justype.net/bioinfo?query=tag:OOP" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#OOP">#OOP</a> <a href="https://www.justype.net/bioinfo?query=tag:advanced" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#advanced">#advanced</a> <br><a data-href="Object-oriented Programming" href="https://www.justype.net/bioinfo/programming/terms/object-oriented-programming.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Object-oriented Programming</a>&nbsp;(OOP). OOP is a little more challenging in R.
Multiple OOP systems in R: <br><a data-href="R S3" href="https://www.justype.net/bioinfo/programming/r/r-s3.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R S3</a> and <a data-href="R S4" href="https://www.justype.net/bioinfo/programming/r/r-s4.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R S4</a> from R base (generic function, traditional R)
<br><a data-href="R RC" href="https://www.justype.net/bioinfo/programming/r/r-rc.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R RC</a> from R base
<br><a data-href="R R6" href="https://www.justype.net/bioinfo/programming/r/r-r6.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R R6</a> from <a data-tooltip-position="top" aria-label="https://r6.r-lib.org/articles/Introduction.html" rel="noopener nofollow" class="external-link is-unresolved" href="https://r6.r-lib.org/articles/Introduction.html" target="_self">R6 package</a> (encapsulated method) sloop package to check OOP type Use sloop::s3_class() instead of class (class is bad on base type) The main reason to use OOP is polymorphism, which means that a developer can consider a function’s interface separately from its implementation.e.g. summary() can produce different outputs for numeric and factordiamonds &lt;- ggplot2::diamonds
summary(diamonds$carat)
#&gt; Min. 1st Qu. Median Mean 3rd Qu. Max. #&gt; 0.20 0.40 0.70 0.80 1.04 5.01
summary(diamonds$cut)
#&gt; Fair Good Very Good Premium Ideal #&gt; 1610 4906 12082 13791 21551
This is method dispatch, which allows different behavior of summary() function.# S3 single dispatch
x &lt;- 1:10 # A numeric object # Generic function
summary &lt;- function(object, ...) UseMethod("summary") # Default method for "summary"
summary.default &lt;- function(object) cat("Summary of default object\n") # Method for numeric objects
summary.numeric &lt;- function(object) cat("Summary of numeric object: Mean =", mean(object), "\n") # Call dispatch
summary(x) # Dispatches to summary.numeric
# Output: Summary of numeric object: Mean = 5.5 Class: Blueprint of an object
Fields: A variable declared in class that stores data or state related to instances of that class.
Methods: A function defined Encapsulation (include in the class: object$method())
Method dispatch (external generic function: function(object)) Inheritance: Allowing a class (child) to inherit fields and methods from another class (parent)
sloop::otype(1:10) # base
sloop::otype(mtcars) # S3
mle_obj &lt;- stats4::mle(function(x = 1) (x - 2) ^ 2)
sloop::otype(mle_obj) # S4
is.object() to tell if a variable is OO object or not# A base object:
is.object(1:10) # FALSE
sloop::otype(1:10) # "base" # An OO object:
is.object(mtcars) # TRUE
sloop::otype(mtcars) # "S3"
Don’t use class(), use sloop::s3_class()class() returns misleading results when applied to base objects.x &lt;- matrix(1:4, nrow = 2)
is.object(x) # FALSE
typeof(x) # "integer"
class(x) # "matrix" "array"
sloop::s3_class(x) # "matrix" "integer" "numeric"
typeof(NULL) # "NULL"
typeof(1L) # "integer"
typeof(1i) # "complex" typeof(mean) # "closure"
typeof(`[`) # "special"
typeof(sum) # "builtin" <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/oo.html" target="_self">https://adv-r.hadley.nz/oo.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://adv-r.hadley.nz/base-types.html" target="_self">https://adv-r.hadley.nz/base-types.html</a>
]]></description><link>https://www.justype.net/bioinfo/programming/r/r-oop.html</link><guid isPermaLink="false">programming/r/R OOP.md</guid><dc:creator><![CDATA[Justype]]></dc:creator><pubDate>Thu, 02 Jan 2025 04:03:59 GMT</pubDate></item><item><title><![CDATA[R Packages]]></title><link>programming/r/packages/r-packages.html</link><guid isPermaLink="false">programming/r/packages/R Packages.md</guid><pubDate>Thu, 02 Jan 2025 02:29:51 GMT</pubDate></item><item><title><![CDATA[Ubuntu]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:ubuntu" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#ubuntu">#ubuntu</a> <br><a data-tooltip-position="top" aria-label="https://ubuntu.com/" rel="noopener nofollow" class="external-link is-unresolved" href="https://ubuntu.com/" target="_self"><strong></strong></a>Ubuntu is one of the most popular Linux distributions, known for its user-friendliness, community support, and robust performance across a wide range of applications, from personal computers to servers and cloud infrastructure.
<br><a data-href="apt" href="linux-and-hpc/linux/ubuntu/apt.html#_0" class="internal-link" target="_self" rel="noopener nofollow">apt</a> (Ubuntu package manager)
<br><a data-href="Remove snap from Ubuntu" href="linux-and-hpc/linux/ubuntu/remove-snap-from-ubuntu.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Remove snap from Ubuntu</a>
<br><a data-href="R Packages on Ubuntu" href="linux-and-hpc/linux/ubuntu/r-packages-on-ubuntu.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R Packages on Ubuntu</a>
]]></description><link>linux-and-hpc/linux/ubuntu/ubuntu.html</link><guid isPermaLink="false">linux-and-hpc/linux/ubuntu/Ubuntu.md</guid><pubDate>Thu, 02 Jan 2025 02:16:16 GMT</pubDate></item><item><title><![CDATA[Programming]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> <br><a data-href="R" href="programming/r/r.html#_0" class="internal-link" target="_self" rel="noopener nofollow">R</a>Programming Paradigms]]></description><link>programming/programming.html</link><guid isPermaLink="false">programming/Programming.md</guid><pubDate>Thu, 02 Jan 2025 02:12:07 GMT</pubDate></item><item><title><![CDATA[Metaprogramming]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/terms/metaprogramming.html</link><guid isPermaLink="false">programming/terms/Metaprogramming.md</guid><pubDate>Wed, 01 Jan 2025 14:43:56 GMT</pubDate></item><item><title><![CDATA[SSH]]></title><description><![CDATA[<a href=".?query=tag:ssh" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#ssh">#ssh</a>SSH (Secure Shell) is a protocol used to securely access and manage remote systems over an encrypted connection.quick guide:
ssh [username]@[hostname or IP address]
scp [source] [username]@[hostname]:[destination] copying files with scp (-r if folder)
Key Authentication (no password required) ssh-keygen and ssh-copy-id
ssh -i [private key] [username]@[host] Port Forwarding: -L [local_port]:[remote_host]:[remote_port] Local
-R [remote_port]:[local_host]:[local_port] Remote <br><a data-href="#SSH Config" href="linux-and-hpc/hpc/ssh.html#SSH_Config_0" class="internal-link" target="_self" rel="noopener nofollow">SSH Config</a>: ~/.ssh/config <br><a data-tooltip-position="top" aria-label="https://filezilla-project.org/" rel="noopener nofollow" class="external-link is-unresolved" href="https://filezilla-project.org/" target="_self">FileZilla</a> (Uncheck recommended software when installing it)
<br><a data-tooltip-position="top" aria-label="https://winscp.net/eng/index.php" rel="noopener nofollow" class="external-link is-unresolved" href="https://winscp.net/eng/index.php" target="_self">WinSCP</a> (Windows ONLY)
<br><a data-tooltip-position="top" aria-label="http://rei.to/carotdav_en.html" rel="noopener nofollow" class="external-link is-unresolved" href="http://rei.to/carotdav_en.html" target="_self">CarotDAV</a> Connecting to a Remote Server:
ssh [username]@[hostname or IP address] Specifying a Port (if not the default 22):
ssh -p [port] [username]@[hostname] Executing a Command on the Remote Server:
ssh [username]@[hostname] [command]
Example:ssh user@localhost "ls -l /var/www" Copying Files with scp: Securely copy files between local and remote machines:
scp [local file] [username]@[hostname]:[destination]
scp [username]@[hostname]:[remote file] [local destination]
# folder with -r
SSH key authentication provides a more secure and convenient alternative to password-based login.
Generate SSH Key Pair: On your local machine, run:
ssh-keygen -t rsa -b 4096
This creates a public key (id_rsa.pub) and private key (id_rsa) in the ~/.ssh/ directory.
Add SSH Key to SSH Agent:
eval "$(ssh-agent -s)" # start SSH agnet in the background
ssh-add ~/.ssh/id_rsa Copy the Public Key to the Remote Server:
ssh-copy-id [username]@[hostname] # NOT Working on Windows
On Windows you need to manually append the public key to the ~/.ssh/authorized_keys file on the remote server.
Set Proper Permissions: Ensure correct file permissions on the server:
chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys Using the Key: After setup, SSH will automatically use the key pair for authentication:
ssh [username]@[hostname]
scp [local file] [username]@[hostname]:[destination]
rsync -r [local folder] [username]@[hostname]:[destination]
<br>Why port forwarding?
Sometimes you want to run <a data-href="Jupyter" href="programming/python/packages/jupyter.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Jupyter</a> or <a data-href="RStudio Server" href="programming/r/rstudio-server.html#_0" class="internal-link" target="_self" rel="noopener nofollow">RStudio Server</a> on the Server.
The application is on a certain port of the server. You need port forwarding to access this app.
SSH can forward ports for secure communication between local and remote systems.
Local Port Forwarding (Access Remote Services Locally):
ssh -L [local_port]:[remote_host]:[remote_port] [username]@[hostname]
Example:ssh -L 8080:localhost:8080 user@192.168.1.100
This forwards your local port 8080 to the remote server's port 80.
Remote Port Forwarding (Expose Local Services to Remote Systems):
This is very helpful when using cluster (expose port to login node).ssh -R [remote_port]:[local_host]:[local_port] [username]@[hostname]
Example:ssh -R 9090:localhost:3000 log-1 # same username as whoami
This forwards the login node's port 9090 to compute node port 3000.
Configuration File: You can simplify SSH commands by using a configuration file (~/.ssh/config):
Host myserver HostName 192.168.1.100 User user Port 2222 # most of time you don't need this, default 22 IdentityFile ~/.ssh/id_rsa LocalForward 8080:localhost:8080
Then connect with:ssh myserver
]]></description><link>linux-and-hpc/hpc/ssh.html</link><guid isPermaLink="false">linux-and-hpc/hpc/SSH.md</guid><pubDate>Wed, 01 Jan 2025 05:19:17 GMT</pubDate></item><item><title><![CDATA[Jupyter]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/python/packages/jupyter.html</link><guid isPermaLink="false">programming/python/packages/Jupyter.md</guid><pubDate>Wed, 01 Jan 2025 05:13:00 GMT</pubDate></item><item><title><![CDATA[Slurm]]></title><description><![CDATA[<a href=".?query=tag:hpc" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#hpc">#hpc</a> <a href=".?query=tag:job-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#job-manager">#job-manager</a><br><a data-tooltip-position="top" aria-label="https://slurm.schedmd.com/overview.html" rel="noopener nofollow" class="external-link is-unresolved" href="https://slurm.schedmd.com/overview.html" target="_self">Slurm</a> is used to request computing resources on cluster.Common Commands:
sbatch script.sh
srun --time=4:00:00 --cpus-per-task=4 --mem=16GB command
squeue -u $USER check your jobs
scancel &lt;job_id&gt; cancel your job
seff &lt;job_id&gt; efficiency of that job (CPU and memory usage) sbatch is for background jobs. It will not be killed if you close the terminal.
srun is for foreground jobs. It will be killed if terminal is closed. Options after double hashtag will not be applied.
Delete singularity, micromamba, or module if you don’t use them.
#!/usr/bin/bash
#SBATCH --cpus-per-task=4
#SBATCH --time=0-6:00:00
#SBATCH --mem=8GB
##SBATCH --gres=gpu:1
#SBATCH --job-name=bash
#SBATCH --output=slurm_%j.out
##SBATCH --mail-type=END ################################################################
# Multi-core Template for SLURM but can used for normal bash script
#
# Special variables:
# $cpus: number of CPUs (set by #SBATCH --cpus-per-task)
# $mem: memory in GB (set by #SBATCH --mem)
# $job_name: job name (set by #SBATCH --job-name)
# # NOTE:
# - Settings start with ##SBATCH will not be applied to SLURM
# - If not in SLURM, it will extract the SLURM settings in this script
# - If in TMUX, it will rename the window when running and done
# - Start your code at line 64 (region YOUR CODE)
#
################################################################ #region PARSING SLURM SETTINGS and FUNCTIONS
START_TIME=`date +%s`
if [ -n "$SLURM_JOB_ID" ]; then ncpu=$SLURM_CPUS_PER_TASK mem=$(($SLURM_MEM_PER_NODE / 1024)) # convert to GB prompt_message="SLURM Job ID: $SLURM_JOB_ID"
else # Extract the SLURM SETTINGS in this script if not running in SLURM script_file="${BASH_SOURCE[0]:-$0}" ncpu=$(sed -n 's/^#SBATCH --cpus-per-task=//p' "$script_file") mem=$(sed -n 's/^#SBATCH --mem=//p' "$script_file") mem=${mem%*GB} # remove GB prompt_message="PID: $$"
fi job_name=$(sed -n 's/^#SBATCH --job-name=//p' "$script_file") ## function to rename tmux window
rename_tmux_window() { if [ -n "$TMUX" ]; then tmux rename-window "$1" fi
} ## function to check NVIDIA GPU and set nv
if [[ -n `ls /dev | grep nvidia` ]]; then echo "has an NVIDIA GPU" nv="--nv"
fi
#endregion echo [`date +"%Y-%m-%d %T"`] START $prompt_message, NCPU: $ncpu MEM: ${mem}GB
rename_tmux_window "$job_name `date +'%Y-%m-%d %H:%M'`" # Decrease mem before applying it to program. Most of time, you will not use $mem
mem=$((mem - 5)) #region YOUR CODE
## micromamba
# eval "$(micromamba shell hook --shell bash)"
## conda
eval "$(conda shell.bash hook)" ## module
module purge ## singularity container
singularity exec $nv \ $SIF bash -c ' #source /ext3/env.sh #conda activate base exit '
#endregion ## Print running time
END_TIME=`date +%s`
RUN_TIME=$((END_TIME - START_TIME))
RUN_TIME_DAYS=$(($RUN_TIME / 86400))
RUN_TIME_HOURS=$(($RUN_TIME / 3600 % 24))
RUN_TIME_MINUTES=$(($RUN_TIME / 60 % 60))
RUN_TIME_SECONDS=$(($RUN_TIME % 60)) echo [`date +"%Y-%m-%d %T"`] END $prompt_message, Elapsed: $RUN_TIME_DAYS days, $RUN_TIME_HOURS hours, $RUN_TIME_MINUTES minutes, $RUN_TIME_SECONDS seconds
rename_tmux_window "DONE $job_name Elapsed $RUN_TIME_DAYS-$RUN_TIME_HOURS:$RUN_TIME_MINUTES:$RUN_TIME_SECONDS" #!/bin/bash
# sbatch-pipeline.sh ID=$(sbatch --parsable $1) # --parsable to get SLURM_JOB_ID
shift for script in "$@"; do # +5 means it will start five minutes after the previous job ID=$(sbatch --parsable --dependency=after:${ID}:+5 $script)
done
Usage: sbatch-pipeline.sh script1.slurm script2.slurm script3.slurm
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://slurm.schedmd.com/overview.html" target="_self">https://slurm.schedmd.com/overview.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://slurm.schedmd.com/sbatch.html" target="_self">https://slurm.schedmd.com/sbatch.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://docs.hpc.shef.ac.uk/en/latest/referenceinfo/scheduler/SLURM/SLURM-environment-variables.html" target="_self">https://docs.hpc.shef.ac.uk/en/latest/referenceinfo/scheduler/SLURM/SLURM-environment-variables.html</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://hpc.nih.gov/docs/job_dependencies.html" target="_self">https://hpc.nih.gov/docs/job_dependencies.html</a>
]]></description><link>linux-and-hpc/hpc/slurm.html</link><guid isPermaLink="false">linux-and-hpc/hpc/Slurm.md</guid><pubDate>Wed, 01 Jan 2025 05:08:18 GMT</pubDate></item><item><title><![CDATA[HPC]]></title><description><![CDATA[<a href=".?query=tag:hpc" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#hpc">#hpc</a> HPC (High-Performance Computing) are usually a cluster, which consists of interconnected server nodes.
<br>Use <a data-href="SSH" href="linux-and-hpc/hpc/ssh.html#_0" class="internal-link" target="_self" rel="noopener nofollow">SSH</a> to login to Login Nodes
<br>You can split large tasks into different Compute Nodes using <a data-href="Slurm" href="linux-and-hpc/hpc/slurm.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Slurm</a>.
<br><img alt="HPC structure" src="https://i.imgur.com/kE4kUmW.png" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
Parallel Processing: Clusters allow tasks to be split into smaller pieces, processed simultaneously across many nodes, speeding up computations.
Distributed Memory: Each node in a cluster has its own memory, and data is shared between nodes via a network.
Scalability: Clusters can easily grow by adding more nodes to increase computational power. Large Simulations: For example, weather forecasting or molecular modeling.
Big Data Analysis: Handling large datasets in fields like genomics or finance.
Machine Learning: Training complex AI models across many nodes.
<br>Clusters are managed with job schedulers (like <a data-href="Slurm" href="linux-and-hpc/hpc/slurm.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Slurm</a>) that distribute computational tasks efficiently across the nodes, ensuring optimal resource utilization.
Controller:&nbsp;slurmctld
Database:&nbsp;slurmdbd
Compute Nodes:&nbsp;slurmd
<br><img alt="Slurm Arch" src="https://slurm.schedmd.com/arch.gif" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://cl.indiana.edu/Supercomputing_at_IU.pdf" target="_self">https://cl.indiana.edu/Supercomputing_at_IU.pdf</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.ibm.com/topics/hpc" target="_self">https://www.ibm.com/topics/hpc</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://slurm.schedmd.com/overview.html" target="_self">https://slurm.schedmd.com/overview.html</a>
]]></description><link>linux-and-hpc/hpc/hpc.html</link><guid isPermaLink="false">linux-and-hpc/hpc/HPC.md</guid><pubDate>Wed, 01 Jan 2025 04:58:18 GMT</pubDate><enclosure url="https://i.imgur.com/kE4kUmW.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://i.imgur.com/kE4kUmW.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux and HPC]]></title><description><![CDATA[<a data-tooltip-position="top" aria-label="Linux" data-href="Linux" href="linux-and-hpc/linux/linux.html#_0" class="internal-link" target="_self" rel="noopener nofollow">🐧Linux</a> and High-Performance Computing (<a data-href="HPC" href="linux-and-hpc/hpc/hpc.html#_0" class="internal-link" target="_self" rel="noopener nofollow">HPC</a>) have become essential tools to analyze vast amounts of data.Admin Privilege
You don’t have sudo privilege on HPC. You need other ways to manage packages and environments. <br><a data-href="Miniconda" href="linux-and-hpc/tools/miniconda.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Miniconda</a> or <a data-href="Micromamba" href="linux-and-hpc/tools/micromamba.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Micromamba</a> with <a data-tooltip-position="top" aria-label="https://bioconda.github.io/" rel="noopener nofollow" class="external-link is-unresolved" href="https://bioconda.github.io/" target="_self">bioconda</a>
<br><a data-href="Environment Modules" href="linux-and-hpc/tools/environment-modules.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Environment Modules</a> or <a data-href="Lmod" href="linux-and-hpc/tools/lmod.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Lmod</a>
<br>To run container/image, use <a data-href="Singularity" href="linux-and-hpc/hpc/singularity.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Singularity</a> <br><a data-href="Bash Script" href="linux-and-hpc/linux/bash-script.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Bash Script</a>
<br><a data-href="Run Jobs in Background" href="linux-and-hpc/linux/run-jobs-in-background.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Run Jobs in Background</a>
<br><a data-href="Linux Permissions" href="linux-and-hpc/linux/linux-permissions.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Linux Permissions</a>
]]></description><link>linux-and-hpc/linux-and-hpc.html</link><guid isPermaLink="false">linux-and-hpc/Linux and HPC.md</guid><pubDate>Wed, 01 Jan 2025 04:54:10 GMT</pubDate></item><item><title><![CDATA[Vim]]></title><link>linux-and-hpc/tools/vim.html</link><guid isPermaLink="false">linux-and-hpc/tools/Vim.md</guid><pubDate>Wed, 01 Jan 2025 04:53:26 GMT</pubDate></item><item><title><![CDATA[Statistics and Math]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> <br><a data-tooltip-position="top" aria-label="https://www.huber.embl.de/msmb/" rel="noopener nofollow" class="external-link is-unresolved" href="https://www.huber.embl.de/msmb/" target="_self">Modern Statistics for Modern Biology</a>
<br><a data-tooltip-position="top" aria-label="https://online.stat.psu.edu/statprogram/graduate-programs" rel="noopener nofollow" class="external-link is-unresolved" href="https://online.stat.psu.edu/statprogram/graduate-programs" target="_self">Penn State Stat Courses</a>
]]></description><link>stat-math/statistics-and-math.html</link><guid isPermaLink="false">stat-math/Statistics and Math.md</guid><pubDate>Wed, 01 Jan 2025 04:50:33 GMT</pubDate></item><item><title><![CDATA[CI Tools]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/terms/ci-tools.html</link><guid isPermaLink="false">programming/terms/CI Tools.md</guid><pubDate>Wed, 01 Jan 2025 04:39:25 GMT</pubDate></item><item><title><![CDATA[Build System]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/terms/build-system.html</link><guid isPermaLink="false">programming/terms/Build System.md</guid><pubDate>Wed, 01 Jan 2025 04:39:15 GMT</pubDate></item><item><title><![CDATA[Object-oriented Programming]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/terms/object-oriented-programming.html</link><guid isPermaLink="false">programming/terms/Object-oriented Programming.md</guid><pubDate>Wed, 01 Jan 2025 04:38:35 GMT</pubDate></item><item><title><![CDATA[Functional Programming]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/terms/functional-programming.html</link><guid isPermaLink="false">programming/terms/Functional Programming.md</guid><pubDate>Wed, 01 Jan 2025 04:38:31 GMT</pubDate></item><item><title><![CDATA[purrr]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/purrr.html</link><guid isPermaLink="false">programming/r/packages/purrr.md</guid><pubDate>Wed, 01 Jan 2025 04:25:44 GMT</pubDate></item><item><title><![CDATA[stringr]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/stringr.html</link><guid isPermaLink="false">programming/r/packages/stringr.md</guid><pubDate>Wed, 01 Jan 2025 04:25:18 GMT</pubDate></item><item><title><![CDATA[future]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/future.html</link><guid isPermaLink="false">programming/r/packages/future.md</guid><pubDate>Wed, 01 Jan 2025 04:24:59 GMT</pubDate></item><item><title><![CDATA[multidplyr]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/multidplyr.html</link><guid isPermaLink="false">programming/r/packages/multidplyr.md</guid><pubDate>Wed, 01 Jan 2025 04:24:52 GMT</pubDate></item><item><title><![CDATA[dplyr]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/dplyr.html</link><guid isPermaLink="false">programming/r/packages/dplyr.md</guid><pubDate>Wed, 01 Jan 2025 04:24:36 GMT</pubDate></item><item><title><![CDATA[tidyr]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/tidyr.html</link><guid isPermaLink="false">programming/r/packages/tidyr.md</guid><pubDate>Wed, 01 Jan 2025 04:23:50 GMT</pubDate></item><item><title><![CDATA[Tidyverse]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/tidyverse.html</link><guid isPermaLink="false">programming/r/packages/Tidyverse.md</guid><pubDate>Wed, 01 Jan 2025 04:23:20 GMT</pubDate></item><item><title><![CDATA[ggplot2]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/ggplot2.html</link><guid isPermaLink="false">programming/r/packages/ggplot2.md</guid><pubDate>Wed, 01 Jan 2025 04:23:14 GMT</pubDate></item><item><title><![CDATA[tibble]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/packages/tibble.html</link><guid isPermaLink="false">programming/r/packages/tibble.md</guid><pubDate>Wed, 01 Jan 2025 04:23:01 GMT</pubDate></item><item><title><![CDATA[R Control Flow]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>programming/r/r-control-flow.html</link><guid isPermaLink="false">programming/r/R Control Flow.md</guid><pubDate>Wed, 01 Jan 2025 02:17:54 GMT</pubDate></item><item><title><![CDATA[Miniconda]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href=".?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> <a href=".?query=tag:package-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#package-manager">#package-manager</a><br><img src="https://docs.anaconda.com/_static/Anaconda_Icon.png" height="32" alt="anaconda logo" referrerpolicy="no-referrer" target="_self" class="is-unresolved"> <a data-tooltip-position="top" aria-label="https://docs.anaconda.com/miniconda/install/#quick-command-line-install" rel="noopener nofollow" class="external-link is-unresolved" href="https://docs.anaconda.com/miniconda/install/#quick-command-line-install" target="_self">Miniconda</a> includes minimum number of packages, including conda and Python.
<br>Because of <a data-tooltip-position="top" aria-label="https://bioconda.github.io/" rel="noopener nofollow" class="external-link is-unresolved" href="https://bioconda.github.io/" target="_self">bioconda channel</a>, you can easily manage bioinfo packages.
Saving disk space using links (hard links in Linux).
Activate/Run:
conda activate env_name (using conda env, base env by default)
conda deactivate (stop using current conda env)
conda run -n env_name command (run certain command in specific environment)
Packages:
conda install package[=version] [-c channel] (channel is optional)
conda update [-a/package] (update certain packages or all -a)
conda remove package (remote certain packages)
Environments:
conda create -n env_name package[=version] (create environment with name)
conda env list (List available environments)
conda env remove -n env_name (remove environment)
Cleaning Cache and Unused packages: conda clean -awget &lt;https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh&gt;
bash Miniconda3-latest-Linux-x86_64.sh # Install without asking configs
# bash Miniconda3-latest-Linux-x86_64.sh -b -p /where_to_install # -b agree without ask # -p prefix # Init the shell if you missed it
/where_to_install/bin/conda init <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://bioconda.github.io/" target="_self">https://bioconda.github.io/</a>
Add bioconda and conda-forge channels:conda config --add channels bioconda
conda config --add channels conda-forge
conda config --set channel_priority strict
# conda config --set auto_activate_base false
Conda Runtime Config file. After you add channels, it will be like this.Personally, I prefer to set auto_activate_base to false to save bash initiation time.channels: - conda-forge - bioconda - default
channel_priority: strict
auto_activate_base: false
conda create -n env_name package=version
# e.g.
conda create -n seq sra-tools bowtie bowtie2 star samtools
conda activate env_name
# e.g.
conda activate seq # then you can run commands in seq env
fasterq SRRXXXXXXXX
conda install package[=version] [-n env_name] [-c channel] # e.g.
conda install kallisto bustools kb-python # do this when seq env is activated
conda install sra-tools=3 # it will install version 3.x.x
conda install salmon -n seq # install salmon in seq env
# Install pytorch using conda
conda install pytorch torchvision torchaudio pytorch-cuda=12.4 -c pytorch -c nvidia
conda run -n env_name command # e.g.
conda run -n base nvim
conda run -n python2.7 python python2_script.py
]]></description><link>linux-and-hpc/tools/miniconda.html</link><guid isPermaLink="false">linux-and-hpc/tools/Miniconda.md</guid><pubDate>Wed, 01 Jan 2025 01:27:00 GMT</pubDate><enclosure url="https://docs.anaconda.com/_static/Anaconda_Icon.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://docs.anaconda.com/_static/Anaconda_Icon.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TTY]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> TTY stands for Teletypewriter, was a machine sending and receiving machine in 1800s and 1900s. Now it stands for a terminal device/interface, allowing messages to be typed, encoded, sent, received, decoded, and printed.<br><img alt="Teletype teleprinters in use in England during World War II" src="https://upload.wikimedia.org/wikipedia/commons/8/89/WACsOperateTeletype.jpg" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
Teletype teleprinters in use in England during World War II<br>TTY on <a data-href="Linux" href="linux-and-hpc/linux/linux.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Linux</a> is simulated and can be found under /dev/ptsThe&nbsp;tty&nbsp;command will print the name of the device file that your pseudo teletypewriter is using to interface to the machine.$ tty
/dev/pts/365 $ tty -s # -s silent $ tty &amp;&amp; echo "In a tty"
/dev/pts/365
In a tty $ tty -s &amp;&amp; echo "In a tty" # only print the message
In a tty
The&nbsp;who&nbsp;command will list information for all logged in users, including yourself.$ who
xxxx pts/365 2024-10-14 05:43 (10.xxx.xxx.14)
xxxx67 pts/415 2024-11-05 14:48 (10.xxx.xxx.254)
xxxx89 pts/734 2024-11-23 20:17 (10.xxx.xxx.13)
xxxx10 pts/856 2024-11-23 22:27 (10.xxx.xxx.237)
<br><img alt="telegraph alphabet" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/International_Telegraph_Alphabet_2_brightened.jpg/820px-International_Telegraph_Alphabet_2_brightened.jpg" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.howtogeek.com/428174/what-is-a-tty-on-linux-and-how-to-use-the-tty-command/" target="_self">https://www.howtogeek.com/428174/what-is-a-tty-on-linux-and-how-to-use-the-tty-command/</a>
<br>DEC PDP-1: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.youtube.com/watch?v=1EWQYAfuMYw" target="_self">https://www.youtube.com/watch?v=1EWQYAfuMYw</a>
]]></description><link>linux-and-hpc/linux/tty.html</link><guid isPermaLink="false">linux-and-hpc/linux/TTY.md</guid><pubDate>Wed, 01 Jan 2025 00:24:34 GMT</pubDate><enclosure url="https://upload.wikimedia.org/wikipedia/commons/8/89/WACsOperateTeletype.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/8/89/WACsOperateTeletype.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Run Jobs in Background]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href=".?query=tag:job-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#job-manager">#job-manager</a> nohup command &amp; view running jobs and their pid ps wf (Be careful if the cluster has multiple login nodes)
kill job kill pid <br>run command in <a data-href="Tmux" href="linux-and-hpc/tools/tmux.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Tmux</a>, then detach the session
<br>sbatch your_script.sh, see <a data-href="Slurm" href="linux-and-hpc/hpc/slurm.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Slurm</a> If your connection to remote machine is closed, SIGHUP signal will be sent to the remote machine to terminate running jobs.
nohup is the middle layer, which catches the SIGHUP signal but does not pass it so that the process will not be terminated.
If something happened that broke the connection between your terminal and the computer, the computer detected the line drop and sent a or hang up signal to the programs you'd been running. The programs ceased execution when they received the signal HUP.Today, a terminal window is an emulation of a physical terminal. If you have processes running that were launched from that terminal window and you close that window the SIGHUP signal is sent to the programs so that they're informed of the HUP and know they should terminate.If you want to have a process continue even if the terminal window it was launched from is closed, you need a way to intercept the SIGHUP so that the program never receives it. (Actually, the terminal window doesn't launch processes, they're launched by the shell session inside the terminal window.) The simple and elegant solution to that problem is to place another process between the shell session and the program, and have that middle-layer program never pass on the SIGHUP signal.That's what nohup does. It launches programs for you so that they are a child process of nohup, not a child process of the shell. Because they're not a child process of the shell, they won't directly receive a SIGHUP from the shell. And if nohup doesn't pass on the SIGHUP to its children, the program won't receive SIGHUP at all.Downloading large fileuser@host:/somewhere/data$ nohup download-data.sh &amp;
[1] **847252** # pid process ID
nohup: ignoring input and appending output to 'nohup.out' user@host:/somewhere/data$ ls
download-data.sh nohup.out data.tar.gz # You can also view the process using ps
user@host:/somewhere/data$ ps wf PID TTY STAT TIME COMMAND 807293 pts/1646 Ss 0:00 -bash 847252 pts/1646 S 0:00 \_ /usr/bin/bash download-data.sh 847254 pts/1646 S 0:05 | \_ wget -N --no-verbose 847893 pts/1646 R+ 0:00 \_ ps wf # pgrep will find all users' processes, please use specific name
user@host:/somewhere/data$ pgrep download-data.sh
847252 # pwdx check working directory
user@host:/somewhere/data$ pwdx 847252
847252: /somewhere/data Print pid in script by echo $$
pgrep progress-name
ps wf by COMMAND and TTY
You can print TTY in script, then you can find the process by ps -t
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.howtogeek.com/804823/nohup-command-linux/" target="_self">https://www.howtogeek.com/804823/nohup-command-linux/</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.baeldung.com/linux/nohup-process-get-pid" target="_self">https://www.baeldung.com/linux/nohup-process-get-pid</a>
]]></description><link>linux-and-hpc/linux/run-jobs-in-background.html</link><guid isPermaLink="false">linux-and-hpc/linux/Run Jobs in Background.md</guid><pubDate>Wed, 01 Jan 2025 00:23:16 GMT</pubDate></item><item><title><![CDATA[Rclone]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href=".?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> <br><img src="https://rclone.org/img/logo_on_light__horizontal_color.svg" height="32" referrerpolicy="no-referrer" target="_self" class="is-unresolved"> <a data-tooltip-position="top" aria-label="https://rclone.org/" rel="noopener nofollow" class="external-link is-unresolved" href="https://rclone.org/" target="_self"><strong></strong></a>Rclone is a powerful command-line tool used for managing and synchronizing files between your local filesystem and various cloud storage providers (e.g., Google Drive, Amazon S3, Dropbox, etc.).
ls list files, lsd list directories
copy, sync,and delete folders, copyto a single file.
rclone mount mydrive: /path/to/mountpoint fusermount -u /path/to/mountpoint (unmount cleaning up) rclone config
# Then follow the prompt:
# 1. n &gt; create new remote
# 2. give a name
# 3. select the remote type
# Follow the prompts to authenticate and authorize
TIPS: You can first authorize on your local machine. Then copy config file to the remote machine.rclone config show # show the path to rclone config file
To list the contents of a remote storage (e.g., mydrive for Google Drive):rclone ls mydrive: # be careful, it will list files in subfolder
rclone lsd mydrive: # list directory only in under this path
To copy a file or directory from your local system to a remote (e.g., Google Drive):# local to remote
rclone copy path/to/directory mydrive:path/to/directory # remote to local
rclone copy mydrive:path/to/directory path/to/local/directory # between remotes
rclone copy mydrive:path/to/directory mydrive2:path/to/directory
copy vs copyto
copy will automatically create directories on the destination if they don't exist.
If you copy a file, you will get: path/file/file on the remote machine.$ rclone copy path/to/file mydrive:path/to/file
$ rclone ls mydrive:path/to/file 0 file/file $ rclone copyto path/to/file mydrive:path/to/file
$ rclone ls mydrive:path/to/file 0 file
The sync command will delete files in the destination that no longer exist in the source, so be cautious.NOTE: This sync is one direction NOT two-way.# local to remote
rclone sync path/to/directory mydrive:path/to/directory
# remote to local
rclone sync mydrive:path/to/directory path/to/local/directory
# between remotes
rclone sync mydrive:path/to/directory mydrive2:path/to/directory
This will copy the files and then delete them from the local filesystem.# local to remote
rclone move path/to/directory mydrive:path/to/directory
# remote to local
rclone move mydrive:path/to/directory path/to/local/directory
# between remotes
rclone move mydrive:path/to/directory mydrive2:path/to/directory
To compare files between a local directory and a remote (to see if they’re identical or need syncing):# local to remote
rclone check path/to/directory mydrive:path/to/directory
# remote to local
rclone check mydrive:path/to/directory path/to/local/directory
# between remotes
rclone check mydrive:path/to/directory mydrive2:path/to/directory
You can mount a remote as a filesystem to interact with it like a local filesystem. This requires FUSE support and must be run with appropriate permissions.rclone mount mydrive: /path/to/mountpoint
To unmount, use:fusermount -u /path/to/mountpoint
rclone delete mydrive:/path/to/remote/file --dry-run: Simulate the operation without actually making changes. This is useful to see what will happen before performing the actual action.
rclone copy /path/to/local/file mydrive:/path/to/remote/directory --dry-run --progress: Show progress while copying or syncing files.
rclone copy /path/to/local/file mydrive:/path/to/remote/directory --progress --exclude: Exclude files that match a pattern.
rclone copy /path/to/local/ mydrive:/path/to/remote/ --exclude "*.txt" <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://rclone.org/" target="_self">https://rclone.org/</a>
]]></description><link>linux-and-hpc/tools/rclone.html</link><guid isPermaLink="false">linux-and-hpc/tools/Rclone.md</guid><pubDate>Wed, 01 Jan 2025 00:22:32 GMT</pubDate><enclosure url="https://rclone.org/img/logo_on_light__horizontal_color.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;figure&gt;&lt;img src="https://rclone.org/img/logo_on_light__horizontal_color.svg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux Permissions]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:permission" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#permission">#permission</a>$ ls -l file.sh
-rwxr-x--x 1 ubuntu ubuntu 0 Nov 24 04:51 file.sh
│ │ │ │ │ │ │ │ │ └─ Name
│ │ │ │ │ │ │ │ └─ Last modified datetime
│ │ │ │ │ │ │ └─ File size (bytes)
│ │ │ │ │ │ └─ Group name
│ │ │ │ │ └─ Owner name
│ │ │ │ └─ Hard link count
│ │ │ └─ Permissions for others (Others can only execute it)
│ │ └─ Permissions for group (Group and read and execute it)
│ └─ Permissions for user/owner (User can read, write, and execute it)
└─ File type (- file, d directory, l symlink) Permissions
File r - Read – *view or copy* its contents w - Write – *modify or remove* it x - eXecute – *run it
Directory r - Read – *list and copy* files from it (needs x permission as well) If no x permission, only names can be detected, no status. w - Write – *edit or delete* files into it (needs x permission as well) x - eXecute – enter it chown&nbsp;– change ownership owner or owner:group or :group
chgrp&nbsp;– change group
chmod&nbsp;– change read, write, and execute permissions
By Text
u&nbsp;user, g&nbsp;group, o&nbsp;others, a&nbsp;all
r read, w write, x execute
e.g.chmod a+r test.sh # adds read permission for all classes
chmod o-x test.sh # removes execute permission for others
chmod u=rw,g=r,o= plan.txt # sets read and write permission for User # sets read for Group # denies all permissions to Others
By Number4210
rwx-
0 : --- none
1 : --x
2 : -w-
3 : -wx write and execute
4 : r--
5 : r-x read and execute
6 : rw- read and write
7 : rwx all the permissions Example
chmod 751 test.sh
# for me: 7 rwx, I can read it, edit it and execute it
# for group: 5 r-x, they can read it and execute it
# for others 1 --x, they can only execute it SetUID (s): chmod u+/-s set user id, file only If applied to an executable file, it allows users to run the file with the permissions of the file's owner.
Represented as rwsr-xr-x.
Example: /bin/passwd others can use it to reset password. SetGID (s): chmod g+/-s set group id, both file and group If applied to directories, new files created within inherit the directory’s group ownership.
Represented as rwxr-sr-x.
Example: group shared folder Sticky Bit (t): chmod +/-t Applied to directories to allow only the owner to delete or modify their files.
Commonly used in shared directories like /tmp.
Represented as drwxrwxrwt. $ ls -l /bin/passwd
-rwsr-xr-x. 1 root root 33K Feb 7 2022 /bin/passwd* $ passwd
Changing password for user xxxx1.
Current password:_
New password:_
Retype new password:_
passwd: all authentication tokens updated successfully.
$ ls -ld group_dir
drwxr-xr-x 2 user group 4096 Nov 24 10:00 group
$ touch group_dir/test_file_user
$ ls -l group_dir # file's group is the default group of the user
drwxr-xr-x 2 user user 4096 Nov 24 10:01 test_file_user $ chmod g+s group_dir # setgid
$ ls -ld group_dir
drwxr-sr-x 2 user group 4096 Nov 24 10:03 group
$ touch group_dir/test_file_group # now file's group is set to group
$ ls -l group_dir drwxr-xr-x 2 user user 4096 Nov 24 10:01 test_file_user
drwxr-xr-x 2 user group 4096 Nov 24 10:04 test_file_group <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://linuxize.com/post/how-to-list-files-in-linux-using-the-ls-command/" target="_self">https://linuxize.com/post/how-to-list-files-in-linux-using-the-ls-command/</a>
<br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.redhat.com/en/blog/suid-sgid-sticky-bit" target="_self">https://www.redhat.com/en/blog/suid-sgid-sticky-bit</a>
]]></description><link>linux-and-hpc/linux/linux-permissions.html</link><guid isPermaLink="false">linux-and-hpc/linux/Linux Permissions.md</guid><pubDate>Wed, 01 Jan 2025 00:21:10 GMT</pubDate></item><item><title><![CDATA[Environment Modules]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> <a href=".?query=tag:env-manager" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#env-manager">#env-manager</a><br><a data-tooltip-position="top" aria-label="https://modules.sourceforge.net/" rel="noopener nofollow" class="external-link is-unresolved" href="https://modules.sourceforge.net/" target="_self">Environment Modules</a> is a tool that simplify shell initialization and lets users easily modify their environment during the session with modulefiles.This is very handy if you want to keep the different versions of the same package.<br>Go to check my GitHub repository: <a data-tooltip-position="top" aria-label="https://github.com/Justype/modules" rel="noopener nofollow" class="external-link is-unresolved" href="https://github.com/Justype/modules" target="_self">Justype/modules</a><br><img alt="modules logo" src="https://modules.sourceforge.net/modules_red.svg" referrerpolicy="no-referrer" target="_self" class="is-unresolved">
module avail (list available modules)
module load software (load certain modules)
module unload software (unload certain modules)
module purge (unload all)
----------------- /workspace/lab/modules/modulefiles -----------------
cellranger/7.2.0 cellranger/8.0.1 spaceranger/3.1.1 ------------------- /usr/share/Modules/modulefiles -------------------
dot module-git module-info modules null use.own ---------------------- /usr/share/modulefiles ------------------------
mpi/mpich-x86_64 mpi/openmpi-x86_64 pmi/pmix-x86_64
$ module load cellranger/8.0.1 # then you can use cellranger
$ cellranger
cellranger cellranger-8.0.1 Process 10x Genomics Gene Expression, Feature Barcode, and Immune Profiling data Usage: cellranger &lt;COMMAND&gt;
...
Important functions
set variable_name value (local variable, in this script)
setenv (environmental variable, in the machine)
prepend-path PATH location_of_bin (add location_of_bin to the beginning of $PATH)
My template module file.
It is version independent, make sure you have the right file name (version).
It is Tcl script not shell script.
#%Module1.0
# Almost all of them are automated, you can modify whatis, ModulesHelp, and APP_HOME as needed.
# Search TOCHANGE to find the targets.
# You can also load other modules in this modulefile.
# module load java/17.0.12 # abs path of this file, like /somewhere/modules/modulefiles/app/x.x.x
set abs_path [file normalize [info script]]
# full name of this module, like app/x.x.x
set app_full_name [module-info name]
# name of this module, like app
set app_name [file dirname $app_full_name]
# version of this app, like x.x.x
set app_version [file tail $app_full_name]
# abs path of modules, like /somewhere/modules
set module_root [file dirname [file dirname [file dirname $abs_path]]]
# abs path of the apps/app/x.x.x , like /somewhere/modules/apps/app/x.x.x
set app_root [file join $module_root apps $app_full_name]
# record current date time
set current_datetime [clock format [clock seconds] -format "%Y-%m-%d %T"] # TOCHANGE: A brief description using module-whatis
module-whatis "Loads $app_name version $app_version" # TOCHANGE: Detailed Help Section
proc ModulesHelp { } { # cannot use variables here puts stderr "Placeholder for the usage of this module."
} # Display a help message when loading this module
if { [module-info mode] == "load" } { puts stderr "\[$current_datetime\] Loading module $app_full_name" # only display message if not in SLURM # if {![info exists ::env(SLURM_JOB_ID)]} { # }
} elseif { [module-info mode] == "unload" } { # puts stderr "\[$current_datetime\] Unloading module $app_full_name"
} # Modify environment variables if the folders exist
if {[file isdirectory "$app_root/bin"]} { prepend-path PATH $app_root/bin
} elseif { [module-info mode] == "load" &amp;&amp; ![info exists ::env(SLURM_JOB_ID)] } { puts stderr "WARNING: No bin directory found in $app_full_name"
}
if {[file isdirectory "$app_root/lib"]} { prepend-path LD_LIBRARY_PATH $app_root/lib
}
if {[file isdirectory "$app_root/share/man"]} { prepend-path MANPATH $app_root/share/man
} # TOCHANGE: Set custom environment variables and aliases
# setenv APP_HOME $app_root
# setalias run_app "$app_root/bin/app" # Handle conflicts with other versions
conflict $app_name <br>Official: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://modules.readthedocs.io/en/stable/index.html" target="_self">https://modules.readthedocs.io/en/stable/index.html</a>
<br>Tutorial: <a rel="noopener nofollow" class="external-link is-unresolved" href="https://adamdjellouli.com/articles/linux_notes/enviroment_modules" target="_self">https://adamdjellouli.com/articles/linux_notes/enviroment_modules</a>
]]></description><link>linux-and-hpc/tools/environment-modules.html</link><guid isPermaLink="false">linux-and-hpc/tools/Environment Modules.md</guid><pubDate>Wed, 01 Jan 2025 00:19:50 GMT</pubDate><enclosure url="https://modules.sourceforge.net/modules_red.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;figure&gt;&lt;img src="https://modules.sourceforge.net/modules_red.svg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a>🐧 Linux is an open-source, Unix-like operating system kernel, first released by Linus Torvalds in 1991.Personally, Linux is great for servers but bad for desktops. It lacks a lot of software: Acrobat, Office, and official cloud drive clients. You can find alternatives. But they are not as good as the original one.
Large Servers or Clusters prefer Red Hat for its security and long-term support.
For personal use, choose whatever you want. (Ubuntu for beginner)
To use Linux server, you need to know:
<br><a data-href="SSH" href="linux-and-hpc/hpc/ssh.html#_0" class="internal-link" target="_self" rel="noopener nofollow">SSH</a>
<br><a data-href="Common Linux Commands" href="linux-and-hpc/linux/common-linux-commands.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Common Linux Commands</a>
<br><a data-href="Linux Permissions" href="linux-and-hpc/linux/linux-permissions.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Linux Permissions</a>
<br><a data-href="Environment Variables" href="linux-and-hpc/linux/environment-variables.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Environment Variables</a>
You may need to know:
<br><a data-href="bashrc vs bash_profile" href="linux-and-hpc/linux/bashrc-vs-bash_profile.html#_0" class="internal-link" target="_self" rel="noopener nofollow">bashrc vs bash_profile</a>
<br><a data-href="Bash Script" href="linux-and-hpc/linux/bash-script.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Bash Script</a>
<br><a data-href="Symbolic Link" href="linux-and-hpc/linux/symbolic-link.html#_0" class="internal-link" target="_self" rel="noopener nofollow">Symbolic Link</a> (symlink)
Other Tips:
<br><a data-href="stdin stdout stderr" href="linux-and-hpc/linux/stdin-stdout-stderr.html#_0" class="internal-link" target="_self" rel="noopener nofollow">stdin stdout stderr</a>
]]></description><link>linux-and-hpc/linux/linux.html</link><guid isPermaLink="false">linux-and-hpc/linux/Linux.md</guid><pubDate>Tue, 31 Dec 2024 23:49:35 GMT</pubDate></item><item><title><![CDATA[bashrc vs bash_profile]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href=".?query=tag:bash" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#bash">#bash</a> Both ~/.bashrc and ~/.bash_profile are configuration files for Bash. They are used to set environment variables, aliases, functions, and customize the user shell environment.
.bashrc is for non-login shells (interactive or run a script)
.bash_profile is for login shells (SSH login).
OR you just put all the settings in .bashrc
Purpose: Executed for interactive non-login shells (run a script or open a new terminal).
Common Usage: Set aliases, functions, and custom shell behavior.
Modify environment variables that are relevant to the interactive shell session.
Example: Setting up color support or shell prompt customization. # ~/.bashrc
alias ll='ls -la'
export PATH=$PATH:/home/user/bin Purpose: Executed for login shells (when you log in via the terminal, SSH, or console).
Common Usage: Set environment variables that should apply to all shell sessions (interactive and non-interactive).
Typically, this file is used to configure user environment settings, such as PATH, USER, LANG, etc.
It often sources ~/.bashrc to apply those configurations to login shells as well. Example content:# ~/.bash_profile
export PATH=$PATH:/usr/local/bin
export EDITOR=vim # Source ~/.bashrc for login shells
if [ -f ~/.bashrc ]; then source ~/.bashrc
fi Source ~/.bashrc in ~/.bash_profile to ensure your interactive shell settings apply to login shells as well:
# In ~/.bash_profile
if [ -f ~/.bashrc ]; then source ~/.bashrc
fi
]]></description><link>linux-and-hpc/linux/bashrc-vs-bash_profile.html</link><guid isPermaLink="false">linux-and-hpc/linux/bashrc vs bash_profile.md</guid><pubDate>Tue, 31 Dec 2024 22:22:20 GMT</pubDate></item><item><title><![CDATA[Gzip]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> <a href=".?query=tag:tools" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#tools">#tools</a> gzip is a command-line tool used for compressing and decompressing files.To compress a file using gzip, use the following command:gzip filename
This will compress the file and replace the original file with a .gz compressed version (filename.gz).To decompress a .gz file, you can use:gzip -d filename.gz
gunzip filename.gz
You can compress multiple files by listing them:gzip file1 file2 file3
gzip *.fastq
This will compress each file individually and create .gz files for each.By default, gzip deletes the original file after compression. To keep the original file, use the -k option:gzip -k filename
gzip cannot compress directories directly. However, you can use tar in combination with gzip to compress a directory:tar cfz archive.tar.gz directory/ c: Creates a new archive.
f: Specifies the name of the archive file.
z: Compresses the archive using gzip.
directory/: The directory you want to compress.
To view the contents of a .gz file without decompressing it fully, you can use the zcat command:zcat filename.gz
Or, to view it page-by-page with less:zless filename.gz
]]></description><link>linux-and-hpc/tools/gzip.html</link><guid isPermaLink="false">linux-and-hpc/tools/Gzip.md</guid><pubDate>Tue, 31 Dec 2024 21:57:06 GMT</pubDate></item><item><title><![CDATA[stdin stdout stderr]]></title><description><![CDATA[<a href=".?query=tag:linux" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#linux">#linux</a> <a href=".?query=tag:unix" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#unix">#unix</a> Usage:
stdout: data output from a command or file
stderr: Err info or prompt from a command
Sometimes you will write code like this:$ bowtie2 -x index -q input.fastq.gz -S aligned.sam &gt; test.out 906352 reads; of these: 906352 (100.00%) were unpaired; of these: 464827 (51.29%) aligned 0 times 439894 (48.53%) aligned exactly 1 time 1631 (0.18%) aligned &gt;1 times
48.71% overall alignment rate
You want to record the output, but the program still print things out. It is stderr not stdout. &gt; only write stdout.
&gt;: Redirect stdout to a file (overwrite).
&gt;&gt;: Redirect stdout to a file (append).
&lt;: Redirect stdin from a file.
2&gt;: Redirect stderr to a file (overwrite).
2&gt;&gt;: Redirect stderr to a file (append).
&amp;&gt;: Redirect both stdout and stderr to a file.
if [ ! -t 0 ]; then echo file and stdin read input echo $input
else echo terminal
fi
$ ./test.sh 123
terminal $ ./test.sh &lt; test.in
file and stdin
123
#!/bin/bash echo stdout
# redirect to stderr
echo stderr &gt;&amp;2
$ ./test.sh
stdout
stderr
$ ./test.sh &gt; test.out
stderr
$ ./test.sh 2&gt; test.err
stdout
$ ./test.sh &amp;&gt; test.both <br><a rel="noopener nofollow" class="external-link is-unresolved" href="https://www.howtogeek.com/435903/what-are-stdin-stdout-and-stderr-on-linux/" target="_self">https://www.howtogeek.com/435903/what-are-stdin-stdout-and-stderr-on-linux/</a>
]]></description><link>linux-and-hpc/linux/stdin-stdout-stderr.html</link><guid isPermaLink="false">linux-and-hpc/linux/stdin stdout stderr.md</guid><pubDate>Tue, 31 Dec 2024 21:28:38 GMT</pubDate></item><item><title><![CDATA[Machine Learning]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>ml/machine-learning.html</link><guid isPermaLink="false">ml/Machine Learning.md</guid><pubDate>Tue, 31 Dec 2024 18:36:34 GMT</pubDate></item><item><title><![CDATA[Molecular Cell Biology]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>molecular-cell-bio/molecular-cell-biology.html</link><guid isPermaLink="false">molecular-cell-bio/Molecular Cell Biology.md</guid><pubDate>Tue, 31 Dec 2024 18:36:30 GMT</pubDate></item><item><title><![CDATA[Sequencing]]></title><description><![CDATA[<a href=".?query=tag:todo" class="tag is-unresolved" target="_self" rel="noopener nofollow" data-href="#todo">#todo</a> ]]></description><link>seq/sequencing.html</link><guid isPermaLink="false">seq/Sequencing.md</guid><pubDate>Tue, 31 Dec 2024 18:36:20 GMT</pubDate></item></channel></rss>